/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.ResBrand;
import up.god.jooq.tables.interfaces.IResBrand;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResBrandRecord extends UpdatableRecordImpl<ResBrandRecord> implements Record13<Long, String, String, String, String, Integer, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IResBrand {

    private static final long serialVersionUID = -1636549058;

    /**
     * Setter for <code>DB_HTL.RES_BRAND.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public ResBrandRecord setPkId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public Long getPkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.S_NAME</code>. name,S_NAME
     */
    @Override
    public ResBrandRecord setSName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.S_NAME</code>. name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.S_CODE</code>. code,S_CODE
     */
    @Override
    public ResBrandRecord setSCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.S_TRADEMARK</code>. 品牌商标,trademark,S_TRADEMARK
     */
    @Override
    public ResBrandRecord setSTrademark(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.S_TRADEMARK</code>. 品牌商标,trademark,S_TRADEMARK
     */
    @Override
    public String getSTrademark() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public ResBrandRecord setJConfig(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.I_ORDER</code>. order,I_ORDER
     */
    @Override
    public ResBrandRecord setIOrder(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.I_ORDER</code>. order,I_ORDER
     */
    @Override
    public Integer getIOrder() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public ResBrandRecord setIsActive(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public ResBrandRecord setZSigma(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public ResBrandRecord setZLanguage(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public ResBrandRecord setZCreateBy(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public ResBrandRecord setZCreateTime(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public ResBrandRecord setZUpdateBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.RES_BRAND.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public ResBrandRecord setZUpdateTime(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BRAND.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, String, String, String, String, Integer, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, String, String, String, String, Integer, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ResBrand.RES_BRAND.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ResBrand.RES_BRAND.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ResBrand.RES_BRAND.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ResBrand.RES_BRAND.S_TRADEMARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ResBrand.RES_BRAND.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return ResBrand.RES_BRAND.I_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return ResBrand.RES_BRAND.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ResBrand.RES_BRAND.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return ResBrand.RES_BRAND.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ResBrand.RES_BRAND.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field11() {
        return ResBrand.RES_BRAND.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return ResBrand.RES_BRAND.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field13() {
        return ResBrand.RES_BRAND.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSTrademark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getIOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component11() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component13() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSTrademark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getIOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value11() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value13() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value1(Long value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value2(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value3(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value4(String value) {
        setSTrademark(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value5(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value6(Integer value) {
        setIOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value7(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value8(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value9(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value10(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value11(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value12(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord value13(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResBrandRecord values(Long value1, String value2, String value3, String value4, String value5, Integer value6, Boolean value7, String value8, String value9, String value10, LocalDateTime value11, String value12, LocalDateTime value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IResBrand from) {
        setPkId(from.getPkId());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSTrademark(from.getSTrademark());
        setJConfig(from.getJConfig());
        setIOrder(from.getIOrder());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IResBrand> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResBrandRecord
     */
    public ResBrandRecord() {
        super(ResBrand.RES_BRAND);
    }

    /**
     * Create a detached, initialised ResBrandRecord
     */
    public ResBrandRecord(Long pkId, String sName, String sCode, String sTrademark, String jConfig, Integer iOrder, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(ResBrand.RES_BRAND);

        set(0, pkId);
        set(1, sName);
        set(2, sCode);
        set(3, sTrademark);
        set(4, jConfig);
        set(5, iOrder);
        set(6, isActive);
        set(7, zSigma);
        set(8, zLanguage);
        set(9, zCreateBy);
        set(10, zCreateTime);
        set(11, zUpdateBy);
        set(12, zUpdateTime);
    }
}
