/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.AtmIncoterm;
import up.god.jooq.tables.records.AtmIncotermRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AtmIncotermDao extends DAOImpl<AtmIncotermRecord, up.god.jooq.tables.pojos.AtmIncoterm, Long> implements VertxDAO<up.god.jooq.tables.records.AtmIncotermRecord,up.god.jooq.tables.pojos.AtmIncoterm,java.lang.Long> {

    /**
     * Create a new AtmIncotermDao without any configuration
     */
    public AtmIncotermDao() {
        super(AtmIncoterm.ATM_INCOTERM, up.god.jooq.tables.pojos.AtmIncoterm.class);
    }

    /**
     * Create a new AtmIncotermDao with an attached configuration
     */
    public AtmIncotermDao(Configuration configuration) {
        super(AtmIncoterm.ATM_INCOTERM, up.god.jooq.tables.pojos.AtmIncoterm.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(up.god.jooq.tables.pojos.AtmIncoterm object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByPkId(Long... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.AtmIncoterm fetchOneByPkId(Long value) {
        return fetchOne(AtmIncoterm.ATM_INCOTERM.PK_ID, value);
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByTComment(String... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.T_COMMENT, values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchBySName(String... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchBySCode(String... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.S_CODE, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByJConfig(String... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByIsActive(Boolean... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByZSigma(String... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByZLanguage(String... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByZCreateBy(String... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByZUpdateBy(String... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AtmIncoterm> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(AtmIncoterm.ATM_INCOTERM.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByPkIdAsync(List<Long> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.AtmIncoterm> fetchOneByPkIdAsync(Long value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByTCommentAsync(List<String> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.T_COMMENT,values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchBySNameAsync(List<String> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.S_NAME,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.S_CODE,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AtmIncoterm>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(AtmIncoterm.ATM_INCOTERM.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
