/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.ResContract;
import up.god.jooq.tables.records.ResContractRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResContractDao extends DAOImpl<ResContractRecord, up.god.jooq.tables.pojos.ResContract, Long> implements VertxDAO<up.god.jooq.tables.records.ResContractRecord,up.god.jooq.tables.pojos.ResContract,java.lang.Long> {

    /**
     * Create a new ResContractDao without any configuration
     */
    public ResContractDao() {
        super(ResContract.RES_CONTRACT, up.god.jooq.tables.pojos.ResContract.class);
    }

    /**
     * Create a new ResContractDao with an attached configuration
     */
    public ResContractDao(Configuration configuration) {
        super(ResContract.RES_CONTRACT, up.god.jooq.tables.pojos.ResContract.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(up.god.jooq.tables.pojos.ResContract object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByPkId(Long... values) {
        return fetch(ResContract.RES_CONTRACT.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.ResContract fetchOneByPkId(Long value) {
        return fetchOne(ResContract.RES_CONTRACT.PK_ID, value);
    }

    /**
     * Fetch records that have <code>D_RUNUP_LIMIT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByDRunupLimit(BigDecimal... values) {
        return fetch(ResContract.RES_CONTRACT.D_RUNUP_LIMIT, values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchBySName(String... values) {
        return fetch(ResContract.RES_CONTRACT.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchBySCode(String... values) {
        return fetch(ResContract.RES_CONTRACT.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_OPTOR_MOBILE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchBySOptorMobile(String... values) {
        return fetch(ResContract.RES_CONTRACT.S_OPTOR_MOBILE, values);
    }

    /**
     * Fetch records that have <code>S_OPTOR_NAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchBySOptorName(String... values) {
        return fetch(ResContract.RES_CONTRACT.S_OPTOR_NAME, values);
    }

    /**
     * Fetch records that have <code>S_PHONE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchBySPhone(String... values) {
        return fetch(ResContract.RES_CONTRACT.S_PHONE, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByJConfig(String... values) {
        return fetch(ResContract.RES_CONTRACT.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>RLT_CONTRACT_ITEM IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByRltContractItem(Long... values) {
        return fetch(ResContract.RES_CONTRACT.RLT_CONTRACT_ITEM, values);
    }

    /**
     * Fetch records that have <code>RLT_CONTRACT_TYPE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByRltContractType(Long... values) {
        return fetch(ResContract.RES_CONTRACT.RLT_CONTRACT_TYPE, values);
    }

    /**
     * Fetch records that have <code>R_COMPANY_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByRCompanyId(Long... values) {
        return fetch(ResContract.RES_CONTRACT.R_COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>R_OPERATOR_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByROperatorId(String... values) {
        return fetch(ResContract.RES_CONTRACT.R_OPERATOR_ID, values);
    }

    /**
     * Fetch records that have <code>IS_RUNUP IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByIsRunup(Boolean... values) {
        return fetch(ResContract.RES_CONTRACT.IS_RUNUP, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByIsActive(Boolean... values) {
        return fetch(ResContract.RES_CONTRACT.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByZSigma(String... values) {
        return fetch(ResContract.RES_CONTRACT.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByZLanguage(String... values) {
        return fetch(ResContract.RES_CONTRACT.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByZCreateBy(String... values) {
        return fetch(ResContract.RES_CONTRACT.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(ResContract.RES_CONTRACT.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByZUpdateBy(String... values) {
        return fetch(ResContract.RES_CONTRACT.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResContract> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(ResContract.RES_CONTRACT.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByPkIdAsync(List<Long> values) {
        return fetchAsync(ResContract.RES_CONTRACT.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.ResContract> fetchOneByPkIdAsync(Long value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>D_RUNUP_LIMIT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByDRunupLimitAsync(List<BigDecimal> values) {
        return fetchAsync(ResContract.RES_CONTRACT.D_RUNUP_LIMIT,values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchBySNameAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.S_NAME,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_OPTOR_MOBILE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchBySOptorMobileAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.S_OPTOR_MOBILE,values);
    }

    /**
     * Fetch records that have <code>S_OPTOR_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchBySOptorNameAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.S_OPTOR_NAME,values);
    }

    /**
     * Fetch records that have <code>S_PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchBySPhoneAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.S_PHONE,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>RLT_CONTRACT_ITEM IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByRltContractItemAsync(List<Long> values) {
        return fetchAsync(ResContract.RES_CONTRACT.RLT_CONTRACT_ITEM,values);
    }

    /**
     * Fetch records that have <code>RLT_CONTRACT_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByRltContractTypeAsync(List<Long> values) {
        return fetchAsync(ResContract.RES_CONTRACT.RLT_CONTRACT_TYPE,values);
    }

    /**
     * Fetch records that have <code>R_COMPANY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByRCompanyIdAsync(List<Long> values) {
        return fetchAsync(ResContract.RES_CONTRACT.R_COMPANY_ID,values);
    }

    /**
     * Fetch records that have <code>R_OPERATOR_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByROperatorIdAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.R_OPERATOR_ID,values);
    }

    /**
     * Fetch records that have <code>IS_RUNUP IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByIsRunupAsync(List<Boolean> values) {
        return fetchAsync(ResContract.RES_CONTRACT.IS_RUNUP,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(ResContract.RES_CONTRACT.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(ResContract.RES_CONTRACT.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(ResContract.RES_CONTRACT.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResContract>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(ResContract.RES_CONTRACT.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
