/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.PsiOrdOut;
import up.god.jooq.tables.records.PsiOrdOutRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsiOrdOutDao extends DAOImpl<PsiOrdOutRecord, up.god.jooq.tables.pojos.PsiOrdOut, String> implements VertxDAO<up.god.jooq.tables.records.PsiOrdOutRecord,up.god.jooq.tables.pojos.PsiOrdOut,java.lang.String> {

    /**
     * Create a new PsiOrdOutDao without any configuration
     */
    public PsiOrdOutDao() {
        super(PsiOrdOut.PSI_ORD_OUT, up.god.jooq.tables.pojos.PsiOrdOut.class);
    }

    /**
     * Create a new PsiOrdOutDao with an attached configuration
     */
    public PsiOrdOutDao(Configuration configuration) {
        super(PsiOrdOut.PSI_ORD_OUT, up.god.jooq.tables.pojos.PsiOrdOut.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(up.god.jooq.tables.pojos.PsiOrdOut object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByPkId(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.PsiOrdOut fetchOneByPkId(String value) {
        return fetchOne(PsiOrdOut.PSI_ORD_OUT.PK_ID, value);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchBySName(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchBySCode(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_GODOWN IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchBySGodown(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.S_GODOWN, values);
    }

    /**
     * Fetch records that have <code>S_MANAGER IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchBySManager(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.S_MANAGER, values);
    }

    /**
     * Fetch records that have <code>S_OPERATOR IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchBySOperator(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.S_OPERATOR, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByJConfig(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>R_DEPT_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByRDeptId(Long... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.R_DEPT_ID, values);
    }

    /**
     * Fetch records that have <code>R_ORDER_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByROrderId(Long... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.R_ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>R_WH_OUT_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByRWhOutId(Long... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.R_WH_OUT_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByIsActive(Boolean... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByZSigma(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByZLanguage(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByZCreateBy(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByZUpdateBy(String... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.PsiOrdOut> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(PsiOrdOut.PSI_ORD_OUT.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByPkIdAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.PsiOrdOut> fetchOneByPkIdAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchBySNameAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.S_NAME,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_GODOWN IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchBySGodownAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.S_GODOWN,values);
    }

    /**
     * Fetch records that have <code>S_MANAGER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchBySManagerAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.S_MANAGER,values);
    }

    /**
     * Fetch records that have <code>S_OPERATOR IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchBySOperatorAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.S_OPERATOR,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>R_DEPT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByRDeptIdAsync(List<Long> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.R_DEPT_ID,values);
    }

    /**
     * Fetch records that have <code>R_ORDER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByROrderIdAsync(List<Long> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.R_ORDER_ID,values);
    }

    /**
     * Fetch records that have <code>R_WH_OUT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByRWhOutIdAsync(List<Long> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.R_WH_OUT_ID,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.PsiOrdOut>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(PsiOrdOut.PSI_ORD_OUT.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
