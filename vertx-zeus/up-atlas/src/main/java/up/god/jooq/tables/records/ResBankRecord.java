/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.ResBank;
import up.god.jooq.tables.interfaces.IResBank;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResBankRecord extends UpdatableRecordImpl<ResBankRecord> implements IResBank {

    private static final long serialVersionUID = -1179035269;

    /**
     * Setter for <code>DB_HTL.RES_BANK.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public ResBankRecord setPkId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public Long getPkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.T_ADDRESS</code>. address,T_ADDRESS
     */
    @Override
    public ResBankRecord setTAddress(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.T_ADDRESS</code>. address,T_ADDRESS
     */
    @Override
    public String getTAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.T_COMMENT</code>. comment,T_COMMENT
     */
    @Override
    public ResBankRecord setTComment(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.T_COMMENT</code>. comment,T_COMMENT
     */
    @Override
    public String getTComment() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.T_STREET</code>. street,T_STREET
     */
    @Override
    public ResBankRecord setTStreet(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.T_STREET</code>. street,T_STREET
     */
    @Override
    public String getTStreet() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_NAME</code>. name,S_NAME
     */
    @Override
    public ResBankRecord setSName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_NAME</code>. name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_CODE</code>. code,S_CODE
     */
    @Override
    public ResBankRecord setSCode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_BIC</code>. 相当于Swift Code，基本银行代码，全球广泛使用,bic,S_BIC
     */
    @Override
    public ResBankRecord setSBic(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_BIC</code>. 相当于Swift Code，基本银行代码，全球广泛使用,bic,S_BIC
     */
    @Override
    public String getSBic() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_CITY</code>. city,S_CITY
     */
    @Override
    public ResBankRecord setSCity(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_CITY</code>. city,S_CITY
     */
    @Override
    public String getSCity() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_COUNTRY</code>. country,S_COUNTRY
     */
    @Override
    public ResBankRecord setSCountry(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_COUNTRY</code>. country,S_COUNTRY
     */
    @Override
    public String getSCountry() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_DISTINCT</code>. distinct,S_DISTINCT
     */
    @Override
    public ResBankRecord setSDistinct(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_DISTINCT</code>. distinct,S_DISTINCT
     */
    @Override
    public String getSDistinct() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_EMAIL</code>. 银行Email,email,S_EMAIL
     */
    @Override
    public ResBankRecord setSEmail(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_EMAIL</code>. 银行Email,email,S_EMAIL
     */
    @Override
    public String getSEmail() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_FAX</code>. 传真号,fax,S_FAX
     */
    @Override
    public ResBankRecord setSFax(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_FAX</code>. 传真号,fax,S_FAX
     */
    @Override
    public String getSFax() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_PHONE</code>. 客服电话,phone,S_PHONE
     */
    @Override
    public ResBankRecord setSPhone(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_PHONE</code>. 客服电话,phone,S_PHONE
     */
    @Override
    public String getSPhone() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_STATE</code>. state,S_STATE
     */
    @Override
    public ResBankRecord setSState(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_STATE</code>. state,S_STATE
     */
    @Override
    public String getSState() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.S_ZIP</code>. 邮政编码,zip,S_ZIP
     */
    @Override
    public ResBankRecord setSZip(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.S_ZIP</code>. 邮政编码,zip,S_ZIP
     */
    @Override
    public String getSZip() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public ResBankRecord setJConfig(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public ResBankRecord setIsActive(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public ResBankRecord setZSigma(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public ResBankRecord setZLanguage(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public ResBankRecord setZCreateBy(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(19);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public ResBankRecord setZCreateTime(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public ResBankRecord setZUpdateBy(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(21);
    }

    /**
     * Setter for <code>DB_HTL.RES_BANK.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public ResBankRecord setZUpdateTime(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_BANK.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IResBank from) {
        setPkId(from.getPkId());
        setTAddress(from.getTAddress());
        setTComment(from.getTComment());
        setTStreet(from.getTStreet());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSBic(from.getSBic());
        setSCity(from.getSCity());
        setSCountry(from.getSCountry());
        setSDistinct(from.getSDistinct());
        setSEmail(from.getSEmail());
        setSFax(from.getSFax());
        setSPhone(from.getSPhone());
        setSState(from.getSState());
        setSZip(from.getSZip());
        setJConfig(from.getJConfig());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IResBank> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResBankRecord
     */
    public ResBankRecord() {
        super(ResBank.RES_BANK);
    }

    /**
     * Create a detached, initialised ResBankRecord
     */
    public ResBankRecord(Long pkId, String tAddress, String tComment, String tStreet, String sName, String sCode, String sBic, String sCity, String sCountry, String sDistinct, String sEmail, String sFax, String sPhone, String sState, String sZip, String jConfig, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(ResBank.RES_BANK);

        set(0, pkId);
        set(1, tAddress);
        set(2, tComment);
        set(3, tStreet);
        set(4, sName);
        set(5, sCode);
        set(6, sBic);
        set(7, sCity);
        set(8, sCountry);
        set(9, sDistinct);
        set(10, sEmail);
        set(11, sFax);
        set(12, sPhone);
        set(13, sState);
        set(14, sZip);
        set(15, jConfig);
        set(16, isActive);
        set(17, zSigma);
        set(18, zLanguage);
        set(19, zCreateBy);
        set(20, zCreateTime);
        set(21, zUpdateBy);
        set(22, zUpdateTime);
    }
}
