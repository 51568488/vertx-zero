/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.SecRelRolePerm;
import up.god.jooq.tables.records.SecRelRolePermRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecRelRolePermDao extends DAOImpl<SecRelRolePermRecord, up.god.jooq.tables.pojos.SecRelRolePerm, Record2<String, String>> implements VertxDAO<up.god.jooq.tables.records.SecRelRolePermRecord,up.god.jooq.tables.pojos.SecRelRolePerm,org.jooq.Record2<java.lang.String, java.lang.String>> {

    /**
     * Create a new SecRelRolePermDao without any configuration
     */
    public SecRelRolePermDao() {
        super(SecRelRolePerm.SEC_REL_ROLE_PERM, up.god.jooq.tables.pojos.SecRelRolePerm.class);
    }

    /**
     * Create a new SecRelRolePermDao with an attached configuration
     */
    public SecRelRolePermDao(Configuration configuration) {
        super(SecRelRolePerm.SEC_REL_ROLE_PERM, up.god.jooq.tables.pojos.SecRelRolePerm.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(up.god.jooq.tables.pojos.SecRelRolePerm object) {
        return compositeKeyRecord(object.getRRoleId(), object.getRPermissionId());
    }

    /**
     * Fetch records that have <code>R_PERMISSION_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRelRolePerm> fetchByRPermissionId(String... values) {
        return fetch(SecRelRolePerm.SEC_REL_ROLE_PERM.R_PERMISSION_ID, values);
    }

    /**
     * Fetch records that have <code>R_ROLE_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRelRolePerm> fetchByRRoleId(String... values) {
        return fetch(SecRelRolePerm.SEC_REL_ROLE_PERM.R_ROLE_ID, values);
    }

    /**
     * Fetch records that have <code>R_PERMISSION_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRelRolePerm>> fetchByRPermissionIdAsync(List<String> values) {
        return fetchAsync(SecRelRolePerm.SEC_REL_ROLE_PERM.R_PERMISSION_ID,values);
    }

    /**
     * Fetch records that have <code>R_ROLE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRelRolePerm>> fetchByRRoleIdAsync(List<String> values) {
        return fetchAsync(SecRelRolePerm.SEC_REL_ROLE_PERM.R_ROLE_ID,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
