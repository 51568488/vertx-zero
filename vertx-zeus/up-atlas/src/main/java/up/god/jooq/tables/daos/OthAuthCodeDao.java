/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.OthAuthCode;
import up.god.jooq.tables.records.OthAuthCodeRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OthAuthCodeDao extends DAOImpl<OthAuthCodeRecord, up.god.jooq.tables.pojos.OthAuthCode, String> implements VertxDAO<up.god.jooq.tables.records.OthAuthCodeRecord,up.god.jooq.tables.pojos.OthAuthCode,java.lang.String> {

    /**
     * Create a new OthAuthCodeDao without any configuration
     */
    public OthAuthCodeDao() {
        super(OthAuthCode.OTH_AUTH_CODE, up.god.jooq.tables.pojos.OthAuthCode.class);
    }

    /**
     * Create a new OthAuthCodeDao with an attached configuration
     */
    public OthAuthCodeDao(Configuration configuration) {
        super(OthAuthCode.OTH_AUTH_CODE, up.god.jooq.tables.pojos.OthAuthCode.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(up.god.jooq.tables.pojos.OthAuthCode object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByPkId(String... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.OthAuthCode fetchOneByPkId(String value) {
        return fetchOne(OthAuthCode.OTH_AUTH_CODE.PK_ID, value);
    }

    /**
     * Fetch records that have <code>B_AUTH IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByBAuth(byte[]... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.B_AUTH, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchBySCode(String... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_STATE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchBySState(String... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.S_STATE, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByJConfig(String... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByIsActive(Boolean... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByZSigma(String... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByZLanguage(String... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByZCreateBy(String... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByZUpdateBy(String... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.OthAuthCode> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(OthAuthCode.OTH_AUTH_CODE.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByPkIdAsync(List<String> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.OthAuthCode> fetchOneByPkIdAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>B_AUTH IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByBAuthAsync(List<byte[]> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.B_AUTH,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_STATE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchBySStateAsync(List<String> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.S_STATE,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.OthAuthCode>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(OthAuthCode.OTH_AUTH_CODE.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
