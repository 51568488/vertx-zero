/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IVLctDistinct extends Serializable {

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.PK_ID</code>. uniqueId,PK_ID
     */
    public IVLctDistinct setPkId(Long value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.PK_ID</code>. uniqueId,PK_ID
     */
    public Long getPkId();

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.S_NAME</code>. 名称,name,S_NAME
     */
    public IVLctDistinct setSName(String value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.S_NAME</code>. 名称,name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.I_ORDER</code>. 区域排序,order,I_ORDER
     */
    public IVLctDistinct setIOrder(Integer value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.I_ORDER</code>. 区域排序,order,I_ORDER
     */
    public Integer getIOrder();

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IVLctDistinct setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.R_CITY_ID</code>. uniqueId,PK_ID
     */
    public IVLctDistinct setRCityId(Long value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.R_CITY_ID</code>. uniqueId,PK_ID
     */
    public Long getRCityId();

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.S_CITY_NAME</code>. 城市名,name,S_NAME
     */
    public IVLctDistinct setSCityName(String value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.S_CITY_NAME</code>. 城市名,name,S_NAME
     */
    public String getSCityName();

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.R_STATE_ID</code>. uniqueId,PK_ID
     */
    public IVLctDistinct setRStateId(Long value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.R_STATE_ID</code>. uniqueId,PK_ID
     */
    public Long getRStateId();

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.S_STATE_NAME</code>. 全名,name,S_NAME
     */
    public IVLctDistinct setSStateName(String value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.S_STATE_NAME</code>. 全名,name,S_NAME
     */
    public String getSStateName();

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.R_COUNTRY_ID</code>. uniqueId,PK_ID
     */
    public IVLctDistinct setRCountryId(Long value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.R_COUNTRY_ID</code>. uniqueId,PK_ID
     */
    public Long getRCountryId();

    /**
     * Setter for <code>DB_HTL.v_lct_distinct.S_COUNTRY_NAME</code>. 国家名称,name,S_NAME
     */
    public IVLctDistinct setSCountryName(String value);

    /**
     * Getter for <code>DB_HTL.v_lct_distinct.S_COUNTRY_NAME</code>. 国家名称,name,S_NAME
     */
    public String getSCountryName();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IVLctDistinct
     */
    public void from(up.god.jooq.tables.interfaces.IVLctDistinct from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IVLctDistinct
     */
    public <E extends up.god.jooq.tables.interfaces.IVLctDistinct> E into(E into);

    default IVLctDistinct fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getLong("PK_ID"));
        setSName(json.getString("S_NAME"));
        setIOrder(json.getInteger("I_ORDER"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setRCityId(json.getLong("R_CITY_ID"));
        setSCityName(json.getString("S_CITY_NAME"));
        setRStateId(json.getLong("R_STATE_ID"));
        setSStateName(json.getString("S_STATE_NAME"));
        setRCountryId(json.getLong("R_COUNTRY_ID"));
        setSCountryName(json.getString("S_COUNTRY_NAME"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("S_NAME",getSName());
        json.put("I_ORDER",getIOrder());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("R_CITY_ID",getRCityId());
        json.put("S_CITY_NAME",getSCityName());
        json.put("R_STATE_ID",getRStateId());
        json.put("S_STATE_NAME",getSStateName());
        json.put("R_COUNTRY_ID",getRCountryId());
        json.put("S_COUNTRY_NAME",getSCountryName());
        return json;
    }

}
