/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IHtlCodeCommission extends Serializable {

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.PK_ID</code>. uniqueId,PK_ID
     */
    public IHtlCodeCommission setPkId(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.PK_ID</code>. uniqueId,PK_ID
     */
    public Long getPkId();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.D_BASEPRICE</code>. 【数据】如果是按百分比，则该值为小于1的比例，如果是固定值则是固定数据表示价格。,basePrice,D_BASEPRICE
     */
    public IHtlCodeCommission setDBaseprice(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.D_BASEPRICE</code>. 【数据】如果是按百分比，则该值为小于1的比例，如果是固定值则是固定数据表示价格。,basePrice,D_BASEPRICE
     */
    public BigDecimal getDBaseprice();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.D_END_TIME</code>. 【结束时间】该佣金码有效的结束时间,endTime,D_END_TIME
     */
    public IHtlCodeCommission setDEndTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.D_END_TIME</code>. 【结束时间】该佣金码有效的结束时间,endTime,D_END_TIME
     */
    public LocalDateTime getDEndTime();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.D_LIMIT</code>. 【数据】底限。,limit,D_LIMIT
     */
    public IHtlCodeCommission setDLimit(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.D_LIMIT</code>. 【数据】底限。,limit,D_LIMIT
     */
    public BigDecimal getDLimit();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.D_START_TIME</code>. 【开始时间】该佣金码有效的开始时间,startTime,D_START_TIME
     */
    public IHtlCodeCommission setDStartTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.D_START_TIME</code>. 【开始时间】该佣金码有效的开始时间,startTime,D_START_TIME
     */
    public LocalDateTime getDStartTime();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.S_NAME</code>. 【佣金码名称】,name,S_NAME
     */
    public IHtlCodeCommission setSName(String value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.S_NAME</code>. 【佣金码名称】,name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.S_CODE</code>. code,S_CODE
     */
    public IHtlCodeCommission setSCode(String value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.J_CONFIG</code>. config,J_CONFIG
     */
    public IHtlCodeCommission setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.RLT_PAYBACK</code>. REF: SYS_TABULAR【返佣类型】关联到返佣类型信息,payback,RLT_PAYBACK
     */
    public IHtlCodeCommission setRltPayback(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.RLT_PAYBACK</code>. REF: SYS_TABULAR【返佣类型】关联到返佣类型信息,payback,RLT_PAYBACK
     */
    public Long getRltPayback();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.RLT_TYPE</code>. REF: SYS_TABULAR【类型】佣金码类型,type,RLT_TYPE
     */
    public IHtlCodeCommission setRltType(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.RLT_TYPE</code>. REF: SYS_TABULAR【类型】佣金码类型,type,RLT_TYPE
     */
    public Long getRltType();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.R_HOTEL_ID</code>. REF: HTL_HOTEL【酒店信息】该佣金码对应的酒店信息,hotelId,R_HOTEL_ID
     */
    public IHtlCodeCommission setRHotelId(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.R_HOTEL_ID</code>. REF: HTL_HOTEL【酒店信息】该佣金码对应的酒店信息,hotelId,R_HOTEL_ID
     */
    public Long getRHotelId();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.R_ROOM_TYPE_ID</code>. REF: HTL_ROOM_TYPE【房型信息】该佣金码对应的房型,roomTypeId,R_ROOM_TYPE_ID
     */
    public IHtlCodeCommission setRRoomTypeId(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.R_ROOM_TYPE_ID</code>. REF: HTL_ROOM_TYPE【房型信息】该佣金码对应的房型,roomTypeId,R_ROOM_TYPE_ID
     */
    public Long getRRoomTypeId();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IHtlCodeCommission setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IHtlCodeCommission setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IHtlCodeCommission setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IHtlCodeCommission setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IHtlCodeCommission setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IHtlCodeCommission setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IHtlCodeCommission setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_CODE_COMMISSION.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IHtlCodeCommission
     */
    public void from(up.god.jooq.tables.interfaces.IHtlCodeCommission from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IHtlCodeCommission
     */
    public <E extends up.god.jooq.tables.interfaces.IHtlCodeCommission> E into(E into);

    default IHtlCodeCommission fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getLong("PK_ID"));
        // Omitting unrecognized type java.math.BigDecimal for column D_BASEPRICE!
        // Omitting unrecognized type java.time.LocalDateTime for column D_END_TIME!
        // Omitting unrecognized type java.math.BigDecimal for column D_LIMIT!
        // Omitting unrecognized type java.time.LocalDateTime for column D_START_TIME!
        setSName(json.getString("S_NAME"));
        setSCode(json.getString("S_CODE"));
        setJConfig(json.getString("J_CONFIG"));
        setRltPayback(json.getLong("RLT_PAYBACK"));
        setRltType(json.getLong("RLT_TYPE"));
        setRHotelId(json.getLong("R_HOTEL_ID"));
        setRRoomTypeId(json.getLong("R_ROOM_TYPE_ID"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        // Omitting unrecognized type java.math.BigDecimal for column D_BASEPRICE!
        // Omitting unrecognized type java.time.LocalDateTime for column D_END_TIME!
        // Omitting unrecognized type java.math.BigDecimal for column D_LIMIT!
        // Omitting unrecognized type java.time.LocalDateTime for column D_START_TIME!
        json.put("S_NAME",getSName());
        json.put("S_CODE",getSCode());
        json.put("J_CONFIG",getJConfig());
        json.put("RLT_PAYBACK",getRltPayback());
        json.put("RLT_TYPE",getRltType());
        json.put("R_HOTEL_ID",getRHotelId());
        json.put("R_ROOM_TYPE_ID",getRRoomTypeId());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
