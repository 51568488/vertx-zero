/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.ResCard;
import up.god.jooq.tables.records.ResCardRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResCardDao extends DAOImpl<ResCardRecord, up.god.jooq.tables.pojos.ResCard, String> implements VertxDAO<up.god.jooq.tables.records.ResCardRecord,up.god.jooq.tables.pojos.ResCard,java.lang.String> {

    /**
     * Create a new ResCardDao without any configuration
     */
    public ResCardDao() {
        super(ResCard.RES_CARD, up.god.jooq.tables.pojos.ResCard.class);
    }

    /**
     * Create a new ResCardDao with an attached configuration
     */
    public ResCardDao(Configuration configuration) {
        super(ResCard.RES_CARD, up.god.jooq.tables.pojos.ResCard.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(up.god.jooq.tables.pojos.ResCard object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByPkId(String... values) {
        return fetch(ResCard.RES_CARD.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.ResCard fetchOneByPkId(String value) {
        return fetchOne(ResCard.RES_CARD.PK_ID, value);
    }

    /**
     * Fetch records that have <code>D_AMOUNT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByDAmount(BigDecimal... values) {
        return fetch(ResCard.RES_CARD.D_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>D_EXPIRED_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByDExpiredTime(LocalDateTime... values) {
        return fetch(ResCard.RES_CARD.D_EXPIRED_TIME, values);
    }

    /**
     * Fetch records that have <code>L_POINT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByLPoint(Long... values) {
        return fetch(ResCard.RES_CARD.L_POINT, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchBySCode(String... values) {
        return fetch(ResCard.RES_CARD.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_BATCH IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchBySBatch(String... values) {
        return fetch(ResCard.RES_CARD.S_BATCH, values);
    }

    /**
     * Fetch records that have <code>S_NUMBER IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchBySNumber(String... values) {
        return fetch(ResCard.RES_CARD.S_NUMBER, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByJConfig(String... values) {
        return fetch(ResCard.RES_CARD.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>RLT_CARD_TYPE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByRltCardType(Long... values) {
        return fetch(ResCard.RES_CARD.RLT_CARD_TYPE, values);
    }

    /**
     * Fetch records that have <code>R_MEMBER_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByRMemberId(String... values) {
        return fetch(ResCard.RES_CARD.R_MEMBER_ID, values);
    }

    /**
     * Fetch records that have <code>IS_MAJOR IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByIsMajor(Boolean... values) {
        return fetch(ResCard.RES_CARD.IS_MAJOR, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByIsActive(Boolean... values) {
        return fetch(ResCard.RES_CARD.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByZSigma(String... values) {
        return fetch(ResCard.RES_CARD.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByZLanguage(String... values) {
        return fetch(ResCard.RES_CARD.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByZCreateBy(String... values) {
        return fetch(ResCard.RES_CARD.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(ResCard.RES_CARD.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByZUpdateBy(String... values) {
        return fetch(ResCard.RES_CARD.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResCard> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(ResCard.RES_CARD.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByPkIdAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.ResCard> fetchOneByPkIdAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>D_AMOUNT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByDAmountAsync(List<BigDecimal> values) {
        return fetchAsync(ResCard.RES_CARD.D_AMOUNT,values);
    }

    /**
     * Fetch records that have <code>D_EXPIRED_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByDExpiredTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(ResCard.RES_CARD.D_EXPIRED_TIME,values);
    }

    /**
     * Fetch records that have <code>L_POINT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByLPointAsync(List<Long> values) {
        return fetchAsync(ResCard.RES_CARD.L_POINT,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_BATCH IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchBySBatchAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.S_BATCH,values);
    }

    /**
     * Fetch records that have <code>S_NUMBER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchBySNumberAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.S_NUMBER,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>RLT_CARD_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByRltCardTypeAsync(List<Long> values) {
        return fetchAsync(ResCard.RES_CARD.RLT_CARD_TYPE,values);
    }

    /**
     * Fetch records that have <code>R_MEMBER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByRMemberIdAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.R_MEMBER_ID,values);
    }

    /**
     * Fetch records that have <code>IS_MAJOR IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByIsMajorAsync(List<Boolean> values) {
        return fetchAsync(ResCard.RES_CARD.IS_MAJOR,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(ResCard.RES_CARD.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(ResCard.RES_CARD.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(ResCard.RES_CARD.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResCard>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(ResCard.RES_CARD.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
