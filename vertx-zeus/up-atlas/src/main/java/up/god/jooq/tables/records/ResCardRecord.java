/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.ResCard;
import up.god.jooq.tables.interfaces.IResCard;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResCardRecord extends UpdatableRecordImpl<ResCardRecord> implements Record18<String, BigDecimal, LocalDateTime, Long, String, String, String, String, Long, String, Boolean, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IResCard {

    private static final long serialVersionUID = 84976237;

    /**
     * Setter for <code>DB_HTL.RES_CARD.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public ResCardRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    @Override
    public ResCardRecord setDAmount(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    @Override
    public BigDecimal getDAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.D_EXPIRED_TIME</code>. 过期时间,expiredTime,D_EXPIRED_TIME
     */
    @Override
    public ResCardRecord setDExpiredTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.D_EXPIRED_TIME</code>. 过期时间,expiredTime,D_EXPIRED_TIME
     */
    @Override
    public LocalDateTime getDExpiredTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.L_POINT</code>. 积分,point,L_POINT
     */
    @Override
    public ResCardRecord setLPoint(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.L_POINT</code>. 积分,point,L_POINT
     */
    @Override
    public Long getLPoint() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.S_CODE</code>. code,S_CODE
     */
    @Override
    public ResCardRecord setSCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.S_BATCH</code>. 批次,batch,S_BATCH
     */
    @Override
    public ResCardRecord setSBatch(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.S_BATCH</code>. 批次,batch,S_BATCH
     */
    @Override
    public String getSBatch() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    @Override
    public ResCardRecord setSNumber(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    @Override
    public String getSNumber() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public ResCardRecord setJConfig(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.RLT_CARD_TYPE</code>. 类型,cardType,RLT_CARD_TYPE
     */
    @Override
    public ResCardRecord setRltCardType(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.RLT_CARD_TYPE</code>. 类型,cardType,RLT_CARD_TYPE
     */
    @Override
    public Long getRltCardType() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.R_MEMBER_ID</code>. memberId,R_MEMBER_ID
     */
    @Override
    public ResCardRecord setRMemberId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.R_MEMBER_ID</code>. memberId,R_MEMBER_ID
     */
    @Override
    public String getRMemberId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.IS_MAJOR</code>. 主卡,major,IS_MAJOR
     */
    @Override
    public ResCardRecord setIsMajor(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.IS_MAJOR</code>. 主卡,major,IS_MAJOR
     */
    @Override
    public Boolean getIsMajor() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public ResCardRecord setIsActive(Boolean value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public ResCardRecord setZSigma(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public ResCardRecord setZLanguage(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public ResCardRecord setZCreateBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public ResCardRecord setZCreateTime(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public ResCardRecord setZUpdateBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_HTL.RES_CARD.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public ResCardRecord setZUpdateTime(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CARD.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<String, BigDecimal, LocalDateTime, Long, String, String, String, String, Long, String, Boolean, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<String, BigDecimal, LocalDateTime, Long, String, String, String, String, Long, String, Boolean, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ResCard.RES_CARD.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field2() {
        return ResCard.RES_CARD.D_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return ResCard.RES_CARD.D_EXPIRED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return ResCard.RES_CARD.L_POINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ResCard.RES_CARD.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ResCard.RES_CARD.S_BATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ResCard.RES_CARD.S_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ResCard.RES_CARD.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return ResCard.RES_CARD.RLT_CARD_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ResCard.RES_CARD.R_MEMBER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field11() {
        return ResCard.RES_CARD.IS_MAJOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field12() {
        return ResCard.RES_CARD.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return ResCard.RES_CARD.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return ResCard.RES_CARD.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return ResCard.RES_CARD.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field16() {
        return ResCard.RES_CARD.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return ResCard.RES_CARD.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field18() {
        return ResCard.RES_CARD.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component2() {
        return getDAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getDExpiredTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getLPoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSBatch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getSNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getRltCardType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getRMemberId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component11() {
        return getIsMajor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component12() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component16() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component18() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value2() {
        return getDAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getDExpiredTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getLPoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSBatch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getSNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getRltCardType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getRMemberId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value11() {
        return getIsMajor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value12() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value16() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value18() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value2(BigDecimal value) {
        setDAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value3(LocalDateTime value) {
        setDExpiredTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value4(Long value) {
        setLPoint(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value5(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value6(String value) {
        setSBatch(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value7(String value) {
        setSNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value8(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value9(Long value) {
        setRltCardType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value10(String value) {
        setRMemberId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value11(Boolean value) {
        setIsMajor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value12(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value13(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value14(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value15(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value16(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value17(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord value18(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCardRecord values(String value1, BigDecimal value2, LocalDateTime value3, Long value4, String value5, String value6, String value7, String value8, Long value9, String value10, Boolean value11, Boolean value12, String value13, String value14, String value15, LocalDateTime value16, String value17, LocalDateTime value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IResCard from) {
        setPkId(from.getPkId());
        setDAmount(from.getDAmount());
        setDExpiredTime(from.getDExpiredTime());
        setLPoint(from.getLPoint());
        setSCode(from.getSCode());
        setSBatch(from.getSBatch());
        setSNumber(from.getSNumber());
        setJConfig(from.getJConfig());
        setRltCardType(from.getRltCardType());
        setRMemberId(from.getRMemberId());
        setIsMajor(from.getIsMajor());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IResCard> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResCardRecord
     */
    public ResCardRecord() {
        super(ResCard.RES_CARD);
    }

    /**
     * Create a detached, initialised ResCardRecord
     */
    public ResCardRecord(String pkId, BigDecimal dAmount, LocalDateTime dExpiredTime, Long lPoint, String sCode, String sBatch, String sNumber, String jConfig, Long rltCardType, String rMemberId, Boolean isMajor, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(ResCard.RES_CARD);

        set(0, pkId);
        set(1, dAmount);
        set(2, dExpiredTime);
        set(3, lPoint);
        set(4, sCode);
        set(5, sBatch);
        set(6, sNumber);
        set(7, jConfig);
        set(8, rltCardType);
        set(9, rMemberId);
        set(10, isMajor);
        set(11, isActive);
        set(12, zSigma);
        set(13, zLanguage);
        set(14, zCreateBy);
        set(15, zCreateTime);
        set(16, zUpdateBy);
        set(17, zUpdateTime);
    }
}
