/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.SysActivityLog;
import up.god.jooq.tables.records.SysActivityLogRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysActivityLogDao extends DAOImpl<SysActivityLogRecord, up.god.jooq.tables.pojos.SysActivityLog, String> implements VertxDAO<up.god.jooq.tables.records.SysActivityLogRecord,up.god.jooq.tables.pojos.SysActivityLog,java.lang.String> {

    /**
     * Create a new SysActivityLogDao without any configuration
     */
    public SysActivityLogDao() {
        super(SysActivityLog.SYS_ACTIVITY_LOG, up.god.jooq.tables.pojos.SysActivityLog.class);
    }

    /**
     * Create a new SysActivityLogDao with an attached configuration
     */
    public SysActivityLogDao(Configuration configuration) {
        super(SysActivityLog.SYS_ACTIVITY_LOG, up.god.jooq.tables.pojos.SysActivityLog.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(up.god.jooq.tables.pojos.SysActivityLog object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByPkId(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.SysActivityLog fetchOneByPkId(String value) {
        return fetchOne(SysActivityLog.SYS_ACTIVITY_LOG.PK_ID, value);
    }

    /**
     * Fetch records that have <code>D_LOG_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByDLogTime(LocalDateTime... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.D_LOG_TIME, values);
    }

    /**
     * Fetch records that have <code>T_DESCRIPTION IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByTDescription(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.T_DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchBySCode(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_IP IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchBySIp(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.S_IP, values);
    }

    /**
     * Fetch records that have <code>S_MENU IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchBySMenu(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.S_MENU, values);
    }

    /**
     * Fetch records that have <code>S_OPERATOR IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchBySOperator(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.S_OPERATOR, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByJConfig(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByIsActive(Boolean... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByZSigma(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByZLanguage(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByZCreateBy(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByZUpdateBy(String... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SysActivityLog> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(SysActivityLog.SYS_ACTIVITY_LOG.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByPkIdAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.SysActivityLog> fetchOneByPkIdAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>D_LOG_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByDLogTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.D_LOG_TIME,values);
    }

    /**
     * Fetch records that have <code>T_DESCRIPTION IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByTDescriptionAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.T_DESCRIPTION,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_IP IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchBySIpAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.S_IP,values);
    }

    /**
     * Fetch records that have <code>S_MENU IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchBySMenuAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.S_MENU,values);
    }

    /**
     * Fetch records that have <code>S_OPERATOR IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchBySOperatorAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.S_OPERATOR,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SysActivityLog>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(SysActivityLog.SYS_ACTIVITY_LOG.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
