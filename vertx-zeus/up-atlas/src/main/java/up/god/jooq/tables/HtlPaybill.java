/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.HtlPaybillRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlPaybill extends TableImpl<HtlPaybillRecord> {

    private static final long serialVersionUID = 1328376042;

    /**
     * The reference instance of <code>DB_HTL.HTL_PAYBILL</code>
     */
    public static final HtlPaybill HTL_PAYBILL = new HtlPaybill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HtlPaybillRecord> getRecordType() {
        return HtlPaybillRecord.class;
    }

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<HtlPaybillRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.D_AMOUNT_ACTUAL</code>. 【实际金额】所有订单项减去折扣后的实际金额（amountActual x quantity）总和。,amountActual,D_AMOUNT_ACTUAL
     */
    public final TableField<HtlPaybillRecord, BigDecimal> D_AMOUNT_ACTUAL = createField("D_AMOUNT_ACTUAL", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "【实际金额】所有订单项减去折扣后的实际金额（amountActual x quantity）总和。,amountActual,D_AMOUNT_ACTUAL");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public final TableField<HtlPaybillRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "【备注】账单相关备注信息,comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.V_HOTEL_ID</code>. VREF,hotelId,V_HOTEL_ID
     */
    public final TableField<HtlPaybillRecord, Long> V_HOTEL_ID = createField("V_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT, this, "VREF,hotelId,V_HOTEL_ID");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.V_ORDER_ID</code>. VREF: HTL_ORDERS【关联订单】该账单关联的订单ID,orderId,V_ORDER_ID
     */
    public final TableField<HtlPaybillRecord, Long> V_ORDER_ID = createField("V_ORDER_ID", org.jooq.impl.SQLDataType.BIGINT, this, "VREF: HTL_ORDERS【关联订单】该账单关联的订单ID,orderId,V_ORDER_ID");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.V_ROOM_NUM</code>. VREF：【账单房号】,roomNum,V_ROOM_NUM
     */
    public final TableField<HtlPaybillRecord, String> V_ROOM_NUM = createField("V_ROOM_NUM", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "VREF：【账单房号】,roomNum,V_ROOM_NUM");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.S_CODE</code>. code,S_CODE
     */
    public final TableField<HtlPaybillRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.S_SERIAL</code>. 【账单唯一编号】系统内部使用,serial,S_SERIAL
     */
    public final TableField<HtlPaybillRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "【账单唯一编号】系统内部使用,serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.S_TICKET_CODE</code>. 【单据类型】,ticketCode,S_TICKET_CODE
     */
    public final TableField<HtlPaybillRecord, String> S_TICKET_CODE = createField("S_TICKET_CODE", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "【单据类型】,ticketCode,S_TICKET_CODE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<HtlPaybillRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.I_ITEM_COUNT</code>. 明细数量,itemCount,I_ITEM_COUNT
     */
    public final TableField<HtlPaybillRecord, Integer> I_ITEM_COUNT = createField("I_ITEM_COUNT", org.jooq.impl.SQLDataType.INTEGER, this, "明细数量,itemCount,I_ITEM_COUNT");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<HtlPaybillRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<HtlPaybillRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<HtlPaybillRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<HtlPaybillRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<HtlPaybillRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<HtlPaybillRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<HtlPaybillRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.HTL_PAYBILL</code> table reference
     */
    public HtlPaybill() {
        this(DSL.name("HTL_PAYBILL"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_PAYBILL</code> table reference
     */
    public HtlPaybill(String alias) {
        this(DSL.name(alias), HTL_PAYBILL);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_PAYBILL</code> table reference
     */
    public HtlPaybill(Name alias) {
        this(alias, HTL_PAYBILL);
    }

    private HtlPaybill(Name alias, Table<HtlPaybillRecord> aliased) {
        this(alias, aliased, null);
    }

    private HtlPaybill(Name alias, Table<HtlPaybillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HTL_PAYBILL_PRIMARY, Indexes.HTL_PAYBILL_UK_HTL_PAYBILL_S_CODE_Z_SIGMA, Indexes.HTL_PAYBILL_UK_HTL_PAYBILL_S_SERIAL_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HtlPaybillRecord> getPrimaryKey() {
        return Keys.KEY_HTL_PAYBILL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HtlPaybillRecord>> getKeys() {
        return Arrays.<UniqueKey<HtlPaybillRecord>>asList(Keys.KEY_HTL_PAYBILL_PRIMARY, Keys.KEY_HTL_PAYBILL_UK_HTL_PAYBILL_S_CODE_Z_SIGMA, Keys.KEY_HTL_PAYBILL_UK_HTL_PAYBILL_S_SERIAL_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlPaybill as(String alias) {
        return new HtlPaybill(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlPaybill as(Name alias) {
        return new HtlPaybill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlPaybill rename(String name) {
        return new HtlPaybill(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlPaybill rename(Name name) {
        return new HtlPaybill(name, null);
    }
}
