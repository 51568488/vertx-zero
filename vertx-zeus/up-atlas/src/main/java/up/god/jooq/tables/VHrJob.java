/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VHrJobRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VHrJob extends TableImpl<VHrJobRecord> {

    private static final long serialVersionUID = -332992070;

    /**
     * The reference instance of <code>DB_HTL.v_hr_job</code>
     */
    public static final VHrJob V_HR_JOB = new VHrJob();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VHrJobRecord> getRecordType() {
        return VHrJobRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_hr_job.J_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHrJobRecord, Long> J_PK_ID = createField("J_PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_hr_job.J_S_NAME</code>. name,S_NAME
     */
    public final TableField<VHrJobRecord, String> J_S_NAME = createField("J_S_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.v_hr_job.S_STATUS</code>. status,S_STATUS
     */
    public final TableField<VHrJobRecord, String> S_STATUS = createField("S_STATUS", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "status,S_STATUS");

    /**
     * The column <code>DB_HTL.v_hr_job.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<VHrJobRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.v_hr_job.R_DEPT_ID</code>. departmentId,R_DEPT_ID
     */
    public final TableField<VHrJobRecord, Long> R_DEPT_ID = createField("R_DEPT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "departmentId,R_DEPT_ID");

    /**
     * The column <code>DB_HTL.v_hr_job.D_S_NAME</code>. 部门名称,name,S_NAME
     */
    public final TableField<VHrJobRecord, String> D_S_NAME = createField("D_S_NAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "部门名称,name,S_NAME");

    /**
     * The column <code>DB_HTL.v_hr_job.R_COMPANY_ID</code>. companyId,R_COMPANY_ID
     */
    public final TableField<VHrJobRecord, Long> R_COMPANY_ID = createField("R_COMPANY_ID", org.jooq.impl.SQLDataType.BIGINT, this, "companyId,R_COMPANY_ID");

    /**
     * The column <code>DB_HTL.v_hr_job.C_S_NAME</code>. name,S_NAME
     */
    public final TableField<VHrJobRecord, String> C_S_NAME = createField("C_S_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.v_hr_job.T_COMMENT</code>. comment,T_COMMENT
     */
    public final TableField<VHrJobRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.v_hr_job.T_REQUIREMENTS</code>. requirements,T_REQUIREMENTS
     */
    public final TableField<VHrJobRecord, String> T_REQUIREMENTS = createField("T_REQUIREMENTS", org.jooq.impl.SQLDataType.CLOB, this, "requirements,T_REQUIREMENTS");

    /**
     * The column <code>DB_HTL.v_hr_job.I_NO_RECRUIT</code>. 招聘数量,recruitNumber,I_NO_RECRUIT
     */
    public final TableField<VHrJobRecord, Integer> I_NO_RECRUIT = createField("I_NO_RECRUIT", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "招聘数量,recruitNumber,I_NO_RECRUIT");

    /**
     * The column <code>DB_HTL.v_hr_job.I_NO_HIRED</code>. 已招数量,hiredNumber,I_NO_HIRED
     */
    public final TableField<VHrJobRecord, Integer> I_NO_HIRED = createField("I_NO_HIRED", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "已招数量,hiredNumber,I_NO_HIRED");

    /**
     * The column <code>DB_HTL.v_hr_job.I_NO_EMPLOYEE</code>. 目前人数,employeeNumber,I_NO_EMPLOYEE
     */
    public final TableField<VHrJobRecord, Integer> I_NO_EMPLOYEE = createField("I_NO_EMPLOYEE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "目前人数,employeeNumber,I_NO_EMPLOYEE");

    /**
     * Create a <code>DB_HTL.v_hr_job</code> table reference
     */
    public VHrJob() {
        this(DSL.name("v_hr_job"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_hr_job</code> table reference
     */
    public VHrJob(String alias) {
        this(DSL.name(alias), V_HR_JOB);
    }

    /**
     * Create an aliased <code>DB_HTL.v_hr_job</code> table reference
     */
    public VHrJob(Name alias) {
        this(alias, V_HR_JOB);
    }

    private VHrJob(Name alias, Table<VHrJobRecord> aliased) {
        this(alias, aliased, null);
    }

    private VHrJob(Name alias, Table<VHrJobRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHrJob as(String alias) {
        return new VHrJob(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHrJob as(Name alias) {
        return new VHrJob(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VHrJob rename(String name) {
        return new VHrJob(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VHrJob rename(Name name) {
        return new VHrJob(name, null);
    }
}
