/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.HtlTravelerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlTraveler extends TableImpl<HtlTravelerRecord> {

    private static final long serialVersionUID = 1123109570;

    /**
     * The reference instance of <code>DB_HTL.HTL_TRAVELER</code>
     */
    public static final HtlTraveler HTL_TRAVELER = new HtlTraveler();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HtlTravelerRecord> getRecordType() {
        return HtlTravelerRecord.class;
    }

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<HtlTravelerRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.D_BIRTHDAY</code>. birthday,D_BIRTHDAY
     */
    public final TableField<HtlTravelerRecord, LocalDate> D_BIRTHDAY = createField("D_BIRTHDAY", org.jooq.impl.SQLDataType.LOCALDATE, this, "birthday,D_BIRTHDAY");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.T_ADDRESS</code>. address,T_ADDRESS
     */
    public final TableField<HtlTravelerRecord, String> T_ADDRESS = createField("T_ADDRESS", org.jooq.impl.SQLDataType.CLOB, this, "address,T_ADDRESS");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.V_HOTEL_ID</code>. hotelId,V_HOTEL_ID
     */
    public final TableField<HtlTravelerRecord, Long> V_HOTEL_ID = createField("V_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "hotelId,V_HOTEL_ID");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_CODE</code>. code,S_CODE
     */
    public final TableField<HtlTravelerRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_COUNTRY</code>. country,S_COUNTRY
     */
    public final TableField<HtlTravelerRecord, String> S_COUNTRY = createField("S_COUNTRY", org.jooq.impl.SQLDataType.VARCHAR(16), this, "country,S_COUNTRY");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_DRIVER_LIC</code>. driverLicense,S_DRIVER_LIC
     */
    public final TableField<HtlTravelerRecord, String> S_DRIVER_LIC = createField("S_DRIVER_LIC", org.jooq.impl.SQLDataType.VARCHAR(64), this, "driverLicense,S_DRIVER_LIC");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_IDC_NUM</code>. idcNumber,S_IDC_NUM
     */
    public final TableField<HtlTravelerRecord, String> S_IDC_NUM = createField("S_IDC_NUM", org.jooq.impl.SQLDataType.VARCHAR(32), this, "idcNumber,S_IDC_NUM");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_MOBILE</code>. mobile,S_MOBILE
     */
    public final TableField<HtlTravelerRecord, String> S_MOBILE = createField("S_MOBILE", org.jooq.impl.SQLDataType.VARCHAR(20), this, "mobile,S_MOBILE");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_NATION</code>. nation,S_NATION
     */
    public final TableField<HtlTravelerRecord, String> S_NATION = createField("S_NATION", org.jooq.impl.SQLDataType.VARCHAR(32), this, "nation,S_NATION");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public final TableField<HtlTravelerRecord, String> S_NICKNAME = createField("S_NICKNAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "nickname,S_NICKNAME");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_NTV_PLACE</code>. nativePlace,S_NTV_PLACE
     */
    public final TableField<HtlTravelerRecord, String> S_NTV_PLACE = createField("S_NTV_PLACE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "nativePlace,S_NTV_PLACE");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_REALNAME</code>. realname,S_REALNAME
     */
    public final TableField<HtlTravelerRecord, String> S_REALNAME = createField("S_REALNAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "realname,S_REALNAME");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.S_SERIAL</code>. serial,S_SERIAL
     */
    public final TableField<HtlTravelerRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<HtlTravelerRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.I_INOCCUPS</code>. inoccups,I_INOCCUPS
     */
    public final TableField<HtlTravelerRecord, Integer> I_INOCCUPS = createField("I_INOCCUPS", org.jooq.impl.SQLDataType.INTEGER, this, "inoccups,I_INOCCUPS");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.RLT_IDC_TYPE</code>. idcType,RLT_IDC_TYPE
     */
    public final TableField<HtlTravelerRecord, Long> RLT_IDC_TYPE = createField("RLT_IDC_TYPE", org.jooq.impl.SQLDataType.BIGINT, this, "idcType,RLT_IDC_TYPE");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.RLT_TRAVELER_STATUS</code>. status,RLT_TRAVELER_STATUS
     */
    public final TableField<HtlTravelerRecord, Long> RLT_TRAVELER_STATUS = createField("RLT_TRAVELER_STATUS", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "status,RLT_TRAVELER_STATUS");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.R_OPERATOR_ID</code>. operator,R_OPERATOR_ID
     */
    public final TableField<HtlTravelerRecord, String> R_OPERATOR_ID = createField("R_OPERATOR_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "operator,R_OPERATOR_ID");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.IS_MALE</code>. male,IS_MALE
     */
    public final TableField<HtlTravelerRecord, Boolean> IS_MALE = createField("IS_MALE", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "male,IS_MALE");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.IS_UPLOADED</code>. uploaded,IS_UPLOADED
     */
    public final TableField<HtlTravelerRecord, Boolean> IS_UPLOADED = createField("IS_UPLOADED", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "uploaded,IS_UPLOADED");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<HtlTravelerRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<HtlTravelerRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<HtlTravelerRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<HtlTravelerRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<HtlTravelerRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<HtlTravelerRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.HTL_TRAVELER.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<HtlTravelerRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.HTL_TRAVELER</code> table reference
     */
    public HtlTraveler() {
        this(DSL.name("HTL_TRAVELER"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_TRAVELER</code> table reference
     */
    public HtlTraveler(String alias) {
        this(DSL.name(alias), HTL_TRAVELER);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_TRAVELER</code> table reference
     */
    public HtlTraveler(Name alias) {
        this(alias, HTL_TRAVELER);
    }

    private HtlTraveler(Name alias, Table<HtlTravelerRecord> aliased) {
        this(alias, aliased, null);
    }

    private HtlTraveler(Name alias, Table<HtlTravelerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HTL_TRAVELER_FK_HTL_TRAVELER_R_OPERATOR_ID, Indexes.HTL_TRAVELER_PRIMARY, Indexes.HTL_TRAVELER_UK_HTL_TRAVELER_RLT_IDC_TYPE_S_IDC_NUM_V_HOTEL_ID_Z_SIGMA, Indexes.HTL_TRAVELER_UK_HTL_TRAVELER_S_CODE_Z_SIGMA, Indexes.HTL_TRAVELER_UK_HTL_TRAVELER_S_SERIAL_V_HOTEL_ID_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HtlTravelerRecord> getPrimaryKey() {
        return Keys.KEY_HTL_TRAVELER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HtlTravelerRecord>> getKeys() {
        return Arrays.<UniqueKey<HtlTravelerRecord>>asList(Keys.KEY_HTL_TRAVELER_PRIMARY, Keys.KEY_HTL_TRAVELER_UK_HTL_TRAVELER_RLT_IDC_TYPE_S_IDC_NUM_V_HOTEL_ID_Z_SIGMA, Keys.KEY_HTL_TRAVELER_UK_HTL_TRAVELER_S_SERIAL_V_HOTEL_ID_Z_SIGMA, Keys.KEY_HTL_TRAVELER_UK_HTL_TRAVELER_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlTraveler as(String alias) {
        return new HtlTraveler(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlTraveler as(Name alias) {
        return new HtlTraveler(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlTraveler rename(String name) {
        return new HtlTraveler(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlTraveler rename(Name name) {
        return new HtlTraveler(name, null);
    }
}
