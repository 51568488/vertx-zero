/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VCatAtmPaytermRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VCatAtmPayterm extends TableImpl<VCatAtmPaytermRecord> {

    private static final long serialVersionUID = 46400362;

    /**
     * The reference instance of <code>DB_HTL.v_cat_atm_payterm</code>
     */
    public static final VCatAtmPayterm V_CAT_ATM_PAYTERM = new VCatAtmPayterm();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VCatAtmPaytermRecord> getRecordType() {
        return VCatAtmPaytermRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.A_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VCatAtmPaytermRecord, String> A_PK_ID = createField("A_PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.A_S_CODE</code>. code,S_CODE
     */
    public final TableField<VCatAtmPaytermRecord, String> A_S_CODE = createField("A_S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.A_S_NAME</code>. 【名称】消费项名称,name,S_NAME
     */
    public final TableField<VCatAtmPaytermRecord, String> A_S_NAME = createField("A_S_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "【名称】消费项名称,name,S_NAME");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.A_S_TYPE</code>. 【名称】消费项类别,type,S_TYPE
     */
    public final TableField<VCatAtmPaytermRecord, String> A_S_TYPE = createField("A_S_TYPE", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "【名称】消费项类别,type,S_TYPE");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.R_COMPANY_ID</code>. 【所属公司】该消费项所属公司ID,companyId,R_COMPANY_ID
     */
    public final TableField<VCatAtmPaytermRecord, Long> R_COMPANY_ID = createField("R_COMPANY_ID", org.jooq.impl.SQLDataType.BIGINT, this, "【所属公司】该消费项所属公司ID,companyId,R_COMPANY_ID");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<VCatAtmPaytermRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.IS_DETAIL</code>. detail,IS_DETAIL
     */
    public final TableField<VCatAtmPaytermRecord, Boolean> IS_DETAIL = createField("IS_DETAIL", org.jooq.impl.SQLDataType.BOOLEAN, this, "detail,IS_DETAIL");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.C_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VCatAtmPaytermRecord, String> C_PK_ID = createField("C_PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.S_NAME</code>. name,S_NAME
     */
    public final TableField<VCatAtmPaytermRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.C_S_CODE</code>. code,S_CODE
     */
    public final TableField<VCatAtmPaytermRecord, String> C_S_CODE = createField("C_S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.C_S_TYPE</code>. REF：TABULAR -&gt; 类型本身分类，可指定不同模块,type,S_TYPE
     */
    public final TableField<VCatAtmPaytermRecord, String> C_S_TYPE = createField("C_S_TYPE", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "REF：TABULAR -> 类型本身分类，可指定不同模块,type,S_TYPE");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.I_LEFT</code>. left,I_LEFT
     */
    public final TableField<VCatAtmPaytermRecord, Long> I_LEFT = createField("I_LEFT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "left,I_LEFT");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.I_RIGHT</code>. right,I_RIGHT
     */
    public final TableField<VCatAtmPaytermRecord, Long> I_RIGHT = createField("I_RIGHT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "right,I_RIGHT");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.I_LEVEL</code>. level,I_LEVEL
     */
    public final TableField<VCatAtmPaytermRecord, Integer> I_LEVEL = createField("I_LEVEL", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "level,I_LEVEL");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.R_PARENT_ID</code>. parentId,R_PARENT_ID
     */
    public final TableField<VCatAtmPaytermRecord, String> R_PARENT_ID = createField("R_PARENT_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "parentId,R_PARENT_ID");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.V_ACCOUNT_ID</code>. accountId,V_ACCOUNT_ID
     */
    public final TableField<VCatAtmPaytermRecord, String> V_ACCOUNT_ID = createField("V_ACCOUNT_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "accountId,V_ACCOUNT_ID");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<VCatAtmPaytermRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.v_cat_atm_payterm.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<VCatAtmPaytermRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * Create a <code>DB_HTL.v_cat_atm_payterm</code> table reference
     */
    public VCatAtmPayterm() {
        this(DSL.name("v_cat_atm_payterm"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_cat_atm_payterm</code> table reference
     */
    public VCatAtmPayterm(String alias) {
        this(DSL.name(alias), V_CAT_ATM_PAYTERM);
    }

    /**
     * Create an aliased <code>DB_HTL.v_cat_atm_payterm</code> table reference
     */
    public VCatAtmPayterm(Name alias) {
        this(alias, V_CAT_ATM_PAYTERM);
    }

    private VCatAtmPayterm(Name alias, Table<VCatAtmPaytermRecord> aliased) {
        this(alias, aliased, null);
    }

    private VCatAtmPayterm(Name alias, Table<VCatAtmPaytermRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VCatAtmPayterm as(String alias) {
        return new VCatAtmPayterm(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VCatAtmPayterm as(Name alias) {
        return new VCatAtmPayterm(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VCatAtmPayterm rename(String name) {
        return new VCatAtmPayterm(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VCatAtmPayterm rename(Name name) {
        return new VCatAtmPayterm(name, null);
    }
}
