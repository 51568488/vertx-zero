/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.pojos;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import up.god.jooq.tables.interfaces.IAbsOrders;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AbsOrders implements IAbsOrders {

    private static final long serialVersionUID = -270924571;

    private Long          pkId;
    private BigDecimal    dAmountActual;
    private BigDecimal    dAmountTaxed;
    private BigDecimal    dAmountTotal;
    private LocalDateTime dFinishedTime;
    private LocalDateTime dOrderTime;
    private BigDecimal    dTax;
    private BigDecimal    dTaxRate;
    private String        sCode;
    private String        sCredence;
    private String        sSerial;
    private String        sStatus;
    private String        jConfig;
    private String        hCatId;
    private Long          rCompanyId;
    private Long          rCurrencyId;
    private Long          rIncotermId;
    private Long          rPartnerId;
    private Long          rWhId;
    private Boolean       isApproval;
    private Boolean       isInvoice;
    private Boolean       isActive;
    private String        zSigma;
    private String        zLanguage;
    private String        zCreateBy;
    private LocalDateTime zCreateTime;
    private String        zUpdateBy;
    private LocalDateTime zUpdateTime;

    public AbsOrders() {}

    public AbsOrders(AbsOrders value) {
        this.pkId = value.pkId;
        this.dAmountActual = value.dAmountActual;
        this.dAmountTaxed = value.dAmountTaxed;
        this.dAmountTotal = value.dAmountTotal;
        this.dFinishedTime = value.dFinishedTime;
        this.dOrderTime = value.dOrderTime;
        this.dTax = value.dTax;
        this.dTaxRate = value.dTaxRate;
        this.sCode = value.sCode;
        this.sCredence = value.sCredence;
        this.sSerial = value.sSerial;
        this.sStatus = value.sStatus;
        this.jConfig = value.jConfig;
        this.hCatId = value.hCatId;
        this.rCompanyId = value.rCompanyId;
        this.rCurrencyId = value.rCurrencyId;
        this.rIncotermId = value.rIncotermId;
        this.rPartnerId = value.rPartnerId;
        this.rWhId = value.rWhId;
        this.isApproval = value.isApproval;
        this.isInvoice = value.isInvoice;
        this.isActive = value.isActive;
        this.zSigma = value.zSigma;
        this.zLanguage = value.zLanguage;
        this.zCreateBy = value.zCreateBy;
        this.zCreateTime = value.zCreateTime;
        this.zUpdateBy = value.zUpdateBy;
        this.zUpdateTime = value.zUpdateTime;
    }

    public AbsOrders(
        Long          pkId,
        BigDecimal    dAmountActual,
        BigDecimal    dAmountTaxed,
        BigDecimal    dAmountTotal,
        LocalDateTime dFinishedTime,
        LocalDateTime dOrderTime,
        BigDecimal    dTax,
        BigDecimal    dTaxRate,
        String        sCode,
        String        sCredence,
        String        sSerial,
        String        sStatus,
        String        jConfig,
        String        hCatId,
        Long          rCompanyId,
        Long          rCurrencyId,
        Long          rIncotermId,
        Long          rPartnerId,
        Long          rWhId,
        Boolean       isApproval,
        Boolean       isInvoice,
        Boolean       isActive,
        String        zSigma,
        String        zLanguage,
        String        zCreateBy,
        LocalDateTime zCreateTime,
        String        zUpdateBy,
        LocalDateTime zUpdateTime
    ) {
        this.pkId = pkId;
        this.dAmountActual = dAmountActual;
        this.dAmountTaxed = dAmountTaxed;
        this.dAmountTotal = dAmountTotal;
        this.dFinishedTime = dFinishedTime;
        this.dOrderTime = dOrderTime;
        this.dTax = dTax;
        this.dTaxRate = dTaxRate;
        this.sCode = sCode;
        this.sCredence = sCredence;
        this.sSerial = sSerial;
        this.sStatus = sStatus;
        this.jConfig = jConfig;
        this.hCatId = hCatId;
        this.rCompanyId = rCompanyId;
        this.rCurrencyId = rCurrencyId;
        this.rIncotermId = rIncotermId;
        this.rPartnerId = rPartnerId;
        this.rWhId = rWhId;
        this.isApproval = isApproval;
        this.isInvoice = isInvoice;
        this.isActive = isActive;
        this.zSigma = zSigma;
        this.zLanguage = zLanguage;
        this.zCreateBy = zCreateBy;
        this.zCreateTime = zCreateTime;
        this.zUpdateBy = zUpdateBy;
        this.zUpdateTime = zUpdateTime;
    }

    @Override
    public Long getPkId() {
        return this.pkId;
    }

    @Override
    public AbsOrders setPkId(Long pkId) {
        this.pkId = pkId;
        return this;
    }

    @Override
    public BigDecimal getDAmountActual() {
        return this.dAmountActual;
    }

    @Override
    public AbsOrders setDAmountActual(BigDecimal dAmountActual) {
        this.dAmountActual = dAmountActual;
        return this;
    }

    @Override
    public BigDecimal getDAmountTaxed() {
        return this.dAmountTaxed;
    }

    @Override
    public AbsOrders setDAmountTaxed(BigDecimal dAmountTaxed) {
        this.dAmountTaxed = dAmountTaxed;
        return this;
    }

    @Override
    public BigDecimal getDAmountTotal() {
        return this.dAmountTotal;
    }

    @Override
    public AbsOrders setDAmountTotal(BigDecimal dAmountTotal) {
        this.dAmountTotal = dAmountTotal;
        return this;
    }

    @Override
    public LocalDateTime getDFinishedTime() {
        return this.dFinishedTime;
    }

    @Override
    public AbsOrders setDFinishedTime(LocalDateTime dFinishedTime) {
        this.dFinishedTime = dFinishedTime;
        return this;
    }

    @Override
    public LocalDateTime getDOrderTime() {
        return this.dOrderTime;
    }

    @Override
    public AbsOrders setDOrderTime(LocalDateTime dOrderTime) {
        this.dOrderTime = dOrderTime;
        return this;
    }

    @Override
    public BigDecimal getDTax() {
        return this.dTax;
    }

    @Override
    public AbsOrders setDTax(BigDecimal dTax) {
        this.dTax = dTax;
        return this;
    }

    @Override
    public BigDecimal getDTaxRate() {
        return this.dTaxRate;
    }

    @Override
    public AbsOrders setDTaxRate(BigDecimal dTaxRate) {
        this.dTaxRate = dTaxRate;
        return this;
    }

    @Override
    public String getSCode() {
        return this.sCode;
    }

    @Override
    public AbsOrders setSCode(String sCode) {
        this.sCode = sCode;
        return this;
    }

    @Override
    public String getSCredence() {
        return this.sCredence;
    }

    @Override
    public AbsOrders setSCredence(String sCredence) {
        this.sCredence = sCredence;
        return this;
    }

    @Override
    public String getSSerial() {
        return this.sSerial;
    }

    @Override
    public AbsOrders setSSerial(String sSerial) {
        this.sSerial = sSerial;
        return this;
    }

    @Override
    public String getSStatus() {
        return this.sStatus;
    }

    @Override
    public AbsOrders setSStatus(String sStatus) {
        this.sStatus = sStatus;
        return this;
    }

    @Override
    public String getJConfig() {
        return this.jConfig;
    }

    @Override
    public AbsOrders setJConfig(String jConfig) {
        this.jConfig = jConfig;
        return this;
    }

    @Override
    public String getHCatId() {
        return this.hCatId;
    }

    @Override
    public AbsOrders setHCatId(String hCatId) {
        this.hCatId = hCatId;
        return this;
    }

    @Override
    public Long getRCompanyId() {
        return this.rCompanyId;
    }

    @Override
    public AbsOrders setRCompanyId(Long rCompanyId) {
        this.rCompanyId = rCompanyId;
        return this;
    }

    @Override
    public Long getRCurrencyId() {
        return this.rCurrencyId;
    }

    @Override
    public AbsOrders setRCurrencyId(Long rCurrencyId) {
        this.rCurrencyId = rCurrencyId;
        return this;
    }

    @Override
    public Long getRIncotermId() {
        return this.rIncotermId;
    }

    @Override
    public AbsOrders setRIncotermId(Long rIncotermId) {
        this.rIncotermId = rIncotermId;
        return this;
    }

    @Override
    public Long getRPartnerId() {
        return this.rPartnerId;
    }

    @Override
    public AbsOrders setRPartnerId(Long rPartnerId) {
        this.rPartnerId = rPartnerId;
        return this;
    }

    @Override
    public Long getRWhId() {
        return this.rWhId;
    }

    @Override
    public AbsOrders setRWhId(Long rWhId) {
        this.rWhId = rWhId;
        return this;
    }

    @Override
    public Boolean getIsApproval() {
        return this.isApproval;
    }

    @Override
    public AbsOrders setIsApproval(Boolean isApproval) {
        this.isApproval = isApproval;
        return this;
    }

    @Override
    public Boolean getIsInvoice() {
        return this.isInvoice;
    }

    @Override
    public AbsOrders setIsInvoice(Boolean isInvoice) {
        this.isInvoice = isInvoice;
        return this;
    }

    @Override
    public Boolean getIsActive() {
        return this.isActive;
    }

    @Override
    public AbsOrders setIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }

    @Override
    public String getZSigma() {
        return this.zSigma;
    }

    @Override
    public AbsOrders setZSigma(String zSigma) {
        this.zSigma = zSigma;
        return this;
    }

    @Override
    public String getZLanguage() {
        return this.zLanguage;
    }

    @Override
    public AbsOrders setZLanguage(String zLanguage) {
        this.zLanguage = zLanguage;
        return this;
    }

    @Override
    public String getZCreateBy() {
        return this.zCreateBy;
    }

    @Override
    public AbsOrders setZCreateBy(String zCreateBy) {
        this.zCreateBy = zCreateBy;
        return this;
    }

    @Override
    public LocalDateTime getZCreateTime() {
        return this.zCreateTime;
    }

    @Override
    public AbsOrders setZCreateTime(LocalDateTime zCreateTime) {
        this.zCreateTime = zCreateTime;
        return this;
    }

    @Override
    public String getZUpdateBy() {
        return this.zUpdateBy;
    }

    @Override
    public AbsOrders setZUpdateBy(String zUpdateBy) {
        this.zUpdateBy = zUpdateBy;
        return this;
    }

    @Override
    public LocalDateTime getZUpdateTime() {
        return this.zUpdateTime;
    }

    @Override
    public AbsOrders setZUpdateTime(LocalDateTime zUpdateTime) {
        this.zUpdateTime = zUpdateTime;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AbsOrders (");

        sb.append(pkId);
        sb.append(", ").append(dAmountActual);
        sb.append(", ").append(dAmountTaxed);
        sb.append(", ").append(dAmountTotal);
        sb.append(", ").append(dFinishedTime);
        sb.append(", ").append(dOrderTime);
        sb.append(", ").append(dTax);
        sb.append(", ").append(dTaxRate);
        sb.append(", ").append(sCode);
        sb.append(", ").append(sCredence);
        sb.append(", ").append(sSerial);
        sb.append(", ").append(sStatus);
        sb.append(", ").append(jConfig);
        sb.append(", ").append(hCatId);
        sb.append(", ").append(rCompanyId);
        sb.append(", ").append(rCurrencyId);
        sb.append(", ").append(rIncotermId);
        sb.append(", ").append(rPartnerId);
        sb.append(", ").append(rWhId);
        sb.append(", ").append(isApproval);
        sb.append(", ").append(isInvoice);
        sb.append(", ").append(isActive);
        sb.append(", ").append(zSigma);
        sb.append(", ").append(zLanguage);
        sb.append(", ").append(zCreateBy);
        sb.append(", ").append(zCreateTime);
        sb.append(", ").append(zUpdateBy);
        sb.append(", ").append(zUpdateTime);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IAbsOrders from) {
        setPkId(from.getPkId());
        setDAmountActual(from.getDAmountActual());
        setDAmountTaxed(from.getDAmountTaxed());
        setDAmountTotal(from.getDAmountTotal());
        setDFinishedTime(from.getDFinishedTime());
        setDOrderTime(from.getDOrderTime());
        setDTax(from.getDTax());
        setDTaxRate(from.getDTaxRate());
        setSCode(from.getSCode());
        setSCredence(from.getSCredence());
        setSSerial(from.getSSerial());
        setSStatus(from.getSStatus());
        setJConfig(from.getJConfig());
        setHCatId(from.getHCatId());
        setRCompanyId(from.getRCompanyId());
        setRCurrencyId(from.getRCurrencyId());
        setRIncotermId(from.getRIncotermId());
        setRPartnerId(from.getRPartnerId());
        setRWhId(from.getRWhId());
        setIsApproval(from.getIsApproval());
        setIsInvoice(from.getIsInvoice());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IAbsOrders> E into(E into) {
        into.from(this);
        return into;
    }

    public AbsOrders(io.vertx.core.json.JsonObject json) {
        fromJson(json);
    }
}
