/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IAtmBill extends Serializable {

    /**
     * Setter for <code>DB_HTL.ATM_BILL.PK_ID</code>. uniqueId,PK_ID
     */
    public IAtmBill setPkId(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.D_AMOUNT_PRICE</code>. 【账单金额】当前账单的金额,amountPrice,D_AMOUNT_PRICE
     */
    public IAtmBill setDAmountPrice(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.D_AMOUNT_PRICE</code>. 【账单金额】当前账单的金额,amountPrice,D_AMOUNT_PRICE
     */
    public BigDecimal getDAmountPrice();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public IAtmBill setTComment(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public String getTComment();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.S_CODE</code>. code,S_CODE
     */
    public IAtmBill setSCode(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.S_CREDENCE</code>. 【账单凭证】,credence,S_CREDENCE
     */
    public IAtmBill setSCredence(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.S_CREDENCE</code>. 【账单凭证】,credence,S_CREDENCE
     */
    public String getSCredence();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.S_SERIAL</code>. 【账单编号】,serial,S_SERIAL
     */
    public IAtmBill setSSerial(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.S_SERIAL</code>. 【账单编号】,serial,S_SERIAL
     */
    public String getSSerial();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.J_CONFIG</code>. config,J_CONFIG
     */
    public IAtmBill setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.RLT_BILL_TYPE</code>. REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE
     */
    public IAtmBill setRltBillType(Long value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.RLT_BILL_TYPE</code>. REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE
     */
    public Long getRltBillType();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.R_ORDER_ID</code>. REF: ABS_ORDERS【关联订单】该账单关联的订单ID,orderId,R_ORDER_ID
     */
    public IAtmBill setROrderId(Long value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.R_ORDER_ID</code>. REF: ABS_ORDERS【关联订单】该账单关联的订单ID,orderId,R_ORDER_ID
     */
    public Long getROrderId();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.R_PAYTERM_ID</code>. REF: ATM_PAYTERM【消费项】关联消费项ID,ptermId,R_PAYTERM_ID
     */
    public IAtmBill setRPaytermId(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.R_PAYTERM_ID</code>. REF: ATM_PAYTERM【消费项】关联消费项ID,ptermId,R_PAYTERM_ID
     */
    public String getRPaytermId();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.IS_INCOME</code>. 【借（出）/贷（入）】如果是income则是入账，否则是出账。,income,IS_INCOME
     */
    public IAtmBill setIsIncome(Boolean value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.IS_INCOME</code>. 【借（出）/贷（入）】如果是income则是入账，否则是出账。,income,IS_INCOME
     */
    public Boolean getIsIncome();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.IS_INVOICE</code>. 【发票】是否开票？,invoice,IS_INVOICE
     */
    public IAtmBill setIsInvoice(Boolean value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.IS_INVOICE</code>. 【发票】是否开票？,invoice,IS_INVOICE
     */
    public Boolean getIsInvoice();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IAtmBill setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IAtmBill setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IAtmBill setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IAtmBill setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IAtmBill setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IAtmBill setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.ATM_BILL.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IAtmBill setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ATM_BILL.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IAtmBill
     */
    public void from(up.god.jooq.tables.interfaces.IAtmBill from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IAtmBill
     */
    public <E extends up.god.jooq.tables.interfaces.IAtmBill> E into(E into);

    default IAtmBill fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_PRICE!
        setTComment(json.getString("T_COMMENT"));
        setSCode(json.getString("S_CODE"));
        setSCredence(json.getString("S_CREDENCE"));
        setSSerial(json.getString("S_SERIAL"));
        setJConfig(json.getString("J_CONFIG"));
        setRltBillType(json.getLong("RLT_BILL_TYPE"));
        setROrderId(json.getLong("R_ORDER_ID"));
        setRPaytermId(json.getString("R_PAYTERM_ID"));
        setIsIncome(json.getBoolean("IS_INCOME"));
        setIsInvoice(json.getBoolean("IS_INVOICE"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_PRICE!
        json.put("T_COMMENT",getTComment());
        json.put("S_CODE",getSCode());
        json.put("S_CREDENCE",getSCredence());
        json.put("S_SERIAL",getSSerial());
        json.put("J_CONFIG",getJConfig());
        json.put("RLT_BILL_TYPE",getRltBillType());
        json.put("R_ORDER_ID",getROrderId());
        json.put("R_PAYTERM_ID",getRPaytermId());
        json.put("IS_INCOME",getIsIncome());
        json.put("IS_INVOICE",getIsInvoice());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
