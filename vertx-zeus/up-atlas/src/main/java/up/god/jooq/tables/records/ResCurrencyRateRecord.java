/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.ResCurrencyRate;
import up.god.jooq.tables.interfaces.IResCurrencyRate;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResCurrencyRateRecord extends UpdatableRecordImpl<ResCurrencyRateRecord> implements Record14<Long, BigDecimal, Long, String, String, String, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IResCurrencyRate {

    private static final long serialVersionUID = 572304801;

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public ResCurrencyRateRecord setPkId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public Long getPkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.D_RATE</code>. 汇率值,rate,D_RATE
     */
    @Override
    public ResCurrencyRateRecord setDRate(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.D_RATE</code>. 汇率值,rate,D_RATE
     */
    @Override
    public BigDecimal getDRate() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.V_TO_ID</code>. 目标货币ID（软联接）,toId,V_TO_ID
     */
    @Override
    public ResCurrencyRateRecord setVToId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.V_TO_ID</code>. 目标货币ID（软联接）,toId,V_TO_ID
     */
    @Override
    public Long getVToId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.S_NAME</code>. 汇率名称,name,S_NAME
     */
    @Override
    public ResCurrencyRateRecord setSName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.S_NAME</code>. 汇率名称,name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.S_CODE</code>. code,S_CODE
     */
    @Override
    public ResCurrencyRateRecord setSCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public ResCurrencyRateRecord setJConfig(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.R_CURRENCY_ID</code>. REF: 当前汇率使用的货币记录，类似FromID,currentId,R_CURRENCY_ID
     */
    @Override
    public ResCurrencyRateRecord setRCurrencyId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.R_CURRENCY_ID</code>. REF: 当前汇率使用的货币记录，类似FromID,currentId,R_CURRENCY_ID
     */
    @Override
    public Long getRCurrencyId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public ResCurrencyRateRecord setIsActive(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public ResCurrencyRateRecord setZSigma(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public ResCurrencyRateRecord setZLanguage(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public ResCurrencyRateRecord setZCreateBy(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public ResCurrencyRateRecord setZCreateTime(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public ResCurrencyRateRecord setZUpdateBy(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY_RATE.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public ResCurrencyRateRecord setZUpdateTime(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY_RATE.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, BigDecimal, Long, String, String, String, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, BigDecimal, Long, String, String, String, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ResCurrencyRate.RES_CURRENCY_RATE.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field2() {
        return ResCurrencyRate.RES_CURRENCY_RATE.D_RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return ResCurrencyRate.RES_CURRENCY_RATE.V_TO_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ResCurrencyRate.RES_CURRENCY_RATE.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ResCurrencyRate.RES_CURRENCY_RATE.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ResCurrencyRate.RES_CURRENCY_RATE.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return ResCurrencyRate.RES_CURRENCY_RATE.R_CURRENCY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return ResCurrencyRate.RES_CURRENCY_RATE.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return ResCurrencyRate.RES_CURRENCY_RATE.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ResCurrencyRate.RES_CURRENCY_RATE.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return ResCurrencyRate.RES_CURRENCY_RATE.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field12() {
        return ResCurrencyRate.RES_CURRENCY_RATE.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return ResCurrencyRate.RES_CURRENCY_RATE.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field14() {
        return ResCurrencyRate.RES_CURRENCY_RATE.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component2() {
        return getDRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getVToId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getRCurrencyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component12() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component14() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value2() {
        return getDRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getVToId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getRCurrencyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value12() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value14() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value1(Long value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value2(BigDecimal value) {
        setDRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value3(Long value) {
        setVToId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value4(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value5(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value6(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value7(Long value) {
        setRCurrencyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value8(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value9(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value10(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value11(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value12(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value13(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord value14(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRateRecord values(Long value1, BigDecimal value2, Long value3, String value4, String value5, String value6, Long value7, Boolean value8, String value9, String value10, String value11, LocalDateTime value12, String value13, LocalDateTime value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IResCurrencyRate from) {
        setPkId(from.getPkId());
        setDRate(from.getDRate());
        setVToId(from.getVToId());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setJConfig(from.getJConfig());
        setRCurrencyId(from.getRCurrencyId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IResCurrencyRate> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResCurrencyRateRecord
     */
    public ResCurrencyRateRecord() {
        super(ResCurrencyRate.RES_CURRENCY_RATE);
    }

    /**
     * Create a detached, initialised ResCurrencyRateRecord
     */
    public ResCurrencyRateRecord(Long pkId, BigDecimal dRate, Long vToId, String sName, String sCode, String jConfig, Long rCurrencyId, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(ResCurrencyRate.RES_CURRENCY_RATE);

        set(0, pkId);
        set(1, dRate);
        set(2, vToId);
        set(3, sName);
        set(4, sCode);
        set(5, jConfig);
        set(6, rCurrencyId);
        set(7, isActive);
        set(8, zSigma);
        set(9, zLanguage);
        set(10, zCreateBy);
        set(11, zCreateTime);
        set(12, zUpdateBy);
        set(13, zUpdateTime);
    }
}
