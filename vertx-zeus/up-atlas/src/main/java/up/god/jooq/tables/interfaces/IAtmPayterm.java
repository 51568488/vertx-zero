/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IAtmPayterm extends Serializable {

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.PK_ID</code>. uniqueId,PK_ID
     */
    public IAtmPayterm setPkId(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.D_PRICE</code>. 【标准价】该消费项的基础单价，该单价用于简单产品直接消费场景（充当了产品单价作用）,price,D_PRICE
     */
    public IAtmPayterm setDPrice(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.D_PRICE</code>. 【标准价】该消费项的基础单价，该单价用于简单产品直接消费场景（充当了产品单价作用）,price,D_PRICE
     */
    public BigDecimal getDPrice();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.T_COMMENT</code>. 【备注】消费项备注信息,comment,T_COMMENT
     */
    public IAtmPayterm setTComment(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.T_COMMENT</code>. 【备注】消费项备注信息,comment,T_COMMENT
     */
    public String getTComment();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.V_ACCOUNT_ID</code>. accountId,V_ACCOUNT_ID
     */
    public IAtmPayterm setVAccountId(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.V_ACCOUNT_ID</code>. accountId,V_ACCOUNT_ID
     */
    public String getVAccountId();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.S_NAME</code>. 【名称】消费项名称,name,S_NAME
     */
    public IAtmPayterm setSName(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.S_NAME</code>. 【名称】消费项名称,name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.S_CODE</code>. code,S_CODE
     */
    public IAtmPayterm setSCode(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.S_HELP_CODE</code>. 【助记码】消费项助记码,helpCode,S_HELP_CODE
     */
    public IAtmPayterm setSHelpCode(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.S_HELP_CODE</code>. 【助记码】消费项助记码,helpCode,S_HELP_CODE
     */
    public String getSHelpCode();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.S_TYPE</code>. 【名称】消费项类别,type,S_TYPE
     */
    public IAtmPayterm setSType(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.S_TYPE</code>. 【名称】消费项类别,type,S_TYPE
     */
    public String getSType();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.S_UNIT</code>. 【计量单位】该消费项的计量单位,unit,S_UNIT
     */
    public IAtmPayterm setSUnit(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.S_UNIT</code>. 【计量单位】该消费项的计量单位,unit,S_UNIT
     */
    public String getSUnit();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.J_CONFIG</code>. config,J_CONFIG
     */
    public IAtmPayterm setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.R_CATEGORY_ID</code>. 【关联类别】该消费项关联的类别ID,categoryId,R_CATEGORY_ID
     */
    public IAtmPayterm setRCategoryId(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.R_CATEGORY_ID</code>. 【关联类别】该消费项关联的类别ID,categoryId,R_CATEGORY_ID
     */
    public String getRCategoryId();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.R_COMPANY_ID</code>. 【所属公司】该消费项所属公司ID,companyId,R_COMPANY_ID
     */
    public IAtmPayterm setRCompanyId(Long value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.R_COMPANY_ID</code>. 【所属公司】该消费项所属公司ID,companyId,R_COMPANY_ID
     */
    public Long getRCompanyId();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.IS_DETAIL</code>. detail,IS_DETAIL
     */
    public IAtmPayterm setIsDetail(Boolean value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.IS_DETAIL</code>. detail,IS_DETAIL
     */
    public Boolean getIsDetail();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IAtmPayterm setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IAtmPayterm setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IAtmPayterm setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IAtmPayterm setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IAtmPayterm setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IAtmPayterm setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.ATM_PAYTERM.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IAtmPayterm setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ATM_PAYTERM.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IAtmPayterm
     */
    public void from(up.god.jooq.tables.interfaces.IAtmPayterm from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IAtmPayterm
     */
    public <E extends up.god.jooq.tables.interfaces.IAtmPayterm> E into(E into);

    default IAtmPayterm fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        // Omitting unrecognized type java.math.BigDecimal for column D_PRICE!
        setTComment(json.getString("T_COMMENT"));
        setVAccountId(json.getString("V_ACCOUNT_ID"));
        setSName(json.getString("S_NAME"));
        setSCode(json.getString("S_CODE"));
        setSHelpCode(json.getString("S_HELP_CODE"));
        setSType(json.getString("S_TYPE"));
        setSUnit(json.getString("S_UNIT"));
        setJConfig(json.getString("J_CONFIG"));
        setRCategoryId(json.getString("R_CATEGORY_ID"));
        setRCompanyId(json.getLong("R_COMPANY_ID"));
        setIsDetail(json.getBoolean("IS_DETAIL"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        // Omitting unrecognized type java.math.BigDecimal for column D_PRICE!
        json.put("T_COMMENT",getTComment());
        json.put("V_ACCOUNT_ID",getVAccountId());
        json.put("S_NAME",getSName());
        json.put("S_CODE",getSCode());
        json.put("S_HELP_CODE",getSHelpCode());
        json.put("S_TYPE",getSType());
        json.put("S_UNIT",getSUnit());
        json.put("J_CONFIG",getJConfig());
        json.put("R_CATEGORY_ID",getRCategoryId());
        json.put("R_COMPANY_ID",getRCompanyId());
        json.put("IS_DETAIL",getIsDetail());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
