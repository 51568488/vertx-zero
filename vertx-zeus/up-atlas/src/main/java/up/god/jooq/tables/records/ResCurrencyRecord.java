/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.ResCurrency;
import up.god.jooq.tables.interfaces.IResCurrency;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResCurrencyRecord extends UpdatableRecordImpl<ResCurrencyRecord> implements Record14<Long, BigDecimal, String, String, String, String, Integer, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IResCurrency {

    private static final long serialVersionUID = -635238401;

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public ResCurrencyRecord setPkId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public Long getPkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.D_ROUND</code>. 货币支持精度，用于货币计算,round,D_ROUND
     */
    @Override
    public ResCurrencyRecord setDRound(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.D_ROUND</code>. 货币支持精度，用于货币计算,round,D_ROUND
     */
    @Override
    public BigDecimal getDRound() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.S_NAME</code>. 货币名称,name,S_NAME
     */
    @Override
    public ResCurrencyRecord setSName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.S_NAME</code>. 货币名称,name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.S_CODE</code>. code,S_CODE
     */
    @Override
    public ResCurrencyRecord setSCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.S_SYMBOL</code>. 货币单位符号，如￥或$,symbol,S_SYMBOL
     */
    @Override
    public ResCurrencyRecord setSSymbol(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.S_SYMBOL</code>. 货币单位符号，如￥或$,symbol,S_SYMBOL
     */
    @Override
    public String getSSymbol() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public ResCurrencyRecord setJConfig(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.I_NUMBER</code>. 货币号码，ISO 4217,number,I_NUMBER
     */
    @Override
    public ResCurrencyRecord setINumber(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.I_NUMBER</code>. 货币号码，ISO 4217,number,I_NUMBER
     */
    @Override
    public Integer getINumber() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public ResCurrencyRecord setIsActive(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public ResCurrencyRecord setZSigma(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public ResCurrencyRecord setZLanguage(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public ResCurrencyRecord setZCreateBy(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public ResCurrencyRecord setZCreateTime(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public ResCurrencyRecord setZUpdateBy(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public ResCurrencyRecord setZUpdateTime(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, BigDecimal, String, String, String, String, Integer, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, BigDecimal, String, String, String, String, Integer, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ResCurrency.RES_CURRENCY.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field2() {
        return ResCurrency.RES_CURRENCY.D_ROUND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ResCurrency.RES_CURRENCY.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ResCurrency.RES_CURRENCY.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ResCurrency.RES_CURRENCY.S_SYMBOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ResCurrency.RES_CURRENCY.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return ResCurrency.RES_CURRENCY.I_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return ResCurrency.RES_CURRENCY.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return ResCurrency.RES_CURRENCY.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ResCurrency.RES_CURRENCY.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return ResCurrency.RES_CURRENCY.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field12() {
        return ResCurrency.RES_CURRENCY.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return ResCurrency.RES_CURRENCY.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field14() {
        return ResCurrency.RES_CURRENCY.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component2() {
        return getDRound();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSSymbol();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getINumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component12() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component14() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value2() {
        return getDRound();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSSymbol();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getINumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value12() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value14() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value1(Long value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value2(BigDecimal value) {
        setDRound(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value3(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value4(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value5(String value) {
        setSSymbol(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value6(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value7(Integer value) {
        setINumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value8(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value9(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value10(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value11(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value12(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value13(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord value14(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResCurrencyRecord values(Long value1, BigDecimal value2, String value3, String value4, String value5, String value6, Integer value7, Boolean value8, String value9, String value10, String value11, LocalDateTime value12, String value13, LocalDateTime value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IResCurrency from) {
        setPkId(from.getPkId());
        setDRound(from.getDRound());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSSymbol(from.getSSymbol());
        setJConfig(from.getJConfig());
        setINumber(from.getINumber());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IResCurrency> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResCurrencyRecord
     */
    public ResCurrencyRecord() {
        super(ResCurrency.RES_CURRENCY);
    }

    /**
     * Create a detached, initialised ResCurrencyRecord
     */
    public ResCurrencyRecord(Long pkId, BigDecimal dRound, String sName, String sCode, String sSymbol, String jConfig, Integer iNumber, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(ResCurrency.RES_CURRENCY);

        set(0, pkId);
        set(1, dRound);
        set(2, sName);
        set(3, sCode);
        set(4, sSymbol);
        set(5, jConfig);
        set(6, iNumber);
        set(7, isActive);
        set(8, zSigma);
        set(9, zLanguage);
        set(10, zCreateBy);
        set(11, zCreateTime);
        set(12, zUpdateBy);
        set(13, zUpdateTime);
    }
}
