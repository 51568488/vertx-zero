/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.HtlPaybillItemsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlPaybillItems extends TableImpl<HtlPaybillItemsRecord> {

    private static final long serialVersionUID = 514324969;

    /**
     * The reference instance of <code>DB_HTL.HTL_PAYBILL_ITEMS</code>
     */
    public static final HtlPaybillItems HTL_PAYBILL_ITEMS = new HtlPaybillItems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HtlPaybillItemsRecord> getRecordType() {
        return HtlPaybillItemsRecord.class;
    }

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<HtlPaybillItemsRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.D_AMOUNT_ACTUAL</code>. 【实际总价】实际给付结果,amountActual,D_AMOUNT_ACTUAL
     */
    public final TableField<HtlPaybillItemsRecord, BigDecimal> D_AMOUNT_ACTUAL = createField("D_AMOUNT_ACTUAL", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "【实际总价】实际给付结果,amountActual,D_AMOUNT_ACTUAL");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.D_AMOUNT_TOTAL</code>. 【总价】理论计算结果,amountTotal,D_AMOUNT_TOTAL
     */
    public final TableField<HtlPaybillItemsRecord, BigDecimal> D_AMOUNT_TOTAL = createField("D_AMOUNT_TOTAL", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "【总价】理论计算结果,amountTotal,D_AMOUNT_TOTAL");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.D_FINISHED_DATE</code>. finishedDate,D_FINISHED_DATE
     */
    public final TableField<HtlPaybillItemsRecord, LocalDateTime> D_FINISHED_DATE = createField("D_FINISHED_DATE", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "finishedDate,D_FINISHED_DATE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.D_OPERATE_DATE</code>. operateDate,D_OPERATE_DATE
     */
    public final TableField<HtlPaybillItemsRecord, LocalDateTime> D_OPERATE_DATE = createField("D_OPERATE_DATE", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "operateDate,D_OPERATE_DATE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.D_PRICE</code>. 【单价】商品的单价。,price,D_PRICE
     */
    public final TableField<HtlPaybillItemsRecord, BigDecimal> D_PRICE = createField("D_PRICE", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "【单价】商品的单价。,price,D_PRICE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public final TableField<HtlPaybillItemsRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "【备注】账单相关备注信息,comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.S_CODE</code>. code,S_CODE
     */
    public final TableField<HtlPaybillItemsRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.S_BRIEF</code>. 【简单备注】,brief,S_BRIEF
     */
    public final TableField<HtlPaybillItemsRecord, String> S_BRIEF = createField("S_BRIEF", org.jooq.impl.SQLDataType.VARCHAR(64), this, "【简单备注】,brief,S_BRIEF");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.S_EMPLOYEE_NO</code>. 【工号】,employeeNo,S_EMPLOYEE_NO
     */
    public final TableField<HtlPaybillItemsRecord, String> S_EMPLOYEE_NO = createField("S_EMPLOYEE_NO", org.jooq.impl.SQLDataType.VARCHAR(64), this, "【工号】,employeeNo,S_EMPLOYEE_NO");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.S_MANUAL_NO</code>. 【账单手工单号】,manualNo,S_MANUAL_NO
     */
    public final TableField<HtlPaybillItemsRecord, String> S_MANUAL_NO = createField("S_MANUAL_NO", org.jooq.impl.SQLDataType.VARCHAR(64), this, "【账单手工单号】,manualNo,S_MANUAL_NO");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.S_SERIAL</code>. 【账单唯一编号】系统内部使用,serial,S_SERIAL
     */
    public final TableField<HtlPaybillItemsRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "【账单唯一编号】系统内部使用,serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.S_SHIFT</code>. 【班次】保存结果，同房号字段,shift,S_SHIFT
     */
    public final TableField<HtlPaybillItemsRecord, String> S_SHIFT = createField("S_SHIFT", org.jooq.impl.SQLDataType.VARCHAR(64), this, "【班次】保存结果，同房号字段,shift,S_SHIFT");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.S_TRANSFER</code>. 【账单流转】,transfer,S_TRANSFER
     */
    public final TableField<HtlPaybillItemsRecord, String> S_TRANSFER = createField("S_TRANSFER", org.jooq.impl.SQLDataType.VARCHAR(64), this, "【账单流转】,transfer,S_TRANSFER");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<HtlPaybillItemsRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.I_LEFT</code>. left,I_LEFT
     */
    public final TableField<HtlPaybillItemsRecord, Long> I_LEFT = createField("I_LEFT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "left,I_LEFT");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.I_LEVEL</code>. level,I_LEVEL
     */
    public final TableField<HtlPaybillItemsRecord, Integer> I_LEVEL = createField("I_LEVEL", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "level,I_LEVEL");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.I_QUANTITY</code>. 【数量】商品数量,quantity,I_QUANTITY
     */
    public final TableField<HtlPaybillItemsRecord, Integer> I_QUANTITY = createField("I_QUANTITY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "【数量】商品数量,quantity,I_QUANTITY");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.I_RIGHT</code>. right,I_RIGHT
     */
    public final TableField<HtlPaybillItemsRecord, Long> I_RIGHT = createField("I_RIGHT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "right,I_RIGHT");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.I_SEQUENCE</code>. 序号,sequence,I_SEQUENCE
     */
    public final TableField<HtlPaybillItemsRecord, Integer> I_SEQUENCE = createField("I_SEQUENCE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "序号,sequence,I_SEQUENCE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.RLT_BILL_TYPE</code>. REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE
     */
    public final TableField<HtlPaybillItemsRecord, Long> RLT_BILL_TYPE = createField("RLT_BILL_TYPE", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.RLT_VALID</code>. 【账单状态】，如：拆帐后原始账单不为valid, bill.filter.type,valid,RLT_VALID
     */
    public final TableField<HtlPaybillItemsRecord, Long> RLT_VALID = createField("RLT_VALID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "【账单状态】，如：拆帐后原始账单不为valid, bill.filter.type,valid,RLT_VALID");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.R_PARENT_ID</code>. REF: HTL_PAYBILL_ITEMS 关联拆帐上级 ID,parentId,R_PARENT_ID
     */
    public final TableField<HtlPaybillItemsRecord, String> R_PARENT_ID = createField("R_PARENT_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "REF: HTL_PAYBILL_ITEMS 关联拆帐上级 ID,parentId,R_PARENT_ID");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.R_PAYBILL_ID</code>. REF: HTL_PAYBILL 关联账单ID,payBillId,R_PAYBILL_ID
     */
    public final TableField<HtlPaybillItemsRecord, String> R_PAYBILL_ID = createField("R_PAYBILL_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "REF: HTL_PAYBILL 关联账单ID,payBillId,R_PAYBILL_ID");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.R_PAYTERM_ID</code>. REF: ATM_PAYTERM【消费项】关联消费项ID,ptermId,R_PAYTERM_ID
     */
    public final TableField<HtlPaybillItemsRecord, String> R_PAYTERM_ID = createField("R_PAYTERM_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "REF: ATM_PAYTERM【消费项】关联消费项ID,ptermId,R_PAYTERM_ID");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.IS_FINISHED</code>. 是否已结算,finished,IS_FINISHED
     */
    public final TableField<HtlPaybillItemsRecord, Boolean> IS_FINISHED = createField("IS_FINISHED", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "是否已结算,finished,IS_FINISHED");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.IS_INCOME</code>. 【账单方向】，income为true入帐，否则为出帐,income,IS_INCOME
     */
    public final TableField<HtlPaybillItemsRecord, Boolean> IS_INCOME = createField("IS_INCOME", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "【账单方向】，income为true入帐，否则为出帐,income,IS_INCOME");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<HtlPaybillItemsRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<HtlPaybillItemsRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<HtlPaybillItemsRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<HtlPaybillItemsRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<HtlPaybillItemsRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<HtlPaybillItemsRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<HtlPaybillItemsRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.HTL_PAYBILL_ITEMS</code> table reference
     */
    public HtlPaybillItems() {
        this(DSL.name("HTL_PAYBILL_ITEMS"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_PAYBILL_ITEMS</code> table reference
     */
    public HtlPaybillItems(String alias) {
        this(DSL.name(alias), HTL_PAYBILL_ITEMS);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_PAYBILL_ITEMS</code> table reference
     */
    public HtlPaybillItems(Name alias) {
        this(alias, HTL_PAYBILL_ITEMS);
    }

    private HtlPaybillItems(Name alias, Table<HtlPaybillItemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private HtlPaybillItems(Name alias, Table<HtlPaybillItemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HTL_PAYBILL_ITEMS_FK_HTL_PAYBILL_ITEMS_R_PARENT_ID, Indexes.HTL_PAYBILL_ITEMS_FK_HTL_PAYBILL_ITEMS_R_PAYBILL_ID, Indexes.HTL_PAYBILL_ITEMS_FK_HTL_PAYBILL_ITEMS_R_PAYTERM_ID, Indexes.HTL_PAYBILL_ITEMS_PRIMARY, Indexes.HTL_PAYBILL_ITEMS_UK_HTL_PAYBILL_ITEMS_S_CODE_Z_SIGMA, Indexes.HTL_PAYBILL_ITEMS_UK_HTL_PAYBILL_ITEMS_S_SERIAL_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HtlPaybillItemsRecord> getPrimaryKey() {
        return Keys.KEY_HTL_PAYBILL_ITEMS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HtlPaybillItemsRecord>> getKeys() {
        return Arrays.<UniqueKey<HtlPaybillItemsRecord>>asList(Keys.KEY_HTL_PAYBILL_ITEMS_PRIMARY, Keys.KEY_HTL_PAYBILL_ITEMS_UK_HTL_PAYBILL_ITEMS_S_CODE_Z_SIGMA, Keys.KEY_HTL_PAYBILL_ITEMS_UK_HTL_PAYBILL_ITEMS_S_SERIAL_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlPaybillItems as(String alias) {
        return new HtlPaybillItems(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlPaybillItems as(Name alias) {
        return new HtlPaybillItems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlPaybillItems rename(String name) {
        return new HtlPaybillItems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlPaybillItems rename(Name name) {
        return new HtlPaybillItems(name, null);
    }
}
