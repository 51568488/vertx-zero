/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IHtlShop extends Serializable {

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.PK_ID</code>. uniqueId,PK_ID
     */
    public IHtlShop setPkId(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.PK_ID</code>. uniqueId,PK_ID
     */
    public Long getPkId();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.T_COMMENT</code>. comment,T_COMMENT
     */
    public IHtlShop setTComment(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.T_COMMENT</code>. comment,T_COMMENT
     */
    public String getTComment();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.S_NAME</code>. name,S_NAME
     */
    public IHtlShop setSName(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.S_NAME</code>. name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.S_CODE</code>. code,S_CODE
     */
    public IHtlShop setSCode(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.S_KEYWORD</code>. keyword,S_KEYWORD
     */
    public IHtlShop setSKeyword(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.S_KEYWORD</code>. keyword,S_KEYWORD
     */
    public String getSKeyword();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.S_TITLE</code>. title,S_TITLE
     */
    public IHtlShop setSTitle(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.S_TITLE</code>. title,S_TITLE
     */
    public String getSTitle();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.J_CONFIG</code>. config,J_CONFIG
     */
    public IHtlShop setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.RLT_COMPENSATIONTYPE</code>. 赔偿类型,compensationType,RLT_COMPENSATIONTYPE
     */
    public IHtlShop setRltCompensationtype(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.RLT_COMPENSATIONTYPE</code>. 赔偿类型,compensationType,RLT_COMPENSATIONTYPE
     */
    public Long getRltCompensationtype();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.RLT_MENUTYPE</code>. 菜本类型,menuType,RLT_MENUTYPE
     */
    public IHtlShop setRltMenutype(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.RLT_MENUTYPE</code>. 菜本类型,menuType,RLT_MENUTYPE
     */
    public Long getRltMenutype();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.RLT_PRODUCTTYPE</code>. 商品类型,productType,RLT_PRODUCTTYPE
     */
    public IHtlShop setRltProducttype(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.RLT_PRODUCTTYPE</code>. 商品类型,productType,RLT_PRODUCTTYPE
     */
    public Long getRltProducttype();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.RLT_SHIFTTYPE</code>. 班别类型,shiftType,RLT_SHIFTTYPE
     */
    public IHtlShop setRltShifttype(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.RLT_SHIFTTYPE</code>. 班别类型,shiftType,RLT_SHIFTTYPE
     */
    public Long getRltShifttype();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.RLT_TYPE</code>. 店铺类型：在线？营业点？直营店？,type,RLT_TYPE
     */
    public IHtlShop setRltType(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.RLT_TYPE</code>. 店铺类型：在线？营业点？直营店？,type,RLT_TYPE
     */
    public Long getRltType();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.R_DEPT_ID</code>. deptId,R_DEPT_ID
     */
    public IHtlShop setRDeptId(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.R_DEPT_ID</code>. deptId,R_DEPT_ID
     */
    public Long getRDeptId();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public IHtlShop setRHotelId(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public Long getRHotelId();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IHtlShop setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IHtlShop setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IHtlShop setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IHtlShop setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IHtlShop setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IHtlShop setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.HTL_SHOP.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IHtlShop setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_SHOP.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IHtlShop
     */
    public void from(up.god.jooq.tables.interfaces.IHtlShop from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IHtlShop
     */
    public <E extends up.god.jooq.tables.interfaces.IHtlShop> E into(E into);

    default IHtlShop fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getLong("PK_ID"));
        setTComment(json.getString("T_COMMENT"));
        setSName(json.getString("S_NAME"));
        setSCode(json.getString("S_CODE"));
        setSKeyword(json.getString("S_KEYWORD"));
        setSTitle(json.getString("S_TITLE"));
        setJConfig(json.getString("J_CONFIG"));
        setRltCompensationtype(json.getLong("RLT_COMPENSATIONTYPE"));
        setRltMenutype(json.getLong("RLT_MENUTYPE"));
        setRltProducttype(json.getLong("RLT_PRODUCTTYPE"));
        setRltShifttype(json.getLong("RLT_SHIFTTYPE"));
        setRltType(json.getLong("RLT_TYPE"));
        setRDeptId(json.getLong("R_DEPT_ID"));
        setRHotelId(json.getLong("R_HOTEL_ID"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("T_COMMENT",getTComment());
        json.put("S_NAME",getSName());
        json.put("S_CODE",getSCode());
        json.put("S_KEYWORD",getSKeyword());
        json.put("S_TITLE",getSTitle());
        json.put("J_CONFIG",getJConfig());
        json.put("RLT_COMPENSATIONTYPE",getRltCompensationtype());
        json.put("RLT_MENUTYPE",getRltMenutype());
        json.put("RLT_PRODUCTTYPE",getRltProducttype());
        json.put("RLT_SHIFTTYPE",getRltShifttype());
        json.put("RLT_TYPE",getRltType());
        json.put("R_DEPT_ID",getRDeptId());
        json.put("R_HOTEL_ID",getRHotelId());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
