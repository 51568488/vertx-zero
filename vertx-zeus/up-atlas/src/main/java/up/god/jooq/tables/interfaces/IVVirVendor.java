/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IVVirVendor extends Serializable {

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.PK_ID</code>. uniqueId,PK_ID
     */
    public IVVirVendor setPkId(Long value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.PK_ID</code>. uniqueId,PK_ID
     */
    public Long getPkId();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.R_COMPANY_ID</code>. companyId,R_COMPANY_ID
     */
    public IVVirVendor setRCompanyId(Long value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.R_COMPANY_ID</code>. companyId,R_COMPANY_ID
     */
    public Long getRCompanyId();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_CODE</code>. 合作伙伴代码,code,S_CODE
     */
    public IVVirVendor setSCode(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_CODE</code>. 合作伙伴代码,code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_NAME</code>. 名称：口语化名称,name,S_NAME
     */
    public IVVirVendor setSName(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_NAME</code>. 名称：口语化名称,name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.RLT_CREDIT_ITEM</code>. 凭证项，关联Tabular,creditItem,RLT_CREDIT_ITEM
     */
    public IVVirVendor setRltCreditItem(Long value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.RLT_CREDIT_ITEM</code>. 凭证项，关联Tabular,creditItem,RLT_CREDIT_ITEM
     */
    public Long getRltCreditItem();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_CREDIT_CODE</code>. 凭证代码,creditCode,S_CREDIT_CODE
     */
    public IVVirVendor setSCreditCode(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_CREDIT_CODE</code>. 凭证代码,creditCode,S_CREDIT_CODE
     */
    public String getSCreditCode();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_CONTACT</code>. 联系人姓名,contact,S_CONTACT
     */
    public IVVirVendor setSContact(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_CONTACT</code>. 联系人姓名,contact,S_CONTACT
     */
    public String getSContact();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_SIGN_NAME</code>. 签单人姓名,signName,S_SIGN_NAME
     */
    public IVVirVendor setSSignName(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_SIGN_NAME</code>. 签单人姓名,signName,S_SIGN_NAME
     */
    public String getSSignName();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_INVOICE_TITLE</code>. 发票抬头,invoiceTitle,S_INVOICE_TITLE
     */
    public IVVirVendor setSInvoiceTitle(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_INVOICE_TITLE</code>. 发票抬头,invoiceTitle,S_INVOICE_TITLE
     */
    public String getSInvoiceTitle();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.D_CREDIT_START</code>. 凭证开始时间,creditStart,D_CREDIT_START
     */
    public IVVirVendor setDCreditStart(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.D_CREDIT_START</code>. 凭证开始时间,creditStart,D_CREDIT_START
     */
    public LocalDateTime getDCreditStart();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.D_CREDIT_END</code>. 凭证结束时间,creditEnd,D_CREDIT_END
     */
    public IVVirVendor setDCreditEnd(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.D_CREDIT_END</code>. 凭证结束时间,creditEnd,D_CREDIT_END
     */
    public LocalDateTime getDCreditEnd();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_DISPLAY_NAME</code>. 显示名称：用于呈现以及页面显示,displayName,S_DISPLAY_NAME
     */
    public IVVirVendor setSDisplayName(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_DISPLAY_NAME</code>. 显示名称：用于呈现以及页面显示,displayName,S_DISPLAY_NAME
     */
    public String getSDisplayName();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_REF</code>. 引用链接信息：一般用于Feed、在线应用时专用引用链接,ref,S_REF
     */
    public IVVirVendor setSRef(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_REF</code>. 引用链接信息：一般用于Feed、在线应用时专用引用链接,ref,S_REF
     */
    public String getSRef();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_EMAIL</code>. 官方专用联系邮件地址,email,S_EMAIL
     */
    public IVVirVendor setSEmail(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_EMAIL</code>. 官方专用联系邮件地址,email,S_EMAIL
     */
    public String getSEmail();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_WEBSITE</code>. 官方网站网址,website,S_WEBSITE
     */
    public IVVirVendor setSWebsite(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_WEBSITE</code>. 官方网站网址,website,S_WEBSITE
     */
    public String getSWebsite();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_FAX</code>. 传真号码,fax,S_FAX
     */
    public IVVirVendor setSFax(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_FAX</code>. 传真号码,fax,S_FAX
     */
    public String getSFax();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_BARCODE</code>. 条码信息,barCode,S_BARCODE
     */
    public IVVirVendor setSBarcode(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_BARCODE</code>. 条码信息,barCode,S_BARCODE
     */
    public String getSBarcode();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_TZ</code>. 所在时区：该时区信息可以直接被程序解析,timeZone,S_TZ
     */
    public IVVirVendor setSTz(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_TZ</code>. 所在时区：该时区信息可以直接被程序解析,timeZone,S_TZ
     */
    public String getSTz();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_PHONE</code>. 联系电话（座机，备用联系电话）,phone,S_PHONE
     */
    public IVVirVendor setSPhone(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_PHONE</code>. 联系电话（座机，备用联系电话）,phone,S_PHONE
     */
    public String getSPhone();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_MOBILE</code>. 联系手机号（主要联系电话）,mobile,S_MOBILE
     */
    public IVVirVendor setSMobile(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_MOBILE</code>. 联系手机号（主要联系电话）,mobile,S_MOBILE
     */
    public String getSMobile();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_NOTIFY_EMAIL</code>. 邮件系统中的From专用邮件地址,notifyEmail,S_NOTIFY_EMAIL
     */
    public IVVirVendor setSNotifyEmail(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_NOTIFY_EMAIL</code>. 邮件系统中的From专用邮件地址,notifyEmail,S_NOTIFY_EMAIL
     */
    public String getSNotifyEmail();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.T_COMMENT</code>. 备注信息，合作伙伴相关简介,comment,T_COMMENT
     */
    public IVVirVendor setTComment(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.T_COMMENT</code>. 备注信息，合作伙伴相关简介,comment,T_COMMENT
     */
    public String getTComment();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.T_FEATURE</code>. 合作伙伴特征描述,feature,T_FEATURE
     */
    public IVVirVendor setTFeature(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.T_FEATURE</code>. 合作伙伴特征描述,feature,T_FEATURE
     */
    public String getTFeature();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.RLT_TYPE</code>. 合作伙伴类型,type,RLT_TYPE
     */
    public IVVirVendor setRltType(Long value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.RLT_TYPE</code>. 合作伙伴类型,type,RLT_TYPE
     */
    public Long getRltType();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.T_LOCATION</code>. 直输地址，和下面的locationId选一使用,location,T_LOCATION
     */
    public IVVirVendor setTLocation(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.T_LOCATION</code>. 直输地址，和下面的locationId选一使用,location,T_LOCATION
     */
    public String getTLocation();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.R_LOCATION_ID</code>. 外键关联Location的ID,locationId,R_LOCATION_ID
     */
    public IVVirVendor setRLocationId(Long value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.R_LOCATION_ID</code>. 外键关联Location的ID,locationId,R_LOCATION_ID
     */
    public Long getRLocationId();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.IS_RUN_UP</code>. 允许挂账？赊账？,runUp,IS_RUN_UP
     */
    public IVVirVendor setIsRunUp(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.IS_RUN_UP</code>. 允许挂账？赊账？,runUp,IS_RUN_UP
     */
    public Boolean getIsRunUp();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_RUN_UP_LIMIT</code>. 挂账限额,runUpLimit,S_RUN_UP_LIMIT
     */
    public IVVirVendor setSRunUpLimit(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_RUN_UP_LIMIT</code>. 挂账限额,runUpLimit,S_RUN_UP_LIMIT
     */
    public String getSRunUpLimit();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IVVirVendor setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.S_SIGNUP_TYPE</code>. 签名类型：E-SIGN,signType,S_SIGNUP_TYPE
     */
    public IVVirVendor setSSignupType(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.S_SIGNUP_TYPE</code>. 签名类型：E-SIGN,signType,S_SIGNUP_TYPE
     */
    public String getSSignupType();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.D_SIGNUP_EXPIRED</code>. 签名过期时间,signExpired,D_SIGNUP_EXPIRED
     */
    public IVVirVendor setDSignupExpired(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.D_SIGNUP_EXPIRED</code>. 签名过期时间,signExpired,D_SIGNUP_EXPIRED
     */
    public LocalDateTime getDSignupExpired();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.B_SIGNUP_TOKEN</code>. 签名专用TOKEN,signToken,B_SIGNUP_TOKEN
     */
    public IVVirVendor setBSignupToken(byte... value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.B_SIGNUP_TOKEN</code>. 签名专用TOKEN,signToken,B_SIGNUP_TOKEN
     */
    public byte[] getBSignupToken();

    /**
     * Setter for <code>DB_HTL.v_vir_vendor.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IVVirVendor setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.v_vir_vendor.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IVVirVendor
     */
    public void from(up.god.jooq.tables.interfaces.IVVirVendor from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IVVirVendor
     */
    public <E extends up.god.jooq.tables.interfaces.IVVirVendor> E into(E into);

    default IVVirVendor fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getLong("PK_ID"));
        setRCompanyId(json.getLong("R_COMPANY_ID"));
        setSCode(json.getString("S_CODE"));
        setSName(json.getString("S_NAME"));
        setRltCreditItem(json.getLong("RLT_CREDIT_ITEM"));
        setSCreditCode(json.getString("S_CREDIT_CODE"));
        setSContact(json.getString("S_CONTACT"));
        setSSignName(json.getString("S_SIGN_NAME"));
        setSInvoiceTitle(json.getString("S_INVOICE_TITLE"));
        // Omitting unrecognized type java.time.LocalDateTime for column D_CREDIT_START!
        // Omitting unrecognized type java.time.LocalDateTime for column D_CREDIT_END!
        setSDisplayName(json.getString("S_DISPLAY_NAME"));
        setSRef(json.getString("S_REF"));
        setSEmail(json.getString("S_EMAIL"));
        setSWebsite(json.getString("S_WEBSITE"));
        setSFax(json.getString("S_FAX"));
        setSBarcode(json.getString("S_BARCODE"));
        setSTz(json.getString("S_TZ"));
        setSPhone(json.getString("S_PHONE"));
        setSMobile(json.getString("S_MOBILE"));
        setSNotifyEmail(json.getString("S_NOTIFY_EMAIL"));
        setTComment(json.getString("T_COMMENT"));
        setTFeature(json.getString("T_FEATURE"));
        setRltType(json.getLong("RLT_TYPE"));
        setTLocation(json.getString("T_LOCATION"));
        setRLocationId(json.getLong("R_LOCATION_ID"));
        setIsRunUp(json.getBoolean("IS_RUN_UP"));
        setSRunUpLimit(json.getString("S_RUN_UP_LIMIT"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setSSignupType(json.getString("S_SIGNUP_TYPE"));
        // Omitting unrecognized type java.time.LocalDateTime for column D_SIGNUP_EXPIRED!
        setBSignupToken(json.getBinary("B_SIGNUP_TOKEN"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("R_COMPANY_ID",getRCompanyId());
        json.put("S_CODE",getSCode());
        json.put("S_NAME",getSName());
        json.put("RLT_CREDIT_ITEM",getRltCreditItem());
        json.put("S_CREDIT_CODE",getSCreditCode());
        json.put("S_CONTACT",getSContact());
        json.put("S_SIGN_NAME",getSSignName());
        json.put("S_INVOICE_TITLE",getSInvoiceTitle());
        // Omitting unrecognized type java.time.LocalDateTime for column D_CREDIT_START!
        // Omitting unrecognized type java.time.LocalDateTime for column D_CREDIT_END!
        json.put("S_DISPLAY_NAME",getSDisplayName());
        json.put("S_REF",getSRef());
        json.put("S_EMAIL",getSEmail());
        json.put("S_WEBSITE",getSWebsite());
        json.put("S_FAX",getSFax());
        json.put("S_BARCODE",getSBarcode());
        json.put("S_TZ",getSTz());
        json.put("S_PHONE",getSPhone());
        json.put("S_MOBILE",getSMobile());
        json.put("S_NOTIFY_EMAIL",getSNotifyEmail());
        json.put("T_COMMENT",getTComment());
        json.put("T_FEATURE",getTFeature());
        json.put("RLT_TYPE",getRltType());
        json.put("T_LOCATION",getTLocation());
        json.put("R_LOCATION_ID",getRLocationId());
        json.put("IS_RUN_UP",getIsRunUp());
        json.put("S_RUN_UP_LIMIT",getSRunUpLimit());
        json.put("IS_ACTIVE",getIsActive());
        json.put("S_SIGNUP_TYPE",getSSignupType());
        // Omitting unrecognized type java.time.LocalDateTime for column D_SIGNUP_EXPIRED!
        json.put("B_SIGNUP_TOKEN",getBSignupToken());
        json.put("Z_LANGUAGE",getZLanguage());
        return json;
    }

}
