/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.HtlMember;
import up.god.jooq.tables.interfaces.IHtlMember;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlMemberRecord extends UpdatableRecordImpl<HtlMemberRecord> implements Record18<String, String, String, String, String, String, String, String, String, Long, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IHtlMember {

    private static final long serialVersionUID = -255770644;

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public HtlMemberRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.T_PREF_INTEREST</code>. prefInterest,T_PREF_INTEREST
     */
    @Override
    public HtlMemberRecord setTPrefInterest(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.T_PREF_INTEREST</code>. prefInterest,T_PREF_INTEREST
     */
    @Override
    public String getTPrefInterest() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.T_PREF_REPAST</code>. prefRepast,T_PREF_REPAST
     */
    @Override
    public HtlMemberRecord setTPrefRepast(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.T_PREF_REPAST</code>. prefRepast,T_PREF_REPAST
     */
    @Override
    public String getTPrefRepast() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.T_PREF_ROOM</code>. prefRoom,T_PREF_ROOM
     */
    @Override
    public HtlMemberRecord setTPrefRoom(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.T_PREF_ROOM</code>. prefRoom,T_PREF_ROOM
     */
    @Override
    public String getTPrefRoom() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.T_SPEC_REQUEST</code>. specRequest,T_SPEC_REQUEST
     */
    @Override
    public HtlMemberRecord setTSpecRequest(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.T_SPEC_REQUEST</code>. specRequest,T_SPEC_REQUEST
     */
    @Override
    public String getTSpecRequest() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.S_CODE</code>. code,S_CODE
     */
    @Override
    public HtlMemberRecord setSCode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.S_LICENSE_NUM</code>. licenseNumber,S_LICENSE_NUM
     */
    @Override
    public HtlMemberRecord setSLicenseNum(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.S_LICENSE_NUM</code>. licenseNumber,S_LICENSE_NUM
     */
    @Override
    public String getSLicenseNum() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.S_PROPOSER</code>. 推荐人,proposer,S_PROPOSER
     */
    @Override
    public HtlMemberRecord setSProposer(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.S_PROPOSER</code>. 推荐人,proposer,S_PROPOSER
     */
    @Override
    public String getSProposer() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public HtlMemberRecord setJConfig(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    @Override
    public HtlMemberRecord setRHotelId(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    @Override
    public Long getRHotelId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.R_MEMBER_ID</code>. memberId,R_MEMBER_ID
     */
    @Override
    public HtlMemberRecord setRMemberId(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.R_MEMBER_ID</code>. memberId,R_MEMBER_ID
     */
    @Override
    public String getRMemberId() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public HtlMemberRecord setIsActive(Boolean value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public HtlMemberRecord setZSigma(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public HtlMemberRecord setZLanguage(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public HtlMemberRecord setZCreateBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public HtlMemberRecord setZCreateTime(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public HtlMemberRecord setZUpdateBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_HTL.HTL_MEMBER.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public HtlMemberRecord setZUpdateTime(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_MEMBER.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<String, String, String, String, String, String, String, String, String, Long, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<String, String, String, String, String, String, String, String, String, Long, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return HtlMember.HTL_MEMBER.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return HtlMember.HTL_MEMBER.T_PREF_INTEREST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return HtlMember.HTL_MEMBER.T_PREF_REPAST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return HtlMember.HTL_MEMBER.T_PREF_ROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return HtlMember.HTL_MEMBER.T_SPEC_REQUEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return HtlMember.HTL_MEMBER.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return HtlMember.HTL_MEMBER.S_LICENSE_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return HtlMember.HTL_MEMBER.S_PROPOSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return HtlMember.HTL_MEMBER.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return HtlMember.HTL_MEMBER.R_HOTEL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return HtlMember.HTL_MEMBER.R_MEMBER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field12() {
        return HtlMember.HTL_MEMBER.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return HtlMember.HTL_MEMBER.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return HtlMember.HTL_MEMBER.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return HtlMember.HTL_MEMBER.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field16() {
        return HtlMember.HTL_MEMBER.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return HtlMember.HTL_MEMBER.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field18() {
        return HtlMember.HTL_MEMBER.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTPrefInterest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTPrefRepast();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTPrefRoom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getTSpecRequest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getSLicenseNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSProposer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component10() {
        return getRHotelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getRMemberId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component12() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component16() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component18() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTPrefInterest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTPrefRepast();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTPrefRoom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getTSpecRequest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getSLicenseNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSProposer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getRHotelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getRMemberId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value12() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value16() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value18() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value2(String value) {
        setTPrefInterest(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value3(String value) {
        setTPrefRepast(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value4(String value) {
        setTPrefRoom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value5(String value) {
        setTSpecRequest(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value6(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value7(String value) {
        setSLicenseNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value8(String value) {
        setSProposer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value9(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value10(Long value) {
        setRHotelId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value11(String value) {
        setRMemberId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value12(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value13(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value14(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value15(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value16(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value17(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord value18(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMemberRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, Long value10, String value11, Boolean value12, String value13, String value14, String value15, LocalDateTime value16, String value17, LocalDateTime value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IHtlMember from) {
        setPkId(from.getPkId());
        setTPrefInterest(from.getTPrefInterest());
        setTPrefRepast(from.getTPrefRepast());
        setTPrefRoom(from.getTPrefRoom());
        setTSpecRequest(from.getTSpecRequest());
        setSCode(from.getSCode());
        setSLicenseNum(from.getSLicenseNum());
        setSProposer(from.getSProposer());
        setJConfig(from.getJConfig());
        setRHotelId(from.getRHotelId());
        setRMemberId(from.getRMemberId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IHtlMember> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HtlMemberRecord
     */
    public HtlMemberRecord() {
        super(HtlMember.HTL_MEMBER);
    }

    /**
     * Create a detached, initialised HtlMemberRecord
     */
    public HtlMemberRecord(String pkId, String tPrefInterest, String tPrefRepast, String tPrefRoom, String tSpecRequest, String sCode, String sLicenseNum, String sProposer, String jConfig, Long rHotelId, String rMemberId, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(HtlMember.HTL_MEMBER);

        set(0, pkId);
        set(1, tPrefInterest);
        set(2, tPrefRepast);
        set(3, tPrefRoom);
        set(4, tSpecRequest);
        set(5, sCode);
        set(6, sLicenseNum);
        set(7, sProposer);
        set(8, jConfig);
        set(9, rHotelId);
        set(10, rMemberId);
        set(11, isActive);
        set(12, zSigma);
        set(13, zLanguage);
        set(14, zCreateBy);
        set(15, zCreateTime);
        set(16, zUpdateBy);
        set(17, zUpdateTime);
    }
}
