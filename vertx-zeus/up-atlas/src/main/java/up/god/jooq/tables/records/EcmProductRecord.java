/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.EcmProduct;
import up.god.jooq.tables.interfaces.IEcmProduct;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EcmProductRecord extends UpdatableRecordImpl<EcmProductRecord> implements IEcmProduct {

    private static final long serialVersionUID = 1360014523;

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public EcmProductRecord setPkId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public Long getPkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.D_MARKET_PRICE</code>. 市场价,marketPrice,D_MARKET_PRICE
     */
    @Override
    public EcmProductRecord setDMarketPrice(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.D_MARKET_PRICE</code>. 市场价,marketPrice,D_MARKET_PRICE
     */
    @Override
    public BigDecimal getDMarketPrice() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.D_SHOP_PRICE</code>. 在线购买价格E-Shop价,shopPrice,D_SHOP_PRICE
     */
    @Override
    public EcmProductRecord setDShopPrice(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.D_SHOP_PRICE</code>. 在线购买价格E-Shop价,shopPrice,D_SHOP_PRICE
     */
    @Override
    public BigDecimal getDShopPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.D_USER_PRICE</code>. 普通用户价格,userPrice,D_USER_PRICE
     */
    @Override
    public EcmProductRecord setDUserPrice(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.D_USER_PRICE</code>. 普通用户价格,userPrice,D_USER_PRICE
     */
    @Override
    public BigDecimal getDUserPrice() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.D_VIP_PRICE</code>. 会员价,vipPrice,D_VIP_PRICE
     */
    @Override
    public EcmProductRecord setDVipPrice(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.D_VIP_PRICE</code>. 会员价,vipPrice,D_VIP_PRICE
     */
    @Override
    public BigDecimal getDVipPrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.L_CLICK</code>. 点击数,click,L_CLICK
     */
    @Override
    public EcmProductRecord setLClick(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.L_CLICK</code>. 点击数,click,L_CLICK
     */
    @Override
    public Long getLClick() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.T_COMMENT</code>. comment,T_COMMENT
     */
    @Override
    public EcmProductRecord setTComment(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.T_COMMENT</code>. comment,T_COMMENT
     */
    @Override
    public String getTComment() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.S_CODE</code>. code,S_CODE
     */
    @Override
    public EcmProductRecord setSCode(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.S_GOOD_NO</code>. 货号,goodNo,S_GOOD_NO
     */
    @Override
    public EcmProductRecord setSGoodNo(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.S_GOOD_NO</code>. 货号,goodNo,S_GOOD_NO
     */
    @Override
    public String getSGoodNo() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.S_MODEL</code>. 产品型号,model,S_MODEL
     */
    @Override
    public EcmProductRecord setSModel(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.S_MODEL</code>. 产品型号,model,S_MODEL
     */
    @Override
    public String getSModel() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.S_SIZE</code>. 尺寸,size,S_SIZE
     */
    @Override
    public EcmProductRecord setSSize(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.S_SIZE</code>. 尺寸,size,S_SIZE
     */
    @Override
    public String getSSize() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public EcmProductRecord setJConfig(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.I_POINT</code>. 产品积分,point,I_POINT
     */
    @Override
    public EcmProductRecord setIPoint(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.I_POINT</code>. 产品积分,point,I_POINT
     */
    @Override
    public Integer getIPoint() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.I_SALE_NUM</code>. 销售数量,saleNumber,I_SALE_NUM
     */
    @Override
    public EcmProductRecord setISaleNum(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.I_SALE_NUM</code>. 销售数量,saleNumber,I_SALE_NUM
     */
    @Override
    public Integer getISaleNum() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.R_PRODUCT_ID</code>. productId,R_PRODUCT_ID
     */
    @Override
    public EcmProductRecord setRProductId(Long value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.R_PRODUCT_ID</code>. productId,R_PRODUCT_ID
     */
    @Override
    public Long getRProductId() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.R_SHOP_ID</code>. shopId,R_SHOP_ID
     */
    @Override
    public EcmProductRecord setRShopId(Long value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.R_SHOP_ID</code>. shopId,R_SHOP_ID
     */
    @Override
    public Long getRShopId() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.IS_CARRIAGE</code>. 运费？,carriage,IS_CARRIAGE
     */
    @Override
    public EcmProductRecord setIsCarriage(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.IS_CARRIAGE</code>. 运费？,carriage,IS_CARRIAGE
     */
    @Override
    public Boolean getIsCarriage() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public EcmProductRecord setIsActive(Boolean value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(17);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public EcmProductRecord setZSigma(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public EcmProductRecord setZLanguage(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(19);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public EcmProductRecord setZCreateBy(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(20);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public EcmProductRecord setZCreateTime(LocalDateTime value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(21);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public EcmProductRecord setZUpdateBy(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(22);
    }

    /**
     * Setter for <code>DB_HTL.ECM_PRODUCT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public EcmProductRecord setZUpdateTime(LocalDateTime value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ECM_PRODUCT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(23);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IEcmProduct from) {
        setPkId(from.getPkId());
        setDMarketPrice(from.getDMarketPrice());
        setDShopPrice(from.getDShopPrice());
        setDUserPrice(from.getDUserPrice());
        setDVipPrice(from.getDVipPrice());
        setLClick(from.getLClick());
        setTComment(from.getTComment());
        setSCode(from.getSCode());
        setSGoodNo(from.getSGoodNo());
        setSModel(from.getSModel());
        setSSize(from.getSSize());
        setJConfig(from.getJConfig());
        setIPoint(from.getIPoint());
        setISaleNum(from.getISaleNum());
        setRProductId(from.getRProductId());
        setRShopId(from.getRShopId());
        setIsCarriage(from.getIsCarriage());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IEcmProduct> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EcmProductRecord
     */
    public EcmProductRecord() {
        super(EcmProduct.ECM_PRODUCT);
    }

    /**
     * Create a detached, initialised EcmProductRecord
     */
    public EcmProductRecord(Long pkId, BigDecimal dMarketPrice, BigDecimal dShopPrice, BigDecimal dUserPrice, BigDecimal dVipPrice, Long lClick, String tComment, String sCode, String sGoodNo, String sModel, String sSize, String jConfig, Integer iPoint, Integer iSaleNum, Long rProductId, Long rShopId, Boolean isCarriage, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(EcmProduct.ECM_PRODUCT);

        set(0, pkId);
        set(1, dMarketPrice);
        set(2, dShopPrice);
        set(3, dUserPrice);
        set(4, dVipPrice);
        set(5, lClick);
        set(6, tComment);
        set(7, sCode);
        set(8, sGoodNo);
        set(9, sModel);
        set(10, sSize);
        set(11, jConfig);
        set(12, iPoint);
        set(13, iSaleNum);
        set(14, rProductId);
        set(15, rShopId);
        set(16, isCarriage);
        set(17, isActive);
        set(18, zSigma);
        set(19, zLanguage);
        set(20, zCreateBy);
        set(21, zCreateTime);
        set(22, zUpdateBy);
        set(23, zUpdateTime);
    }
}
