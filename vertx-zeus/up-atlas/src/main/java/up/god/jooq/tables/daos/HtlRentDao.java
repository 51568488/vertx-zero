/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.HtlRent;
import up.god.jooq.tables.records.HtlRentRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlRentDao extends DAOImpl<HtlRentRecord, up.god.jooq.tables.pojos.HtlRent, Long> implements VertxDAO<up.god.jooq.tables.records.HtlRentRecord,up.god.jooq.tables.pojos.HtlRent,java.lang.Long> {

    /**
     * Create a new HtlRentDao without any configuration
     */
    public HtlRentDao() {
        super(HtlRent.HTL_RENT, up.god.jooq.tables.pojos.HtlRent.class);
    }

    /**
     * Create a new HtlRentDao with an attached configuration
     */
    public HtlRentDao(Configuration configuration) {
        super(HtlRent.HTL_RENT, up.god.jooq.tables.pojos.HtlRent.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(up.god.jooq.tables.pojos.HtlRent object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByPkId(Long... values) {
        return fetch(HtlRent.HTL_RENT.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.HtlRent fetchOneByPkId(Long value) {
        return fetchOne(HtlRent.HTL_RENT.PK_ID, value);
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByTComment(String... values) {
        return fetch(HtlRent.HTL_RENT.T_COMMENT, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchBySCode(String... values) {
        return fetch(HtlRent.HTL_RENT.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_CALL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchBySCall(String... values) {
        return fetch(HtlRent.HTL_RENT.S_CALL, values);
    }

    /**
     * Fetch records that have <code>S_CONTACT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchBySContact(String... values) {
        return fetch(HtlRent.HTL_RENT.S_CONTACT, values);
    }

    /**
     * Fetch records that have <code>S_ROOM_NUMBER IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchBySRoomNumber(String... values) {
        return fetch(HtlRent.HTL_RENT.S_ROOM_NUMBER, values);
    }

    /**
     * Fetch records that have <code>S_THING IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchBySThing(String... values) {
        return fetch(HtlRent.HTL_RENT.S_THING, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByJConfig(String... values) {
        return fetch(HtlRent.HTL_RENT.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>R_CATEGORY_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByRCategoryId(String... values) {
        return fetch(HtlRent.HTL_RENT.R_CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>R_HOTEL_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByRHotelId(Long... values) {
        return fetch(HtlRent.HTL_RENT.R_HOTEL_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByIsActive(Boolean... values) {
        return fetch(HtlRent.HTL_RENT.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByZSigma(String... values) {
        return fetch(HtlRent.HTL_RENT.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByZLanguage(String... values) {
        return fetch(HtlRent.HTL_RENT.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByZCreateBy(String... values) {
        return fetch(HtlRent.HTL_RENT.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(HtlRent.HTL_RENT.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByZUpdateBy(String... values) {
        return fetch(HtlRent.HTL_RENT.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlRent> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(HtlRent.HTL_RENT.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByPkIdAsync(List<Long> values) {
        return fetchAsync(HtlRent.HTL_RENT.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.HtlRent> fetchOneByPkIdAsync(Long value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByTCommentAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.T_COMMENT,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_CALL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchBySCallAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.S_CALL,values);
    }

    /**
     * Fetch records that have <code>S_CONTACT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchBySContactAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.S_CONTACT,values);
    }

    /**
     * Fetch records that have <code>S_ROOM_NUMBER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchBySRoomNumberAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.S_ROOM_NUMBER,values);
    }

    /**
     * Fetch records that have <code>S_THING IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchBySThingAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.S_THING,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>R_CATEGORY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByRCategoryIdAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.R_CATEGORY_ID,values);
    }

    /**
     * Fetch records that have <code>R_HOTEL_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByRHotelIdAsync(List<Long> values) {
        return fetchAsync(HtlRent.HTL_RENT.R_HOTEL_ID,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(HtlRent.HTL_RENT.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(HtlRent.HTL_RENT.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(HtlRent.HTL_RENT.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlRent>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(HtlRent.HTL_RENT.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
