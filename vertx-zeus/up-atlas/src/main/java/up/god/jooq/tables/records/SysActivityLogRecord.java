/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.SysActivityLog;
import up.god.jooq.tables.interfaces.ISysActivityLog;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysActivityLogRecord extends UpdatableRecordImpl<SysActivityLogRecord> implements Record15<String, LocalDateTime, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, ISysActivityLog {

    private static final long serialVersionUID = 1078165915;

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public SysActivityLogRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.D_LOG_TIME</code>. 操作时间,logTime,D_LOG_TIME
     */
    @Override
    public SysActivityLogRecord setDLogTime(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.D_LOG_TIME</code>. 操作时间,logTime,D_LOG_TIME
     */
    @Override
    public LocalDateTime getDLogTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.T_DESCRIPTION</code>. 系统登陆日志,description,T_DESCRIPTION
     */
    @Override
    public SysActivityLogRecord setTDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.T_DESCRIPTION</code>. 系统登陆日志,description,T_DESCRIPTION
     */
    @Override
    public String getTDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.S_CODE</code>. code,S_CODE
     */
    @Override
    public SysActivityLogRecord setSCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.S_IP</code>. 登陆IP,ip,S_IP
     */
    @Override
    public SysActivityLogRecord setSIp(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.S_IP</code>. 登陆IP,ip,S_IP
     */
    @Override
    public String getSIp() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.S_MENU</code>. 操作菜单，记录操作位置,menu,S_MENU
     */
    @Override
    public SysActivityLogRecord setSMenu(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.S_MENU</code>. 操作菜单，记录操作位置,menu,S_MENU
     */
    @Override
    public String getSMenu() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.S_OPERATOR</code>. 系统登陆者,operator,S_OPERATOR
     */
    @Override
    public SysActivityLogRecord setSOperator(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.S_OPERATOR</code>. 系统登陆者,operator,S_OPERATOR
     */
    @Override
    public String getSOperator() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public SysActivityLogRecord setJConfig(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public SysActivityLogRecord setIsActive(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public SysActivityLogRecord setZSigma(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public SysActivityLogRecord setZLanguage(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public SysActivityLogRecord setZCreateBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public SysActivityLogRecord setZCreateTime(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public SysActivityLogRecord setZUpdateBy(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public SysActivityLogRecord setZUpdateTime(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_ACTIVITY_LOG.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, LocalDateTime, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, LocalDateTime, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SysActivityLog.SYS_ACTIVITY_LOG.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return SysActivityLog.SYS_ACTIVITY_LOG.D_LOG_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SysActivityLog.SYS_ACTIVITY_LOG.T_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SysActivityLog.SYS_ACTIVITY_LOG.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SysActivityLog.SYS_ACTIVITY_LOG.S_IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return SysActivityLog.SYS_ACTIVITY_LOG.S_MENU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return SysActivityLog.SYS_ACTIVITY_LOG.S_OPERATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return SysActivityLog.SYS_ACTIVITY_LOG.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return SysActivityLog.SYS_ACTIVITY_LOG.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return SysActivityLog.SYS_ACTIVITY_LOG.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return SysActivityLog.SYS_ACTIVITY_LOG.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return SysActivityLog.SYS_ACTIVITY_LOG.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field13() {
        return SysActivityLog.SYS_ACTIVITY_LOG.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return SysActivityLog.SYS_ACTIVITY_LOG.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field15() {
        return SysActivityLog.SYS_ACTIVITY_LOG.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component2() {
        return getDLogTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSMenu();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getSOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component13() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component15() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getDLogTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSMenu();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getSOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value13() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value15() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value2(LocalDateTime value) {
        setDLogTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value3(String value) {
        setTDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value4(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value5(String value) {
        setSIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value6(String value) {
        setSMenu(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value7(String value) {
        setSOperator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value8(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value9(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value10(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value11(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value12(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value13(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value14(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord value15(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysActivityLogRecord values(String value1, LocalDateTime value2, String value3, String value4, String value5, String value6, String value7, String value8, Boolean value9, String value10, String value11, String value12, LocalDateTime value13, String value14, LocalDateTime value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISysActivityLog from) {
        setPkId(from.getPkId());
        setDLogTime(from.getDLogTime());
        setTDescription(from.getTDescription());
        setSCode(from.getSCode());
        setSIp(from.getSIp());
        setSMenu(from.getSMenu());
        setSOperator(from.getSOperator());
        setJConfig(from.getJConfig());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISysActivityLog> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysActivityLogRecord
     */
    public SysActivityLogRecord() {
        super(SysActivityLog.SYS_ACTIVITY_LOG);
    }

    /**
     * Create a detached, initialised SysActivityLogRecord
     */
    public SysActivityLogRecord(String pkId, LocalDateTime dLogTime, String tDescription, String sCode, String sIp, String sMenu, String sOperator, String jConfig, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(SysActivityLog.SYS_ACTIVITY_LOG);

        set(0, pkId);
        set(1, dLogTime);
        set(2, tDescription);
        set(3, sCode);
        set(4, sIp);
        set(5, sMenu);
        set(6, sOperator);
        set(7, jConfig);
        set(8, isActive);
        set(9, zSigma);
        set(10, zLanguage);
        set(11, zCreateBy);
        set(12, zCreateTime);
        set(13, zUpdateBy);
        set(14, zUpdateTime);
    }
}
