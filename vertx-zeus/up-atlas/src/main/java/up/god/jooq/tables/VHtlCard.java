/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VHtlCardRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VHtlCard extends TableImpl<VHtlCardRecord> {

    private static final long serialVersionUID = -658727466;

    /**
     * The reference instance of <code>DB_HTL.v_htl_card</code>
     */
    public static final VHtlCard V_HTL_CARD = new VHtlCard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VHtlCardRecord> getRecordType() {
        return VHtlCardRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_htl_card.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlCardRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_card.S_CODE</code>. code,S_CODE
     */
    public final TableField<VHtlCardRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_htl_card.S_MEMBER_CODE</code>. code,S_CODE
     */
    public final TableField<VHtlCardRecord, String> S_MEMBER_CODE = createField("S_MEMBER_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_htl_card.S_REALNAME</code>. realname,S_REALNAME
     */
    public final TableField<VHtlCardRecord, String> S_REALNAME = createField("S_REALNAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "realname,S_REALNAME");

    /**
     * The column <code>DB_HTL.v_htl_card.S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    public final TableField<VHtlCardRecord, String> S_NUMBER = createField("S_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "卡号,number,S_NUMBER");

    /**
     * The column <code>DB_HTL.v_htl_card.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    public final TableField<VHtlCardRecord, BigDecimal> D_AMOUNT = createField("D_AMOUNT", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "卡余额,amount,D_AMOUNT");

    /**
     * The column <code>DB_HTL.v_htl_card.L_POINT</code>. 积分,point,L_POINT
     */
    public final TableField<VHtlCardRecord, Long> L_POINT = createField("L_POINT", org.jooq.impl.SQLDataType.BIGINT, this, "积分,point,L_POINT");

    /**
     * The column <code>DB_HTL.v_htl_card.S_BATCH</code>. 批次,batch,S_BATCH
     */
    public final TableField<VHtlCardRecord, String> S_BATCH = createField("S_BATCH", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "批次,batch,S_BATCH");

    /**
     * The column <code>DB_HTL.v_htl_card.D_EXPIRED_TIME</code>. 过期时间,expiredTime,D_EXPIRED_TIME
     */
    public final TableField<VHtlCardRecord, LocalDateTime> D_EXPIRED_TIME = createField("D_EXPIRED_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "过期时间,expiredTime,D_EXPIRED_TIME");

    /**
     * The column <code>DB_HTL.v_htl_card.RLT_CARD_TYPE</code>. 类型,cardType,RLT_CARD_TYPE
     */
    public final TableField<VHtlCardRecord, Long> RLT_CARD_TYPE = createField("RLT_CARD_TYPE", org.jooq.impl.SQLDataType.BIGINT, this, "类型,cardType,RLT_CARD_TYPE");

    /**
     * The column <code>DB_HTL.v_htl_card.R_MEMBER_ID</code>. memberId,R_MEMBER_ID
     */
    public final TableField<VHtlCardRecord, String> R_MEMBER_ID = createField("R_MEMBER_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "memberId,R_MEMBER_ID");

    /**
     * The column <code>DB_HTL.v_htl_card.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<VHtlCardRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.v_htl_card.IS_MAJOR</code>. 主卡,major,IS_MAJOR
     */
    public final TableField<VHtlCardRecord, Boolean> IS_MAJOR = createField("IS_MAJOR", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "主卡,major,IS_MAJOR");

    /**
     * The column <code>DB_HTL.v_htl_card.R_HOTEL_ID</code>. 外键——关联到酒店ID,hotelId,R_HOTEL_ID
     */
    public final TableField<VHtlCardRecord, Long> R_HOTEL_ID = createField("R_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "外键——关联到酒店ID,hotelId,R_HOTEL_ID");

    /**
     * Create a <code>DB_HTL.v_htl_card</code> table reference
     */
    public VHtlCard() {
        this(DSL.name("v_htl_card"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_card</code> table reference
     */
    public VHtlCard(String alias) {
        this(DSL.name(alias), V_HTL_CARD);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_card</code> table reference
     */
    public VHtlCard(Name alias) {
        this(alias, V_HTL_CARD);
    }

    private VHtlCard(Name alias, Table<VHtlCardRecord> aliased) {
        this(alias, aliased, null);
    }

    private VHtlCard(Name alias, Table<VHtlCardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlCard as(String alias) {
        return new VHtlCard(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlCard as(Name alias) {
        return new VHtlCard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlCard rename(String name) {
        return new VHtlCard(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlCard rename(Name name) {
        return new VHtlCard(name, null);
    }
}
