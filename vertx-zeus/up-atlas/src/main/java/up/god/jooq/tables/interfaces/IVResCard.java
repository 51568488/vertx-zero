/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IVResCard extends Serializable {

    /**
     * Setter for <code>DB_HTL.v_res_card.PK_ID</code>. uniqueId,PK_ID
     */
    public IVResCard setPkId(String value);

    /**
     * Getter for <code>DB_HTL.v_res_card.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.v_res_card.S_MOBILE</code>. 手机号,mobile,S_MOBILE
     */
    public IVResCard setSMobile(String value);

    /**
     * Getter for <code>DB_HTL.v_res_card.S_MOBILE</code>. 手机号,mobile,S_MOBILE
     */
    public String getSMobile();

    /**
     * Setter for <code>DB_HTL.v_res_card.S_REALNAME</code>. realname,S_REALNAME
     */
    public IVResCard setSRealname(String value);

    /**
     * Getter for <code>DB_HTL.v_res_card.S_REALNAME</code>. realname,S_REALNAME
     */
    public String getSRealname();

    /**
     * Setter for <code>DB_HTL.v_res_card.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public IVResCard setSNickname(String value);

    /**
     * Getter for <code>DB_HTL.v_res_card.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public String getSNickname();

    /**
     * Setter for <code>DB_HTL.v_res_card.MEMBER_ID</code>. uniqueId,PK_ID
     */
    public IVResCard setMemberId(String value);

    /**
     * Getter for <code>DB_HTL.v_res_card.MEMBER_ID</code>. uniqueId,PK_ID
     */
    public String getMemberId();

    /**
     * Setter for <code>DB_HTL.v_res_card.S_CODE</code>. code,S_CODE
     */
    public IVResCard setSCode(String value);

    /**
     * Getter for <code>DB_HTL.v_res_card.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.v_res_card.S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    public IVResCard setSNumber(String value);

    /**
     * Getter for <code>DB_HTL.v_res_card.S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    public String getSNumber();

    /**
     * Setter for <code>DB_HTL.v_res_card.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    public IVResCard setDAmount(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.v_res_card.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    public BigDecimal getDAmount();

    /**
     * Setter for <code>DB_HTL.v_res_card.L_POINT</code>. 积分,point,L_POINT
     */
    public IVResCard setLPoint(Long value);

    /**
     * Getter for <code>DB_HTL.v_res_card.L_POINT</code>. 积分,point,L_POINT
     */
    public Long getLPoint();

    /**
     * Setter for <code>DB_HTL.v_res_card.S_BATCH</code>. 批次,batch,S_BATCH
     */
    public IVResCard setSBatch(String value);

    /**
     * Getter for <code>DB_HTL.v_res_card.S_BATCH</code>. 批次,batch,S_BATCH
     */
    public String getSBatch();

    /**
     * Setter for <code>DB_HTL.v_res_card.D_EXPIRED_TIME</code>. 过期时间,expiredTime,D_EXPIRED_TIME
     */
    public IVResCard setDExpiredTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_res_card.D_EXPIRED_TIME</code>. 过期时间,expiredTime,D_EXPIRED_TIME
     */
    public LocalDateTime getDExpiredTime();

    /**
     * Setter for <code>DB_HTL.v_res_card.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public IVResCard setRHotelId(Long value);

    /**
     * Getter for <code>DB_HTL.v_res_card.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public Long getRHotelId();

    /**
     * Setter for <code>DB_HTL.v_res_card.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IVResCard setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.v_res_card.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IVResCard
     */
    public void from(up.god.jooq.tables.interfaces.IVResCard from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IVResCard
     */
    public <E extends up.god.jooq.tables.interfaces.IVResCard> E into(E into);

    default IVResCard fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        setSMobile(json.getString("S_MOBILE"));
        setSRealname(json.getString("S_REALNAME"));
        setSNickname(json.getString("S_NICKNAME"));
        setMemberId(json.getString("MEMBER_ID"));
        setSCode(json.getString("S_CODE"));
        setSNumber(json.getString("S_NUMBER"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT!
        setLPoint(json.getLong("L_POINT"));
        setSBatch(json.getString("S_BATCH"));
        // Omitting unrecognized type java.time.LocalDateTime for column D_EXPIRED_TIME!
        setRHotelId(json.getLong("R_HOTEL_ID"));
        setZSigma(json.getString("Z_SIGMA"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("S_MOBILE",getSMobile());
        json.put("S_REALNAME",getSRealname());
        json.put("S_NICKNAME",getSNickname());
        json.put("MEMBER_ID",getMemberId());
        json.put("S_CODE",getSCode());
        json.put("S_NUMBER",getSNumber());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT!
        json.put("L_POINT",getLPoint());
        json.put("S_BATCH",getSBatch());
        // Omitting unrecognized type java.time.LocalDateTime for column D_EXPIRED_TIME!
        json.put("R_HOTEL_ID",getRHotelId());
        json.put("Z_SIGMA",getZSigma());
        return json;
    }

}
