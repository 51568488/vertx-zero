/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.HrRelEmployeeBaccountRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HrRelEmployeeBaccount extends TableImpl<HrRelEmployeeBaccountRecord> {

    private static final long serialVersionUID = -1860107181;

    /**
     * The reference instance of <code>DB_HTL.HR_REL_EMPLOYEE_BACCOUNT</code>
     */
    public static final HrRelEmployeeBaccount HR_REL_EMPLOYEE_BACCOUNT = new HrRelEmployeeBaccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HrRelEmployeeBaccountRecord> getRecordType() {
        return HrRelEmployeeBaccountRecord.class;
    }

    /**
     * The column <code>DB_HTL.HR_REL_EMPLOYEE_BACCOUNT.R_BANKACCOUNT_ID</code>. bankAccountId,R_BANKACCOUNT_ID
     */
    public final TableField<HrRelEmployeeBaccountRecord, Long> R_BANKACCOUNT_ID = createField("R_BANKACCOUNT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "bankAccountId,R_BANKACCOUNT_ID");

    /**
     * The column <code>DB_HTL.HR_REL_EMPLOYEE_BACCOUNT.R_EMPLOYEE_ID</code>. employeeId,R_EMPLOYEE_ID
     */
    public final TableField<HrRelEmployeeBaccountRecord, Long> R_EMPLOYEE_ID = createField("R_EMPLOYEE_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "employeeId,R_EMPLOYEE_ID");

    /**
     * Create a <code>DB_HTL.HR_REL_EMPLOYEE_BACCOUNT</code> table reference
     */
    public HrRelEmployeeBaccount() {
        this(DSL.name("HR_REL_EMPLOYEE_BACCOUNT"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.HR_REL_EMPLOYEE_BACCOUNT</code> table reference
     */
    public HrRelEmployeeBaccount(String alias) {
        this(DSL.name(alias), HR_REL_EMPLOYEE_BACCOUNT);
    }

    /**
     * Create an aliased <code>DB_HTL.HR_REL_EMPLOYEE_BACCOUNT</code> table reference
     */
    public HrRelEmployeeBaccount(Name alias) {
        this(alias, HR_REL_EMPLOYEE_BACCOUNT);
    }

    private HrRelEmployeeBaccount(Name alias, Table<HrRelEmployeeBaccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private HrRelEmployeeBaccount(Name alias, Table<HrRelEmployeeBaccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HR_REL_EMPLOYEE_BACCOUNT_FK_HR_REL_EBA_BACCOUNT, Indexes.HR_REL_EMPLOYEE_BACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HrRelEmployeeBaccountRecord> getPrimaryKey() {
        return Keys.KEY_HR_REL_EMPLOYEE_BACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HrRelEmployeeBaccountRecord>> getKeys() {
        return Arrays.<UniqueKey<HrRelEmployeeBaccountRecord>>asList(Keys.KEY_HR_REL_EMPLOYEE_BACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HrRelEmployeeBaccount as(String alias) {
        return new HrRelEmployeeBaccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HrRelEmployeeBaccount as(Name alias) {
        return new HrRelEmployeeBaccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HrRelEmployeeBaccount rename(String name) {
        return new HrRelEmployeeBaccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HrRelEmployeeBaccount rename(Name name) {
        return new HrRelEmployeeBaccount(name, null);
    }
}
