/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.OthRefreshToken;
import up.god.jooq.tables.interfaces.IOthRefreshToken;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OthRefreshTokenRecord extends UpdatableRecordImpl<OthRefreshTokenRecord> implements Record12<String, byte[], byte[], String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IOthRefreshToken {

    private static final long serialVersionUID = 1804970039;

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public OthRefreshTokenRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.B_AUTH</code>. authenticate,B_AUTH
     */
    @Override
    public OthRefreshTokenRecord setBAuth(byte... value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.B_AUTH</code>. authenticate,B_AUTH
     */
    @Override
    public byte[] getBAuth() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.B_TOKEN</code>. token,B_TOKEN
     */
    @Override
    public OthRefreshTokenRecord setBToken(byte... value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.B_TOKEN</code>. token,B_TOKEN
     */
    @Override
    public byte[] getBToken() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.S_CODE</code>. code,S_CODE
     */
    @Override
    public OthRefreshTokenRecord setSCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public OthRefreshTokenRecord setJConfig(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public OthRefreshTokenRecord setIsActive(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public OthRefreshTokenRecord setZSigma(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public OthRefreshTokenRecord setZLanguage(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public OthRefreshTokenRecord setZCreateBy(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public OthRefreshTokenRecord setZCreateTime(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public OthRefreshTokenRecord setZUpdateBy(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public OthRefreshTokenRecord setZUpdateTime(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.OTH_REFRESH_TOKEN.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<String, byte[], byte[], String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<String, byte[], byte[], String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field2() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.B_AUTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field3() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.B_TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field10() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field12() {
        return OthRefreshToken.OTH_REFRESH_TOKEN.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component2() {
        return getBAuth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component3() {
        return getBToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component10() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component12() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value2() {
        return getBAuth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value3() {
        return getBToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value10() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value12() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value2(byte... value) {
        setBAuth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value3(byte... value) {
        setBToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value4(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value5(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value6(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value7(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value8(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value9(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value10(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value11(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord value12(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OthRefreshTokenRecord values(String value1, byte[] value2, byte[] value3, String value4, String value5, Boolean value6, String value7, String value8, String value9, LocalDateTime value10, String value11, LocalDateTime value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IOthRefreshToken from) {
        setPkId(from.getPkId());
        setBAuth(from.getBAuth());
        setBToken(from.getBToken());
        setSCode(from.getSCode());
        setJConfig(from.getJConfig());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IOthRefreshToken> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OthRefreshTokenRecord
     */
    public OthRefreshTokenRecord() {
        super(OthRefreshToken.OTH_REFRESH_TOKEN);
    }

    /**
     * Create a detached, initialised OthRefreshTokenRecord
     */
    public OthRefreshTokenRecord(String pkId, byte[] bAuth, byte[] bToken, String sCode, String jConfig, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(OthRefreshToken.OTH_REFRESH_TOKEN);

        set(0, pkId);
        set(1, bAuth);
        set(2, bToken);
        set(3, sCode);
        set(4, jConfig);
        set(5, isActive);
        set(6, zSigma);
        set(7, zLanguage);
        set(8, zCreateBy);
        set(9, zCreateTime);
        set(10, zUpdateBy);
        set(11, zUpdateTime);
    }
}
