/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VOthUserRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VOthUser extends TableImpl<VOthUserRecord> {

    private static final long serialVersionUID = 1721625927;

    /**
     * The reference instance of <code>DB_HTL.v_oth_user</code>
     */
    public static final VOthUser V_OTH_USER = new VOthUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VOthUserRecord> getRecordType() {
        return VOthUserRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_oth_user.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VOthUserRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_oth_user.S_USERNAME</code>. 登陆账号,username,S_USERNAME
     */
    public final TableField<VOthUserRecord, String> S_USERNAME = createField("S_USERNAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "登陆账号,username,S_USERNAME");

    /**
     * The column <code>DB_HTL.v_oth_user.S_EMAIL</code>. 个人Email,email,S_EMAIL
     */
    public final TableField<VOthUserRecord, String> S_EMAIL = createField("S_EMAIL", org.jooq.impl.SQLDataType.VARCHAR(72), this, "个人Email,email,S_EMAIL");

    /**
     * The column <code>DB_HTL.v_oth_user.S_MOBILE</code>. 手机号,mobile,S_MOBILE
     */
    public final TableField<VOthUserRecord, String> S_MOBILE = createField("S_MOBILE", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "手机号,mobile,S_MOBILE");

    /**
     * The column <code>DB_HTL.v_oth_user.S_PASSWORD</code>. 登陆口令/密码,password,S_PASSWORD
     */
    public final TableField<VOthUserRecord, String> S_PASSWORD = createField("S_PASSWORD", org.jooq.impl.SQLDataType.VARCHAR(255), this, "登陆口令/密码,password,S_PASSWORD");

    /**
     * The column <code>DB_HTL.v_oth_user.S_QQ</code>. 个人QQ号,qq,S_QQ
     */
    public final TableField<VOthUserRecord, String> S_QQ = createField("S_QQ", org.jooq.impl.SQLDataType.VARCHAR(10), this, "个人QQ号,qq,S_QQ");

    /**
     * The column <code>DB_HTL.v_oth_user.S_ALIPAY</code>. 支付宝,alipay,S_ALIPAY
     */
    public final TableField<VOthUserRecord, String> S_ALIPAY = createField("S_ALIPAY", org.jooq.impl.SQLDataType.VARCHAR(72), this, "支付宝,alipay,S_ALIPAY");

    /**
     * The column <code>DB_HTL.v_oth_user.S_TAOBAO</code>. 淘宝,taobao,S_TAOBAO
     */
    public final TableField<VOthUserRecord, String> S_TAOBAO = createField("S_TAOBAO", org.jooq.impl.SQLDataType.VARCHAR(72), this, "淘宝,taobao,S_TAOBAO");

    /**
     * The column <code>DB_HTL.v_oth_user.S_WEIBO</code>. 微博账号,weibo,S_WEIBO
     */
    public final TableField<VOthUserRecord, String> S_WEIBO = createField("S_WEIBO", org.jooq.impl.SQLDataType.VARCHAR(64), this, "微博账号,weibo,S_WEIBO");

    /**
     * The column <code>DB_HTL.v_oth_user.S_WECHAT</code>. 微信账号,wechat,S_WECHAT
     */
    public final TableField<VOthUserRecord, String> S_WECHAT = createField("S_WECHAT", org.jooq.impl.SQLDataType.VARCHAR(64), this, "微信账号,wechat,S_WECHAT");

    /**
     * The column <code>DB_HTL.v_oth_user.S_SECRET</code>. 专用私钥，OAuth中也可用,secret,S_SECRET
     */
    public final TableField<VOthUserRecord, String> S_SECRET = createField("S_SECRET", org.jooq.impl.SQLDataType.VARCHAR(255), this, "专用私钥，OAuth中也可用,secret,S_SECRET");

    /**
     * The column <code>DB_HTL.v_oth_user.T_REDIRECT_URI</code>. redirectUri,T_REDIRECT_URI
     */
    public final TableField<VOthUserRecord, String> T_REDIRECT_URI = createField("T_REDIRECT_URI", org.jooq.impl.SQLDataType.CLOB, this, "redirectUri,T_REDIRECT_URI");

    /**
     * The column <code>DB_HTL.v_oth_user.S_SCOPE</code>. scope,S_SCOPE
     */
    public final TableField<VOthUserRecord, String> S_SCOPE = createField("S_SCOPE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "scope,S_SCOPE");

    /**
     * The column <code>DB_HTL.v_oth_user.S_CLIENT_SECRET</code>. clientSecret,S_CLIENT_SECRET
     */
    public final TableField<VOthUserRecord, String> S_CLIENT_SECRET = createField("S_CLIENT_SECRET", org.jooq.impl.SQLDataType.VARCHAR(64), this, "clientSecret,S_CLIENT_SECRET");

    /**
     * The column <code>DB_HTL.v_oth_user.S_GRANT_TYPE</code>. grantType,S_GRANT_TYPE
     */
    public final TableField<VOthUserRecord, String> S_GRANT_TYPE = createField("S_GRANT_TYPE", org.jooq.impl.SQLDataType.VARCHAR(32), this, "grantType,S_GRANT_TYPE");

    /**
     * The column <code>DB_HTL.v_oth_user.ROLE_ID</code>. roleId,R_ROLE_ID
     */
    public final TableField<VOthUserRecord, String> ROLE_ID = createField("ROLE_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "roleId,R_ROLE_ID");

    /**
     * Create a <code>DB_HTL.v_oth_user</code> table reference
     */
    public VOthUser() {
        this(DSL.name("v_oth_user"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_oth_user</code> table reference
     */
    public VOthUser(String alias) {
        this(DSL.name(alias), V_OTH_USER);
    }

    /**
     * Create an aliased <code>DB_HTL.v_oth_user</code> table reference
     */
    public VOthUser(Name alias) {
        this(alias, V_OTH_USER);
    }

    private VOthUser(Name alias, Table<VOthUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private VOthUser(Name alias, Table<VOthUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VOthUser as(String alias) {
        return new VOthUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VOthUser as(Name alias) {
        return new VOthUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VOthUser rename(String name) {
        return new VOthUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VOthUser rename(Name name) {
        return new VOthUser(name, null);
    }
}
