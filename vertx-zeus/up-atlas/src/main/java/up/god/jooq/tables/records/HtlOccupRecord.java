/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.HtlOccup;
import up.god.jooq.tables.interfaces.IHtlOccup;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlOccupRecord extends UpdatableRecordImpl<HtlOccupRecord> implements IHtlOccup {

    private static final long serialVersionUID = -1884422663;

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public HtlOccupRecord setPkId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public Long getPkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.D_INCP_TIME</code>. inoccupTime,D_INCP_TIME
     */
    @Override
    public HtlOccupRecord setDIncpTime(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.D_INCP_TIME</code>. inoccupTime,D_INCP_TIME
     */
    @Override
    public LocalDateTime getDIncpTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.T_PREFERENCE</code>. preference,T_PREFERENCE
     */
    @Override
    public HtlOccupRecord setTPreference(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.T_PREFERENCE</code>. preference,T_PREFERENCE
     */
    @Override
    public String getTPreference() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.T_REQUEST</code>. request,T_REQUEST
     */
    @Override
    public HtlOccupRecord setTRequest(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.T_REQUEST</code>. request,T_REQUEST
     */
    @Override
    public String getTRequest() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.V_HOTEL_ID</code>. hotelId,V_HOTEL_ID
     */
    @Override
    public HtlOccupRecord setVHotelId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.V_HOTEL_ID</code>. hotelId,V_HOTEL_ID
     */
    @Override
    public Long getVHotelId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.V_SCHEDULE_ID</code>. scheduleId,V_SCHEDULE_ID
     */
    @Override
    public HtlOccupRecord setVScheduleId(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.V_SCHEDULE_ID</code>. scheduleId,V_SCHEDULE_ID
     */
    @Override
    public Long getVScheduleId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.S_CODE</code>. code,S_CODE
     */
    @Override
    public HtlOccupRecord setSCode(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.S_CAR_PLATE</code>. carPlate,S_CAR_PLATE
     */
    @Override
    public HtlOccupRecord setSCarPlate(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.S_CAR_PLATE</code>. carPlate,S_CAR_PLATE
     */
    @Override
    public String getSCarPlate() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.S_OPERATOR</code>. operator,S_OPERATOR
     */
    @Override
    public HtlOccupRecord setSOperator(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.S_OPERATOR</code>. operator,S_OPERATOR
     */
    @Override
    public String getSOperator() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.S_ROOM_NUM</code>. roomNumber,S_ROOM_NUM
     */
    @Override
    public HtlOccupRecord setSRoomNum(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.S_ROOM_NUM</code>. roomNumber,S_ROOM_NUM
     */
    @Override
    public String getSRoomNum() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.S_SERIAL</code>. serial,S_SERIAL
     */
    @Override
    public HtlOccupRecord setSSerial(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.S_SERIAL</code>. serial,S_SERIAL
     */
    @Override
    public String getSSerial() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public HtlOccupRecord setJConfig(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.I_CARD_COUNTER</code>. cardCounter,I_CARD_COUNTER
     */
    @Override
    public HtlOccupRecord setICardCounter(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.I_CARD_COUNTER</code>. cardCounter,I_CARD_COUNTER
     */
    @Override
    public Integer getICardCounter() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.I_INSIDE_DAYS</code>. insideDays,I_INSIDE_DAYS
     */
    @Override
    public HtlOccupRecord setIInsideDays(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.I_INSIDE_DAYS</code>. insideDays,I_INSIDE_DAYS
     */
    @Override
    public Integer getIInsideDays() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.I_INSIDE_PERSONS</code>. insidePersons,I_INSIDE_PERSONS
     */
    @Override
    public HtlOccupRecord setIInsidePersons(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.I_INSIDE_PERSONS</code>. insidePersons,I_INSIDE_PERSONS
     */
    @Override
    public Integer getIInsidePersons() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.RLT_OCCUP_STATUS</code>. status,RLT_OCCUP_STATUS
     */
    @Override
    public HtlOccupRecord setRltOccupStatus(Long value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.RLT_OCCUP_STATUS</code>. status,RLT_OCCUP_STATUS
     */
    @Override
    public Long getRltOccupStatus() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.RLT_OCCUP_TYPE</code>. type,RLT_OCCUP_TYPE
     */
    @Override
    public HtlOccupRecord setRltOccupType(Long value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.RLT_OCCUP_TYPE</code>. type,RLT_OCCUP_TYPE
     */
    @Override
    public Long getRltOccupType() {
        return (Long) get(16);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.R_ORDER_ID</code>. orderId,R_ORDER_ID
     */
    @Override
    public HtlOccupRecord setROrderId(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.R_ORDER_ID</code>. orderId,R_ORDER_ID
     */
    @Override
    public String getROrderId() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.R_TRAVELER_ID</code>. travelerId,R_TRAVELER_ID
     */
    @Override
    public HtlOccupRecord setRTravelerId(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.R_TRAVELER_ID</code>. travelerId,R_TRAVELER_ID
     */
    @Override
    public String getRTravelerId() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.IS_SECRET</code>. secret,IS_SECRET
     */
    @Override
    public HtlOccupRecord setIsSecret(Boolean value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.IS_SECRET</code>. secret,IS_SECRET
     */
    @Override
    public Boolean getIsSecret() {
        return (Boolean) get(19);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public HtlOccupRecord setIsActive(Boolean value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(20);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public HtlOccupRecord setZSigma(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(21);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public HtlOccupRecord setZLanguage(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(22);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public HtlOccupRecord setZCreateBy(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(23);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public HtlOccupRecord setZCreateTime(LocalDateTime value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(24);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public HtlOccupRecord setZUpdateBy(String value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(25);
    }

    /**
     * Setter for <code>DB_HTL.HTL_OCCUP.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public HtlOccupRecord setZUpdateTime(LocalDateTime value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_OCCUP.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(26);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IHtlOccup from) {
        setPkId(from.getPkId());
        setDIncpTime(from.getDIncpTime());
        setTPreference(from.getTPreference());
        setTRequest(from.getTRequest());
        setVHotelId(from.getVHotelId());
        setVScheduleId(from.getVScheduleId());
        setSCode(from.getSCode());
        setSCarPlate(from.getSCarPlate());
        setSOperator(from.getSOperator());
        setSRoomNum(from.getSRoomNum());
        setSSerial(from.getSSerial());
        setJConfig(from.getJConfig());
        setICardCounter(from.getICardCounter());
        setIInsideDays(from.getIInsideDays());
        setIInsidePersons(from.getIInsidePersons());
        setRltOccupStatus(from.getRltOccupStatus());
        setRltOccupType(from.getRltOccupType());
        setROrderId(from.getROrderId());
        setRTravelerId(from.getRTravelerId());
        setIsSecret(from.getIsSecret());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IHtlOccup> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HtlOccupRecord
     */
    public HtlOccupRecord() {
        super(HtlOccup.HTL_OCCUP);
    }

    /**
     * Create a detached, initialised HtlOccupRecord
     */
    public HtlOccupRecord(Long pkId, LocalDateTime dIncpTime, String tPreference, String tRequest, Long vHotelId, Long vScheduleId, String sCode, String sCarPlate, String sOperator, String sRoomNum, String sSerial, String jConfig, Integer iCardCounter, Integer iInsideDays, Integer iInsidePersons, Long rltOccupStatus, Long rltOccupType, String rOrderId, String rTravelerId, Boolean isSecret, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(HtlOccup.HTL_OCCUP);

        set(0, pkId);
        set(1, dIncpTime);
        set(2, tPreference);
        set(3, tRequest);
        set(4, vHotelId);
        set(5, vScheduleId);
        set(6, sCode);
        set(7, sCarPlate);
        set(8, sOperator);
        set(9, sRoomNum);
        set(10, sSerial);
        set(11, jConfig);
        set(12, iCardCounter);
        set(13, iInsideDays);
        set(14, iInsidePersons);
        set(15, rltOccupStatus);
        set(16, rltOccupType);
        set(17, rOrderId);
        set(18, rTravelerId);
        set(19, isSecret);
        set(20, isActive);
        set(21, zSigma);
        set(22, zLanguage);
        set(23, zCreateBy);
        set(24, zCreateTime);
        set(25, zUpdateBy);
        set(26, zUpdateTime);
    }
}
