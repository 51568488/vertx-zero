/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.ResPartnerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResPartner extends TableImpl<ResPartnerRecord> {

    private static final long serialVersionUID = -1053670317;

    /**
     * The reference instance of <code>DB_HTL.RES_PARTNER</code>
     */
    public static final ResPartner RES_PARTNER = new ResPartner();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResPartnerRecord> getRecordType() {
        return ResPartnerRecord.class;
    }

    /**
     * The column <code>DB_HTL.RES_PARTNER.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<ResPartnerRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.RES_PARTNER.B_SIGNUP_TOKEN</code>. 签名专用TOKEN,signToken,B_SIGNUP_TOKEN
     */
    public final TableField<ResPartnerRecord, byte[]> B_SIGNUP_TOKEN = createField("B_SIGNUP_TOKEN", org.jooq.impl.SQLDataType.BLOB, this, "签名专用TOKEN,signToken,B_SIGNUP_TOKEN");

    /**
     * The column <code>DB_HTL.RES_PARTNER.D_CREDIT_END</code>. 凭证结束时间,creditEnd,D_CREDIT_END
     */
    public final TableField<ResPartnerRecord, LocalDateTime> D_CREDIT_END = createField("D_CREDIT_END", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "凭证结束时间,creditEnd,D_CREDIT_END");

    /**
     * The column <code>DB_HTL.RES_PARTNER.D_CREDIT_START</code>. 凭证开始时间,creditStart,D_CREDIT_START
     */
    public final TableField<ResPartnerRecord, LocalDateTime> D_CREDIT_START = createField("D_CREDIT_START", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "凭证开始时间,creditStart,D_CREDIT_START");

    /**
     * The column <code>DB_HTL.RES_PARTNER.D_SIGNUP_EXPIRED</code>. 签名过期时间,signExpired,D_SIGNUP_EXPIRED
     */
    public final TableField<ResPartnerRecord, LocalDateTime> D_SIGNUP_EXPIRED = createField("D_SIGNUP_EXPIRED", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "签名过期时间,signExpired,D_SIGNUP_EXPIRED");

    /**
     * The column <code>DB_HTL.RES_PARTNER.T_COMMENT</code>. 备注信息，合作伙伴相关简介,comment,T_COMMENT
     */
    public final TableField<ResPartnerRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "备注信息，合作伙伴相关简介,comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.RES_PARTNER.T_FEATURE</code>. 合作伙伴特征描述,feature,T_FEATURE
     */
    public final TableField<ResPartnerRecord, String> T_FEATURE = createField("T_FEATURE", org.jooq.impl.SQLDataType.CLOB, this, "合作伙伴特征描述,feature,T_FEATURE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.T_LOCATION</code>. 直输地址，和下面的locationId选一使用,location,T_LOCATION
     */
    public final TableField<ResPartnerRecord, String> T_LOCATION = createField("T_LOCATION", org.jooq.impl.SQLDataType.CLOB, this, "直输地址，和下面的locationId选一使用,location,T_LOCATION");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_NAME</code>. 名称：口语化名称,name,S_NAME
     */
    public final TableField<ResPartnerRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "名称：口语化名称,name,S_NAME");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_CODE</code>. 合作伙伴代码,code,S_CODE
     */
    public final TableField<ResPartnerRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "合作伙伴代码,code,S_CODE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_BARCODE</code>. 条码信息,barCode,S_BARCODE
     */
    public final TableField<ResPartnerRecord, String> S_BARCODE = createField("S_BARCODE", org.jooq.impl.SQLDataType.VARCHAR(32), this, "条码信息,barCode,S_BARCODE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_CONTACT</code>. 联系人姓名,contact,S_CONTACT
     */
    public final TableField<ResPartnerRecord, String> S_CONTACT = createField("S_CONTACT", org.jooq.impl.SQLDataType.VARCHAR(32), this, "联系人姓名,contact,S_CONTACT");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_CONTRACT_CODE</code>. 外键关联contract的ID,保留,contractCode,S_CONTRACT_CODE
     */
    public final TableField<ResPartnerRecord, String> S_CONTRACT_CODE = createField("S_CONTRACT_CODE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "外键关联contract的ID,保留,contractCode,S_CONTRACT_CODE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_CREDIT_CODE</code>. 凭证代码,creditCode,S_CREDIT_CODE
     */
    public final TableField<ResPartnerRecord, String> S_CREDIT_CODE = createField("S_CREDIT_CODE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "凭证代码,creditCode,S_CREDIT_CODE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_DISPLAY_NAME</code>. 显示名称：用于呈现以及页面显示,displayName,S_DISPLAY_NAME
     */
    public final TableField<ResPartnerRecord, String> S_DISPLAY_NAME = createField("S_DISPLAY_NAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "显示名称：用于呈现以及页面显示,displayName,S_DISPLAY_NAME");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_EMAIL</code>. 官方专用联系邮件地址,email,S_EMAIL
     */
    public final TableField<ResPartnerRecord, String> S_EMAIL = createField("S_EMAIL", org.jooq.impl.SQLDataType.VARCHAR(64), this, "官方专用联系邮件地址,email,S_EMAIL");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_FAX</code>. 传真号码,fax,S_FAX
     */
    public final TableField<ResPartnerRecord, String> S_FAX = createField("S_FAX", org.jooq.impl.SQLDataType.VARCHAR(20), this, "传真号码,fax,S_FAX");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_INVOICE_TITLE</code>. 发票抬头,invoiceTitle,S_INVOICE_TITLE
     */
    public final TableField<ResPartnerRecord, String> S_INVOICE_TITLE = createField("S_INVOICE_TITLE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "发票抬头,invoiceTitle,S_INVOICE_TITLE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_MOBILE</code>. 联系手机号（主要联系电话）,mobile,S_MOBILE
     */
    public final TableField<ResPartnerRecord, String> S_MOBILE = createField("S_MOBILE", org.jooq.impl.SQLDataType.VARCHAR(20), this, "联系手机号（主要联系电话）,mobile,S_MOBILE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_NOTIFY_EMAIL</code>. 邮件系统中的From专用邮件地址,notifyEmail,S_NOTIFY_EMAIL
     */
    public final TableField<ResPartnerRecord, String> S_NOTIFY_EMAIL = createField("S_NOTIFY_EMAIL", org.jooq.impl.SQLDataType.VARCHAR(255), this, "邮件系统中的From专用邮件地址,notifyEmail,S_NOTIFY_EMAIL");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_PHONE</code>. 联系电话（座机，备用联系电话）,phone,S_PHONE
     */
    public final TableField<ResPartnerRecord, String> S_PHONE = createField("S_PHONE", org.jooq.impl.SQLDataType.VARCHAR(20), this, "联系电话（座机，备用联系电话）,phone,S_PHONE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_REF</code>. 引用链接信息：一般用于Feed、在线应用时专用引用链接,ref,S_REF
     */
    public final TableField<ResPartnerRecord, String> S_REF = createField("S_REF", org.jooq.impl.SQLDataType.VARCHAR(255), this, "引用链接信息：一般用于Feed、在线应用时专用引用链接,ref,S_REF");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_RUN_UP_LIMIT</code>. 挂账限额,runUpLimit,S_RUN_UP_LIMIT
     */
    public final TableField<ResPartnerRecord, String> S_RUN_UP_LIMIT = createField("S_RUN_UP_LIMIT", org.jooq.impl.SQLDataType.VARCHAR(64), this, "挂账限额,runUpLimit,S_RUN_UP_LIMIT");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_SIGNUP_TYPE</code>. 签名类型：E-SIGN,signType,S_SIGNUP_TYPE
     */
    public final TableField<ResPartnerRecord, String> S_SIGNUP_TYPE = createField("S_SIGNUP_TYPE", org.jooq.impl.SQLDataType.VARCHAR(32), this, "签名类型：E-SIGN,signType,S_SIGNUP_TYPE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_SIGN_NAME</code>. 签单人姓名,signName,S_SIGN_NAME
     */
    public final TableField<ResPartnerRecord, String> S_SIGN_NAME = createField("S_SIGN_NAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "签单人姓名,signName,S_SIGN_NAME");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_SIGN_NAME_ID</code>. 签单人ID,signNameId,S_SIGN_NAME_ID
     */
    public final TableField<ResPartnerRecord, String> S_SIGN_NAME_ID = createField("S_SIGN_NAME_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "签单人ID,signNameId,S_SIGN_NAME_ID");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_TITLE</code>. 公司标题：专用于官方流程正式处理专用信息,title,S_TITLE
     */
    public final TableField<ResPartnerRecord, String> S_TITLE = createField("S_TITLE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "公司标题：专用于官方流程正式处理专用信息,title,S_TITLE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_TZ</code>. 所在时区：该时区信息可以直接被程序解析,timeZone,S_TZ
     */
    public final TableField<ResPartnerRecord, String> S_TZ = createField("S_TZ", org.jooq.impl.SQLDataType.VARCHAR(16), this, "所在时区：该时区信息可以直接被程序解析,timeZone,S_TZ");

    /**
     * The column <code>DB_HTL.RES_PARTNER.S_WEBSITE</code>. 官方网站网址,website,S_WEBSITE
     */
    public final TableField<ResPartnerRecord, String> S_WEBSITE = createField("S_WEBSITE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "官方网站网址,website,S_WEBSITE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<ResPartnerRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.RES_PARTNER.RLT_CREDIT_ITEM</code>. 凭证项，关联Tabular,creditItem,RLT_CREDIT_ITEM
     */
    public final TableField<ResPartnerRecord, Long> RLT_CREDIT_ITEM = createField("RLT_CREDIT_ITEM", org.jooq.impl.SQLDataType.BIGINT, this, "凭证项，关联Tabular,creditItem,RLT_CREDIT_ITEM");

    /**
     * The column <code>DB_HTL.RES_PARTNER.RLT_TYPE</code>. 合作伙伴类型,type,RLT_TYPE
     */
    public final TableField<ResPartnerRecord, Long> RLT_TYPE = createField("RLT_TYPE", org.jooq.impl.SQLDataType.BIGINT, this, "合作伙伴类型,type,RLT_TYPE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.R_LOCATION_ID</code>. 外键关联Location的ID,locationId,R_LOCATION_ID
     */
    public final TableField<ResPartnerRecord, Long> R_LOCATION_ID = createField("R_LOCATION_ID", org.jooq.impl.SQLDataType.BIGINT, this, "外键关联Location的ID,locationId,R_LOCATION_ID");

    /**
     * The column <code>DB_HTL.RES_PARTNER.IS_RUN_UP</code>. 允许挂账？赊账？,runUp,IS_RUN_UP
     */
    public final TableField<ResPartnerRecord, Boolean> IS_RUN_UP = createField("IS_RUN_UP", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "允许挂账？赊账？,runUp,IS_RUN_UP");

    /**
     * The column <code>DB_HTL.RES_PARTNER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<ResPartnerRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<ResPartnerRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.RES_PARTNER.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<ResPartnerRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.RES_PARTNER.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<ResPartnerRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.RES_PARTNER.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<ResPartnerRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.RES_PARTNER.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<ResPartnerRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.RES_PARTNER.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<ResPartnerRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.RES_PARTNER</code> table reference
     */
    public ResPartner() {
        this(DSL.name("RES_PARTNER"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.RES_PARTNER</code> table reference
     */
    public ResPartner(String alias) {
        this(DSL.name(alias), RES_PARTNER);
    }

    /**
     * Create an aliased <code>DB_HTL.RES_PARTNER</code> table reference
     */
    public ResPartner(Name alias) {
        this(alias, RES_PARTNER);
    }

    private ResPartner(Name alias, Table<ResPartnerRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResPartner(Name alias, Table<ResPartnerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RES_PARTNER_FK_RES_PARTNER_R_LOCATION_ID, Indexes.RES_PARTNER_PRIMARY, Indexes.RES_PARTNER_UK_RES_PARTNER_S_CODE_Z_SIGMA, Indexes.RES_PARTNER_UK_RES_PARTNER_S_NAME_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ResPartnerRecord, Long> getIdentity() {
        return Keys.IDENTITY_RES_PARTNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResPartnerRecord> getPrimaryKey() {
        return Keys.KEY_RES_PARTNER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResPartnerRecord>> getKeys() {
        return Arrays.<UniqueKey<ResPartnerRecord>>asList(Keys.KEY_RES_PARTNER_PRIMARY, Keys.KEY_RES_PARTNER_UK_RES_PARTNER_S_NAME_Z_SIGMA, Keys.KEY_RES_PARTNER_UK_RES_PARTNER_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResPartner as(String alias) {
        return new ResPartner(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResPartner as(Name alias) {
        return new ResPartner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResPartner rename(String name) {
        return new ResPartner(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResPartner rename(Name name) {
        return new ResPartner(name, null);
    }
}
