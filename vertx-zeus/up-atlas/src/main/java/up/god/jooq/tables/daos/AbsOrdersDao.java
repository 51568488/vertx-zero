/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.AbsOrders;
import up.god.jooq.tables.records.AbsOrdersRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AbsOrdersDao extends DAOImpl<AbsOrdersRecord, up.god.jooq.tables.pojos.AbsOrders, Long> implements VertxDAO<up.god.jooq.tables.records.AbsOrdersRecord,up.god.jooq.tables.pojos.AbsOrders,java.lang.Long> {

    /**
     * Create a new AbsOrdersDao without any configuration
     */
    public AbsOrdersDao() {
        super(AbsOrders.ABS_ORDERS, up.god.jooq.tables.pojos.AbsOrders.class);
    }

    /**
     * Create a new AbsOrdersDao with an attached configuration
     */
    public AbsOrdersDao(Configuration configuration) {
        super(AbsOrders.ABS_ORDERS, up.god.jooq.tables.pojos.AbsOrders.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(up.god.jooq.tables.pojos.AbsOrders object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByPkId(Long... values) {
        return fetch(AbsOrders.ABS_ORDERS.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.AbsOrders fetchOneByPkId(Long value) {
        return fetchOne(AbsOrders.ABS_ORDERS.PK_ID, value);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_ACTUAL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByDAmountActual(BigDecimal... values) {
        return fetch(AbsOrders.ABS_ORDERS.D_AMOUNT_ACTUAL, values);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_TAXED IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByDAmountTaxed(BigDecimal... values) {
        return fetch(AbsOrders.ABS_ORDERS.D_AMOUNT_TAXED, values);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_TOTAL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByDAmountTotal(BigDecimal... values) {
        return fetch(AbsOrders.ABS_ORDERS.D_AMOUNT_TOTAL, values);
    }

    /**
     * Fetch records that have <code>D_FINISHED_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByDFinishedTime(LocalDateTime... values) {
        return fetch(AbsOrders.ABS_ORDERS.D_FINISHED_TIME, values);
    }

    /**
     * Fetch records that have <code>D_ORDER_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByDOrderTime(LocalDateTime... values) {
        return fetch(AbsOrders.ABS_ORDERS.D_ORDER_TIME, values);
    }

    /**
     * Fetch records that have <code>D_TAX IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByDTax(BigDecimal... values) {
        return fetch(AbsOrders.ABS_ORDERS.D_TAX, values);
    }

    /**
     * Fetch records that have <code>D_TAX_RATE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByDTaxRate(BigDecimal... values) {
        return fetch(AbsOrders.ABS_ORDERS.D_TAX_RATE, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchBySCode(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_CREDENCE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchBySCredence(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.S_CREDENCE, values);
    }

    /**
     * Fetch records that have <code>S_SERIAL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchBySSerial(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.S_SERIAL, values);
    }

    /**
     * Fetch records that have <code>S_STATUS IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchBySStatus(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.S_STATUS, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByJConfig(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>H_CAT_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByHCatId(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.H_CAT_ID, values);
    }

    /**
     * Fetch records that have <code>R_COMPANY_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByRCompanyId(Long... values) {
        return fetch(AbsOrders.ABS_ORDERS.R_COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>R_CURRENCY_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByRCurrencyId(Long... values) {
        return fetch(AbsOrders.ABS_ORDERS.R_CURRENCY_ID, values);
    }

    /**
     * Fetch records that have <code>R_INCOTERM_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByRIncotermId(Long... values) {
        return fetch(AbsOrders.ABS_ORDERS.R_INCOTERM_ID, values);
    }

    /**
     * Fetch records that have <code>R_PARTNER_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByRPartnerId(Long... values) {
        return fetch(AbsOrders.ABS_ORDERS.R_PARTNER_ID, values);
    }

    /**
     * Fetch records that have <code>R_WH_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByRWhId(Long... values) {
        return fetch(AbsOrders.ABS_ORDERS.R_WH_ID, values);
    }

    /**
     * Fetch records that have <code>IS_APPROVAL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByIsApproval(Boolean... values) {
        return fetch(AbsOrders.ABS_ORDERS.IS_APPROVAL, values);
    }

    /**
     * Fetch records that have <code>IS_INVOICE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByIsInvoice(Boolean... values) {
        return fetch(AbsOrders.ABS_ORDERS.IS_INVOICE, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByIsActive(Boolean... values) {
        return fetch(AbsOrders.ABS_ORDERS.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByZSigma(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByZLanguage(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByZCreateBy(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(AbsOrders.ABS_ORDERS.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByZUpdateBy(String... values) {
        return fetch(AbsOrders.ABS_ORDERS.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrders> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(AbsOrders.ABS_ORDERS.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByPkIdAsync(List<Long> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.AbsOrders> fetchOneByPkIdAsync(Long value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>D_AMOUNT_ACTUAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByDAmountActualAsync(List<BigDecimal> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.D_AMOUNT_ACTUAL,values);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_TAXED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByDAmountTaxedAsync(List<BigDecimal> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.D_AMOUNT_TAXED,values);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_TOTAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByDAmountTotalAsync(List<BigDecimal> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.D_AMOUNT_TOTAL,values);
    }

    /**
     * Fetch records that have <code>D_FINISHED_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByDFinishedTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.D_FINISHED_TIME,values);
    }

    /**
     * Fetch records that have <code>D_ORDER_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByDOrderTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.D_ORDER_TIME,values);
    }

    /**
     * Fetch records that have <code>D_TAX IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByDTaxAsync(List<BigDecimal> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.D_TAX,values);
    }

    /**
     * Fetch records that have <code>D_TAX_RATE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByDTaxRateAsync(List<BigDecimal> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.D_TAX_RATE,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_CREDENCE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchBySCredenceAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.S_CREDENCE,values);
    }

    /**
     * Fetch records that have <code>S_SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchBySSerialAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.S_SERIAL,values);
    }

    /**
     * Fetch records that have <code>S_STATUS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchBySStatusAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.S_STATUS,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>H_CAT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByHCatIdAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.H_CAT_ID,values);
    }

    /**
     * Fetch records that have <code>R_COMPANY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByRCompanyIdAsync(List<Long> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.R_COMPANY_ID,values);
    }

    /**
     * Fetch records that have <code>R_CURRENCY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByRCurrencyIdAsync(List<Long> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.R_CURRENCY_ID,values);
    }

    /**
     * Fetch records that have <code>R_INCOTERM_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByRIncotermIdAsync(List<Long> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.R_INCOTERM_ID,values);
    }

    /**
     * Fetch records that have <code>R_PARTNER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByRPartnerIdAsync(List<Long> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.R_PARTNER_ID,values);
    }

    /**
     * Fetch records that have <code>R_WH_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByRWhIdAsync(List<Long> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.R_WH_ID,values);
    }

    /**
     * Fetch records that have <code>IS_APPROVAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByIsApprovalAsync(List<Boolean> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.IS_APPROVAL,values);
    }

    /**
     * Fetch records that have <code>IS_INVOICE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByIsInvoiceAsync(List<Boolean> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.IS_INVOICE,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrders>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(AbsOrders.ABS_ORDERS.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
