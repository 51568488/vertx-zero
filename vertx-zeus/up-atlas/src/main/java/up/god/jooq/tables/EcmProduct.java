/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.EcmProductRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EcmProduct extends TableImpl<EcmProductRecord> {

    private static final long serialVersionUID = 1122716800;

    /**
     * The reference instance of <code>DB_HTL.ECM_PRODUCT</code>
     */
    public static final EcmProduct ECM_PRODUCT = new EcmProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EcmProductRecord> getRecordType() {
        return EcmProductRecord.class;
    }

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<EcmProductRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.D_MARKET_PRICE</code>. 市场价,marketPrice,D_MARKET_PRICE
     */
    public final TableField<EcmProductRecord, BigDecimal> D_MARKET_PRICE = createField("D_MARKET_PRICE", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "市场价,marketPrice,D_MARKET_PRICE");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.D_SHOP_PRICE</code>. 在线购买价格E-Shop价,shopPrice,D_SHOP_PRICE
     */
    public final TableField<EcmProductRecord, BigDecimal> D_SHOP_PRICE = createField("D_SHOP_PRICE", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "在线购买价格E-Shop价,shopPrice,D_SHOP_PRICE");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.D_USER_PRICE</code>. 普通用户价格,userPrice,D_USER_PRICE
     */
    public final TableField<EcmProductRecord, BigDecimal> D_USER_PRICE = createField("D_USER_PRICE", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "普通用户价格,userPrice,D_USER_PRICE");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.D_VIP_PRICE</code>. 会员价,vipPrice,D_VIP_PRICE
     */
    public final TableField<EcmProductRecord, BigDecimal> D_VIP_PRICE = createField("D_VIP_PRICE", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "会员价,vipPrice,D_VIP_PRICE");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.L_CLICK</code>. 点击数,click,L_CLICK
     */
    public final TableField<EcmProductRecord, Long> L_CLICK = createField("L_CLICK", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "点击数,click,L_CLICK");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.T_COMMENT</code>. comment,T_COMMENT
     */
    public final TableField<EcmProductRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.S_CODE</code>. code,S_CODE
     */
    public final TableField<EcmProductRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.S_GOOD_NO</code>. 货号,goodNo,S_GOOD_NO
     */
    public final TableField<EcmProductRecord, String> S_GOOD_NO = createField("S_GOOD_NO", org.jooq.impl.SQLDataType.VARCHAR(64), this, "货号,goodNo,S_GOOD_NO");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.S_MODEL</code>. 产品型号,model,S_MODEL
     */
    public final TableField<EcmProductRecord, String> S_MODEL = createField("S_MODEL", org.jooq.impl.SQLDataType.VARCHAR(64), this, "产品型号,model,S_MODEL");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.S_SIZE</code>. 尺寸,size,S_SIZE
     */
    public final TableField<EcmProductRecord, String> S_SIZE = createField("S_SIZE", org.jooq.impl.SQLDataType.VARCHAR(10), this, "尺寸,size,S_SIZE");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<EcmProductRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.I_POINT</code>. 产品积分,point,I_POINT
     */
    public final TableField<EcmProductRecord, Integer> I_POINT = createField("I_POINT", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "产品积分,point,I_POINT");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.I_SALE_NUM</code>. 销售数量,saleNumber,I_SALE_NUM
     */
    public final TableField<EcmProductRecord, Integer> I_SALE_NUM = createField("I_SALE_NUM", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "销售数量,saleNumber,I_SALE_NUM");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.R_PRODUCT_ID</code>. productId,R_PRODUCT_ID
     */
    public final TableField<EcmProductRecord, Long> R_PRODUCT_ID = createField("R_PRODUCT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "productId,R_PRODUCT_ID");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.R_SHOP_ID</code>. shopId,R_SHOP_ID
     */
    public final TableField<EcmProductRecord, Long> R_SHOP_ID = createField("R_SHOP_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "shopId,R_SHOP_ID");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.IS_CARRIAGE</code>. 运费？,carriage,IS_CARRIAGE
     */
    public final TableField<EcmProductRecord, Boolean> IS_CARRIAGE = createField("IS_CARRIAGE", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "运费？,carriage,IS_CARRIAGE");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<EcmProductRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<EcmProductRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<EcmProductRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<EcmProductRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<EcmProductRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<EcmProductRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.ECM_PRODUCT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<EcmProductRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.ECM_PRODUCT</code> table reference
     */
    public EcmProduct() {
        this(DSL.name("ECM_PRODUCT"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.ECM_PRODUCT</code> table reference
     */
    public EcmProduct(String alias) {
        this(DSL.name(alias), ECM_PRODUCT);
    }

    /**
     * Create an aliased <code>DB_HTL.ECM_PRODUCT</code> table reference
     */
    public EcmProduct(Name alias) {
        this(alias, ECM_PRODUCT);
    }

    private EcmProduct(Name alias, Table<EcmProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private EcmProduct(Name alias, Table<EcmProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ECM_PRODUCT_FK_ECM_PRODUCT_R_PRODUCT_ID, Indexes.ECM_PRODUCT_FK_ECM_PRODUCT_R_SHOP_ID, Indexes.ECM_PRODUCT_PRIMARY, Indexes.ECM_PRODUCT_UK_ECM_PRODUCT_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EcmProductRecord, Long> getIdentity() {
        return Keys.IDENTITY_ECM_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EcmProductRecord> getPrimaryKey() {
        return Keys.KEY_ECM_PRODUCT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EcmProductRecord>> getKeys() {
        return Arrays.<UniqueKey<EcmProductRecord>>asList(Keys.KEY_ECM_PRODUCT_PRIMARY, Keys.KEY_ECM_PRODUCT_UK_ECM_PRODUCT_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EcmProduct as(String alias) {
        return new EcmProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EcmProduct as(Name alias) {
        return new EcmProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EcmProduct rename(String name) {
        return new EcmProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EcmProduct rename(Name name) {
        return new EcmProduct(name, null);
    }
}
