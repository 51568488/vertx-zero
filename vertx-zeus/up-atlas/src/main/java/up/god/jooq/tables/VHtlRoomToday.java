/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VHtlRoomTodayRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VHtlRoomToday extends TableImpl<VHtlRoomTodayRecord> {

    private static final long serialVersionUID = -1778836054;

    /**
     * The reference instance of <code>DB_HTL.v_htl_room_today</code>
     */
    public static final VHtlRoomToday V_HTL_ROOM_TODAY = new VHtlRoomToday();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VHtlRoomTodayRecord> getRecordType() {
        return VHtlRoomTodayRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_htl_room_today.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlRoomTodayRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_room_today.S_STATUS_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlRoomTodayRecord, Long> S_STATUS_ID = createField("S_STATUS_ID", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_room_today.S_ROOM_NUM</code>. number,S_ROOM_NUM
     */
    public final TableField<VHtlRoomTodayRecord, String> S_ROOM_NUM = createField("S_ROOM_NUM", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "number,S_ROOM_NUM");

    /**
     * The column <code>DB_HTL.v_htl_room_today.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<VHtlRoomTodayRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.v_htl_room_today.R_TENT_ID</code>. tent,R_TENT_ID
     */
    public final TableField<VHtlRoomTodayRecord, Long> R_TENT_ID = createField("R_TENT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "tent,R_TENT_ID");

    /**
     * The column <code>DB_HTL.v_htl_room_today.R_FLOOR_ID</code>. floor,R_FLOOR_ID
     */
    public final TableField<VHtlRoomTodayRecord, Long> R_FLOOR_ID = createField("R_FLOOR_ID", org.jooq.impl.SQLDataType.BIGINT, this, "floor,R_FLOOR_ID");

    /**
     * The column <code>DB_HTL.v_htl_room_today.D_DAY</code>. day,D_DAY
     */
    public final TableField<VHtlRoomTodayRecord, LocalDate> D_DAY = createField("D_DAY", org.jooq.impl.SQLDataType.LOCALDATE, this, "day,D_DAY");

    /**
     * The column <code>DB_HTL.v_htl_room_today.R_ROOM_TYPE_ID</code>. roomTypeId,R_ROOM_TYPE_ID
     */
    public final TableField<VHtlRoomTodayRecord, Long> R_ROOM_TYPE_ID = createField("R_ROOM_TYPE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "roomTypeId,R_ROOM_TYPE_ID");

    /**
     * The column <code>DB_HTL.v_htl_room_today.RLT_OP_STATUS</code>. 操作状态：可操作（空、占用、预离、预抵）、维修、预留、停用、自用,opStatus,RLT_OP_STATUS
     */
    public final TableField<VHtlRoomTodayRecord, Long> RLT_OP_STATUS = createField("RLT_OP_STATUS", org.jooq.impl.SQLDataType.BIGINT, this, "操作状态：可操作（空、占用、预离、预抵）、维修、预留、停用、自用,opStatus,RLT_OP_STATUS");

    /**
     * The column <code>DB_HTL.v_htl_room_today.RLT_CLEAN_STATUS</code>. 清洁状态,cleanStatus,RLT_CLEAN_STATUS
     */
    public final TableField<VHtlRoomTodayRecord, Long> RLT_CLEAN_STATUS = createField("RLT_CLEAN_STATUS", org.jooq.impl.SQLDataType.BIGINT, this, "清洁状态,cleanStatus,RLT_CLEAN_STATUS");

    /**
     * The column <code>DB_HTL.v_htl_room_today.IS_LEAVING</code>. 是否预离,leaving,IS_LEAVING
     */
    public final TableField<VHtlRoomTodayRecord, Boolean> IS_LEAVING = createField("IS_LEAVING", org.jooq.impl.SQLDataType.BOOLEAN, this, "是否预离,leaving,IS_LEAVING");

    /**
     * The column <code>DB_HTL.v_htl_room_today.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<VHtlRoomTodayRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.v_htl_room_today.IS_ARRIVING</code>. 是否预抵,arriving,IS_ARRIVING
     */
    public final TableField<VHtlRoomTodayRecord, Boolean> IS_ARRIVING = createField("IS_ARRIVING", org.jooq.impl.SQLDataType.BOOLEAN, this, "是否预抵,arriving,IS_ARRIVING");

    /**
     * The column <code>DB_HTL.v_htl_room_today.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public final TableField<VHtlRoomTodayRecord, Long> R_HOTEL_ID = createField("R_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT, this, "hotelId,R_HOTEL_ID");

    /**
     * The column <code>DB_HTL.v_htl_room_today.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<VHtlRoomTodayRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.v_htl_room_today.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<VHtlRoomTodayRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.v_htl_room_today.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<VHtlRoomTodayRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.v_htl_room_today</code> table reference
     */
    public VHtlRoomToday() {
        this(DSL.name("v_htl_room_today"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_room_today</code> table reference
     */
    public VHtlRoomToday(String alias) {
        this(DSL.name(alias), V_HTL_ROOM_TODAY);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_room_today</code> table reference
     */
    public VHtlRoomToday(Name alias) {
        this(alias, V_HTL_ROOM_TODAY);
    }

    private VHtlRoomToday(Name alias, Table<VHtlRoomTodayRecord> aliased) {
        this(alias, aliased, null);
    }

    private VHtlRoomToday(Name alias, Table<VHtlRoomTodayRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlRoomToday as(String alias) {
        return new VHtlRoomToday(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlRoomToday as(Name alias) {
        return new VHtlRoomToday(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlRoomToday rename(String name) {
        return new VHtlRoomToday(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlRoomToday rename(Name name) {
        return new VHtlRoomToday(name, null);
    }
}
