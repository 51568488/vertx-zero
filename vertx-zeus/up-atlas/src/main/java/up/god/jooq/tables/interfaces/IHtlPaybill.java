/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IHtlPaybill extends Serializable {

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.PK_ID</code>. uniqueId,PK_ID
     */
    public IHtlPaybill setPkId(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.D_AMOUNT_ACTUAL</code>. 【实际金额】所有订单项减去折扣后的实际金额（amountActual x quantity）总和。,amountActual,D_AMOUNT_ACTUAL
     */
    public IHtlPaybill setDAmountActual(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.D_AMOUNT_ACTUAL</code>. 【实际金额】所有订单项减去折扣后的实际金额（amountActual x quantity）总和。,amountActual,D_AMOUNT_ACTUAL
     */
    public BigDecimal getDAmountActual();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public IHtlPaybill setTComment(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public String getTComment();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.V_HOTEL_ID</code>. VREF,hotelId,V_HOTEL_ID
     */
    public IHtlPaybill setVHotelId(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.V_HOTEL_ID</code>. VREF,hotelId,V_HOTEL_ID
     */
    public Long getVHotelId();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.V_ORDER_ID</code>. VREF: HTL_ORDERS【关联订单】该账单关联的订单ID,orderId,V_ORDER_ID
     */
    public IHtlPaybill setVOrderId(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.V_ORDER_ID</code>. VREF: HTL_ORDERS【关联订单】该账单关联的订单ID,orderId,V_ORDER_ID
     */
    public Long getVOrderId();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.V_ROOM_NUM</code>. VREF：【账单房号】,roomNum,V_ROOM_NUM
     */
    public IHtlPaybill setVRoomNum(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.V_ROOM_NUM</code>. VREF：【账单房号】,roomNum,V_ROOM_NUM
     */
    public String getVRoomNum();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.S_CODE</code>. code,S_CODE
     */
    public IHtlPaybill setSCode(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.S_SERIAL</code>. 【账单唯一编号】系统内部使用,serial,S_SERIAL
     */
    public IHtlPaybill setSSerial(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.S_SERIAL</code>. 【账单唯一编号】系统内部使用,serial,S_SERIAL
     */
    public String getSSerial();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.S_TICKET_CODE</code>. 【单据类型】,ticketCode,S_TICKET_CODE
     */
    public IHtlPaybill setSTicketCode(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.S_TICKET_CODE</code>. 【单据类型】,ticketCode,S_TICKET_CODE
     */
    public String getSTicketCode();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.J_CONFIG</code>. config,J_CONFIG
     */
    public IHtlPaybill setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.I_ITEM_COUNT</code>. 明细数量,itemCount,I_ITEM_COUNT
     */
    public IHtlPaybill setIItemCount(Integer value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.I_ITEM_COUNT</code>. 明细数量,itemCount,I_ITEM_COUNT
     */
    public Integer getIItemCount();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IHtlPaybill setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IHtlPaybill setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IHtlPaybill setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IHtlPaybill setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IHtlPaybill setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IHtlPaybill setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IHtlPaybill setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IHtlPaybill
     */
    public void from(up.god.jooq.tables.interfaces.IHtlPaybill from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IHtlPaybill
     */
    public <E extends up.god.jooq.tables.interfaces.IHtlPaybill> E into(E into);

    default IHtlPaybill fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        setTComment(json.getString("T_COMMENT"));
        setVHotelId(json.getLong("V_HOTEL_ID"));
        setVOrderId(json.getLong("V_ORDER_ID"));
        setVRoomNum(json.getString("V_ROOM_NUM"));
        setSCode(json.getString("S_CODE"));
        setSSerial(json.getString("S_SERIAL"));
        setSTicketCode(json.getString("S_TICKET_CODE"));
        setJConfig(json.getString("J_CONFIG"));
        setIItemCount(json.getInteger("I_ITEM_COUNT"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        json.put("T_COMMENT",getTComment());
        json.put("V_HOTEL_ID",getVHotelId());
        json.put("V_ORDER_ID",getVOrderId());
        json.put("V_ROOM_NUM",getVRoomNum());
        json.put("S_CODE",getSCode());
        json.put("S_SERIAL",getSSerial());
        json.put("S_TICKET_CODE",getSTicketCode());
        json.put("J_CONFIG",getJConfig());
        json.put("I_ITEM_COUNT",getIItemCount());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
