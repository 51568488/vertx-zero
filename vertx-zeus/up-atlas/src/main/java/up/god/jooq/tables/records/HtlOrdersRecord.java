/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.HtlOrders;
import up.god.jooq.tables.interfaces.IHtlOrders;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlOrdersRecord extends UpdatableRecordImpl<HtlOrdersRecord> implements IHtlOrders {

    private static final long serialVersionUID = 2092494470;

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public HtlOrdersRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.D_AMOUNT</code>. 【会员卡卡余额】（ReadOnly固定值）。,amount,D_AMOUNT
     */
    @Override
    public HtlOrdersRecord setDAmount(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.D_AMOUNT</code>. 【会员卡卡余额】（ReadOnly固定值）。,amount,D_AMOUNT
     */
    @Override
    public BigDecimal getDAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.D_AMOUNT_ACTUAL</code>. 【实际金额】该订单所有订单项减去折扣后的实际金额（amountActual x quantity）总和。,amountActual,D_AMOUNT_ACTUAL
     */
    @Override
    public HtlOrdersRecord setDAmountActual(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.D_AMOUNT_ACTUAL</code>. 【实际金额】该订单所有订单项减去折扣后的实际金额（amountActual x quantity）总和。,amountActual,D_AMOUNT_ACTUAL
     */
    @Override
    public BigDecimal getDAmountActual() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.D_AMOUNT_TAXED</code>. 【税后金额】该订单税后的金额，amountTaxed = amountActual x ( 1 - taxRate )。,amountTaxed,D_AMOUNT_TAXED
     */
    @Override
    public HtlOrdersRecord setDAmountTaxed(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.D_AMOUNT_TAXED</code>. 【税后金额】该订单税后的金额，amountTaxed = amountActual x ( 1 - taxRate )。,amountTaxed,D_AMOUNT_TAXED
     */
    @Override
    public BigDecimal getDAmountTaxed() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.D_AMOUNT_TOTAL</code>. 【总金额】该订单所有订单项中原始金额（amountPrice x quantity）总和。,amountTotal,D_AMOUNT_TOTAL
     */
    @Override
    public HtlOrdersRecord setDAmountTotal(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.D_AMOUNT_TOTAL</code>. 【总金额】该订单所有订单项中原始金额（amountPrice x quantity）总和。,amountTotal,D_AMOUNT_TOTAL
     */
    @Override
    public BigDecimal getDAmountTotal() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.D_FINISHED_TIME</code>. 【完成时间】该订单关闭的时间，或者被取消的时间。,finishedTime,D_FINISHED_TIME
     */
    @Override
    public HtlOrdersRecord setDFinishedTime(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.D_FINISHED_TIME</code>. 【完成时间】该订单关闭的时间，或者被取消的时间。,finishedTime,D_FINISHED_TIME
     */
    @Override
    public LocalDateTime getDFinishedTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.D_ORDER_TIME</code>. 【订单时间】下订/制单时间。,orderTime,D_ORDER_TIME
     */
    @Override
    public HtlOrdersRecord setDOrderTime(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.D_ORDER_TIME</code>. 【订单时间】下订/制单时间。,orderTime,D_ORDER_TIME
     */
    @Override
    public LocalDateTime getDOrderTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.D_TAX</code>. 【订单税】该订单的税信息：tax = amountActual x taxRate,tax,D_TAX
     */
    @Override
    public HtlOrdersRecord setDTax(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.D_TAX</code>. 【订单税】该订单的税信息：tax = amountActual x taxRate,tax,D_TAX
     */
    @Override
    public BigDecimal getDTax() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.D_TAX_RATE</code>. 【税率】该订单的税率信息。,taxRate,D_TAX_RATE
     */
    @Override
    public HtlOrdersRecord setDTaxRate(BigDecimal value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.D_TAX_RATE</code>. 【税率】该订单的税率信息。,taxRate,D_TAX_RATE
     */
    @Override
    public BigDecimal getDTaxRate() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.T_COMMENT</code>. 【备注信息】该订单备注信息,comment,T_COMMENT
     */
    @Override
    public HtlOrdersRecord setTComment(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.T_COMMENT</code>. 【备注信息】该订单备注信息,comment,T_COMMENT
     */
    @Override
    public String getTComment() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.V_COMPANY_ID</code>. REF: RES_COMPANY【所属公司】当前订单所属公司ID。,companyId,V_COMPANY_ID
     */
    @Override
    public HtlOrdersRecord setVCompanyId(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.V_COMPANY_ID</code>. REF: RES_COMPANY【所属公司】当前订单所属公司ID。,companyId,V_COMPANY_ID
     */
    @Override
    public Long getVCompanyId() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.V_CURRENCY_ID</code>. REF: RES_CURRENCY【关联货币】当前订单使用的货币信息。,currencyId,V_CURRENCY_ID
     */
    @Override
    public HtlOrdersRecord setVCurrencyId(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.V_CURRENCY_ID</code>. REF: RES_CURRENCY【关联货币】当前订单使用的货币信息。,currencyId,V_CURRENCY_ID
     */
    @Override
    public Long getVCurrencyId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_CODE</code>. code,S_CODE
     */
    @Override
    public HtlOrdersRecord setSCode(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_CREATOR</code>. creator,S_CREATOR
     */
    @Override
    public HtlOrdersRecord setSCreator(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_CREATOR</code>. creator,S_CREATOR
     */
    @Override
    public String getSCreator() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_CREDENCE</code>. credence,S_CREDENCE
     */
    @Override
    public HtlOrdersRecord setSCredence(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_CREDENCE</code>. credence,S_CREDENCE
     */
    @Override
    public String getSCredence() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_GROUP_LEADER</code>. groupLeader,S_GROUP_LEADER
     */
    @Override
    public HtlOrdersRecord setSGroupLeader(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_GROUP_LEADER</code>. groupLeader,S_GROUP_LEADER
     */
    @Override
    public String getSGroupLeader() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_GROUP_NAME</code>. groupName,S_GROUP_NAME
     */
    @Override
    public HtlOrdersRecord setSGroupName(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_GROUP_NAME</code>. groupName,S_GROUP_NAME
     */
    @Override
    public String getSGroupName() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_MEMBER</code>. member,S_MEMBER
     */
    @Override
    public HtlOrdersRecord setSMember(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_MEMBER</code>. member,S_MEMBER
     */
    @Override
    public String getSMember() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_OPERATOR</code>. operator,S_OPERATOR
     */
    @Override
    public HtlOrdersRecord setSOperator(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_OPERATOR</code>. operator,S_OPERATOR
     */
    @Override
    public String getSOperator() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_PARTNER</code>. partner,S_PARTNER
     */
    @Override
    public HtlOrdersRecord setSPartner(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_PARTNER</code>. partner,S_PARTNER
     */
    @Override
    public String getSPartner() {
        return (String) get(19);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_PHONE</code>. 【预定电话】该订单预定人联系电话,phone,S_PHONE
     */
    @Override
    public HtlOrdersRecord setSPhone(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_PHONE</code>. 【预定电话】该订单预定人联系电话,phone,S_PHONE
     */
    @Override
    public String getSPhone() {
        return (String) get(20);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_PRESERVOR</code>. preservor,S_PRESERVOR
     */
    @Override
    public HtlOrdersRecord setSPreservor(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_PRESERVOR</code>. preservor,S_PRESERVOR
     */
    @Override
    public String getSPreservor() {
        return (String) get(21);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_SERIAL</code>. serial,S_SERIAL
     */
    @Override
    public HtlOrdersRecord setSSerial(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_SERIAL</code>. serial,S_SERIAL
     */
    @Override
    public String getSSerial() {
        return (String) get(22);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_STATUS</code>. orderStatus,S_STATUS
     */
    @Override
    public HtlOrdersRecord setSStatus(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_STATUS</code>. orderStatus,S_STATUS
     */
    @Override
    public String getSStatus() {
        return (String) get(23);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.S_SURETY</code>. 担保人,surety,S_SURETY
     */
    @Override
    public HtlOrdersRecord setSSurety(String value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.S_SURETY</code>. 担保人,surety,S_SURETY
     */
    @Override
    public String getSSurety() {
        return (String) get(24);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public HtlOrdersRecord setJConfig(String value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(25);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.RLT_CODE_MARKET</code>. codeMarket,RLT_CODE_MARKET
     */
    @Override
    public HtlOrdersRecord setRltCodeMarket(Long value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.RLT_CODE_MARKET</code>. codeMarket,RLT_CODE_MARKET
     */
    @Override
    public Long getRltCodeMarket() {
        return (Long) get(26);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.RLT_CODE_SOURCE</code>. codeSource,RLT_CODE_SOURCE
     */
    @Override
    public HtlOrdersRecord setRltCodeSource(Long value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.RLT_CODE_SOURCE</code>. codeSource,RLT_CODE_SOURCE
     */
    @Override
    public Long getRltCodeSource() {
        return (Long) get(27);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.RLT_ORD_CATEGORY</code>. cat,RLT_ORD_CATEGORY
     */
    @Override
    public HtlOrdersRecord setRltOrdCategory(Long value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.RLT_ORD_CATEGORY</code>. cat,RLT_ORD_CATEGORY
     */
    @Override
    public Long getRltOrdCategory() {
        return (Long) get(28);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.RLT_ORD_METHOD</code>. method,RLT_ORD_METHOD
     */
    @Override
    public HtlOrdersRecord setRltOrdMethod(Long value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.RLT_ORD_METHOD</code>. method,RLT_ORD_METHOD
     */
    @Override
    public Long getRltOrdMethod() {
        return (Long) get(29);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.RLT_SURETY_TYPE</code>. suretyType,RLT_SURETY_TYPE
     */
    @Override
    public HtlOrdersRecord setRltSuretyType(Long value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.RLT_SURETY_TYPE</code>. suretyType,RLT_SURETY_TYPE
     */
    @Override
    public Long getRltSuretyType() {
        return (Long) get(30);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    @Override
    public HtlOrdersRecord setRHotelId(Long value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    @Override
    public Long getRHotelId() {
        return (Long) get(31);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.R_MEMBER_ID</code>. memberId,R_MEMBER_ID
     */
    @Override
    public HtlOrdersRecord setRMemberId(String value) {
        set(32, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.R_MEMBER_ID</code>. memberId,R_MEMBER_ID
     */
    @Override
    public String getRMemberId() {
        return (String) get(32);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.R_OPERATOR_ID</code>. operatorId,R_OPERATOR_ID
     */
    @Override
    public HtlOrdersRecord setROperatorId(String value) {
        set(33, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.R_OPERATOR_ID</code>. operatorId,R_OPERATOR_ID
     */
    @Override
    public String getROperatorId() {
        return (String) get(33);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.R_PARTNER_ID</code>. REF: RES_PARTNER【所属伙伴】当前订单对应的供应商、协议单位对应ID。,partnerId,R_PARTNER_ID
     */
    @Override
    public HtlOrdersRecord setRPartnerId(Long value) {
        set(34, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.R_PARTNER_ID</code>. REF: RES_PARTNER【所属伙伴】当前订单对应的供应商、协议单位对应ID。,partnerId,R_PARTNER_ID
     */
    @Override
    public Long getRPartnerId() {
        return (Long) get(34);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.IS_APPROVAL</code>. 【是否审核】当前订单是否已经审核？,approval,IS_APPROVAL
     */
    @Override
    public HtlOrdersRecord setIsApproval(Boolean value) {
        set(35, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.IS_APPROVAL</code>. 【是否审核】当前订单是否已经审核？,approval,IS_APPROVAL
     */
    @Override
    public Boolean getIsApproval() {
        return (Boolean) get(35);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.IS_DIRECT</code>. direct,IS_DIRECT
     */
    @Override
    public HtlOrdersRecord setIsDirect(Boolean value) {
        set(36, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.IS_DIRECT</code>. direct,IS_DIRECT
     */
    @Override
    public Boolean getIsDirect() {
        return (Boolean) get(36);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.IS_GROUPED</code>. grouped,IS_GROUPED
     */
    @Override
    public HtlOrdersRecord setIsGrouped(Boolean value) {
        set(37, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.IS_GROUPED</code>. grouped,IS_GROUPED
     */
    @Override
    public Boolean getIsGrouped() {
        return (Boolean) get(37);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.IS_INVOICE</code>. 【是否开票】当前订单是否开了发票？,invoice,IS_INVOICE
     */
    @Override
    public HtlOrdersRecord setIsInvoice(Boolean value) {
        set(38, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.IS_INVOICE</code>. 【是否开票】当前订单是否开了发票？,invoice,IS_INVOICE
     */
    @Override
    public Boolean getIsInvoice() {
        return (Boolean) get(38);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public HtlOrdersRecord setIsActive(Boolean value) {
        set(39, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(39);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public HtlOrdersRecord setZSigma(String value) {
        set(40, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(40);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public HtlOrdersRecord setZLanguage(String value) {
        set(41, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(41);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public HtlOrdersRecord setZCreateBy(String value) {
        set(42, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(42);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public HtlOrdersRecord setZCreateTime(LocalDateTime value) {
        set(43, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(43);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public HtlOrdersRecord setZUpdateBy(String value) {
        set(44, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(44);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDERS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public HtlOrdersRecord setZUpdateTime(LocalDateTime value) {
        set(45, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDERS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(45);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IHtlOrders from) {
        setPkId(from.getPkId());
        setDAmount(from.getDAmount());
        setDAmountActual(from.getDAmountActual());
        setDAmountTaxed(from.getDAmountTaxed());
        setDAmountTotal(from.getDAmountTotal());
        setDFinishedTime(from.getDFinishedTime());
        setDOrderTime(from.getDOrderTime());
        setDTax(from.getDTax());
        setDTaxRate(from.getDTaxRate());
        setTComment(from.getTComment());
        setVCompanyId(from.getVCompanyId());
        setVCurrencyId(from.getVCurrencyId());
        setSCode(from.getSCode());
        setSCreator(from.getSCreator());
        setSCredence(from.getSCredence());
        setSGroupLeader(from.getSGroupLeader());
        setSGroupName(from.getSGroupName());
        setSMember(from.getSMember());
        setSOperator(from.getSOperator());
        setSPartner(from.getSPartner());
        setSPhone(from.getSPhone());
        setSPreservor(from.getSPreservor());
        setSSerial(from.getSSerial());
        setSStatus(from.getSStatus());
        setSSurety(from.getSSurety());
        setJConfig(from.getJConfig());
        setRltCodeMarket(from.getRltCodeMarket());
        setRltCodeSource(from.getRltCodeSource());
        setRltOrdCategory(from.getRltOrdCategory());
        setRltOrdMethod(from.getRltOrdMethod());
        setRltSuretyType(from.getRltSuretyType());
        setRHotelId(from.getRHotelId());
        setRMemberId(from.getRMemberId());
        setROperatorId(from.getROperatorId());
        setRPartnerId(from.getRPartnerId());
        setIsApproval(from.getIsApproval());
        setIsDirect(from.getIsDirect());
        setIsGrouped(from.getIsGrouped());
        setIsInvoice(from.getIsInvoice());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IHtlOrders> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HtlOrdersRecord
     */
    public HtlOrdersRecord() {
        super(HtlOrders.HTL_ORDERS);
    }

    /**
     * Create a detached, initialised HtlOrdersRecord
     */
    public HtlOrdersRecord(String pkId, BigDecimal dAmount, BigDecimal dAmountActual, BigDecimal dAmountTaxed, BigDecimal dAmountTotal, LocalDateTime dFinishedTime, LocalDateTime dOrderTime, BigDecimal dTax, BigDecimal dTaxRate, String tComment, Long vCompanyId, Long vCurrencyId, String sCode, String sCreator, String sCredence, String sGroupLeader, String sGroupName, String sMember, String sOperator, String sPartner, String sPhone, String sPreservor, String sSerial, String sStatus, String sSurety, String jConfig, Long rltCodeMarket, Long rltCodeSource, Long rltOrdCategory, Long rltOrdMethod, Long rltSuretyType, Long rHotelId, String rMemberId, String rOperatorId, Long rPartnerId, Boolean isApproval, Boolean isDirect, Boolean isGrouped, Boolean isInvoice, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(HtlOrders.HTL_ORDERS);

        set(0, pkId);
        set(1, dAmount);
        set(2, dAmountActual);
        set(3, dAmountTaxed);
        set(4, dAmountTotal);
        set(5, dFinishedTime);
        set(6, dOrderTime);
        set(7, dTax);
        set(8, dTaxRate);
        set(9, tComment);
        set(10, vCompanyId);
        set(11, vCurrencyId);
        set(12, sCode);
        set(13, sCreator);
        set(14, sCredence);
        set(15, sGroupLeader);
        set(16, sGroupName);
        set(17, sMember);
        set(18, sOperator);
        set(19, sPartner);
        set(20, sPhone);
        set(21, sPreservor);
        set(22, sSerial);
        set(23, sStatus);
        set(24, sSurety);
        set(25, jConfig);
        set(26, rltCodeMarket);
        set(27, rltCodeSource);
        set(28, rltOrdCategory);
        set(29, rltOrdMethod);
        set(30, rltSuretyType);
        set(31, rHotelId);
        set(32, rMemberId);
        set(33, rOperatorId);
        set(34, rPartnerId);
        set(35, isApproval);
        set(36, isDirect);
        set(37, isGrouped);
        set(38, isInvoice);
        set(39, isActive);
        set(40, zSigma);
        set(41, zLanguage);
        set(42, zCreateBy);
        set(43, zCreateTime);
        set(44, zUpdateBy);
        set(45, zUpdateTime);
    }
}
