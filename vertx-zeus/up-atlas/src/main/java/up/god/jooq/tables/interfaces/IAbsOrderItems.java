/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IAbsOrderItems extends Serializable {

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.PK_ID</code>. uniqueId,PK_ID
     */
    public IAbsOrderItems setPkId(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.D_AMOUNT_ACTUAL</code>. 【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL
     */
    public IAbsOrderItems setDAmountActual(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.D_AMOUNT_ACTUAL</code>. 【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL
     */
    public BigDecimal getDAmountActual();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.D_AMOUNT_PRICE</code>. 【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE
     */
    public IAbsOrderItems setDAmountPrice(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.D_AMOUNT_PRICE</code>. 【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE
     */
    public BigDecimal getDAmountPrice();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.D_AMOUNT_TOTAL</code>. 【总价】该明细的总价格：amountTotal = amountActual x quantity,amountTotal,D_AMOUNT_TOTAL
     */
    public IAbsOrderItems setDAmountTotal(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.D_AMOUNT_TOTAL</code>. 【总价】该明细的总价格：amountTotal = amountActual x quantity,amountTotal,D_AMOUNT_TOTAL
     */
    public BigDecimal getDAmountTotal();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.D_DISCOUNT</code>. 【折扣率】格式为小数，单位%，用于记录当前明细的折扣率,discount,D_DISCOUNT
     */
    public IAbsOrderItems setDDiscount(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.D_DISCOUNT</code>. 【折扣率】格式为小数，单位%，用于记录当前明细的折扣率,discount,D_DISCOUNT
     */
    public BigDecimal getDDiscount();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.S_CODE</code>. code,S_CODE
     */
    public IAbsOrderItems setSCode(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.S_SERIAL</code>. REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL
     */
    public IAbsOrderItems setSSerial(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.S_SERIAL</code>. REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL
     */
    public String getSSerial();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.J_CONFIG</code>. config,J_CONFIG
     */
    public IAbsOrderItems setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.I_QUANTITY</code>. 【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY
     */
    public IAbsOrderItems setIQuantity(Integer value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.I_QUANTITY</code>. 【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY
     */
    public Integer getIQuantity();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.R_ORDER_ID</code>. REF：ABS_ORDERS【订单ID】该明细关联的订单ID值,orderId,R_ORDER_ID
     */
    public IAbsOrderItems setROrderId(Long value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.R_ORDER_ID</code>. REF：ABS_ORDERS【订单ID】该明细关联的订单ID值,orderId,R_ORDER_ID
     */
    public Long getROrderId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.R_PRODUCT_ID</code>. REF：ABS_PRODUCT【商品ID】该明细对应的商品ID值,productId,R_PRODUCT_ID
     */
    public IAbsOrderItems setRProductId(Long value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.R_PRODUCT_ID</code>. REF：ABS_PRODUCT【商品ID】该明细对应的商品ID值,productId,R_PRODUCT_ID
     */
    public Long getRProductId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IAbsOrderItems setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IAbsOrderItems setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IAbsOrderItems setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IAbsOrderItems setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IAbsOrderItems setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IAbsOrderItems setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IAbsOrderItems setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDER_ITEMS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IAbsOrderItems
     */
    public void from(up.god.jooq.tables.interfaces.IAbsOrderItems from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IAbsOrderItems
     */
    public <E extends up.god.jooq.tables.interfaces.IAbsOrderItems> E into(E into);

    default IAbsOrderItems fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_PRICE!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_TOTAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_DISCOUNT!
        setSCode(json.getString("S_CODE"));
        setSSerial(json.getString("S_SERIAL"));
        setJConfig(json.getString("J_CONFIG"));
        setIQuantity(json.getInteger("I_QUANTITY"));
        setROrderId(json.getLong("R_ORDER_ID"));
        setRProductId(json.getLong("R_PRODUCT_ID"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_PRICE!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_TOTAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_DISCOUNT!
        json.put("S_CODE",getSCode());
        json.put("S_SERIAL",getSSerial());
        json.put("J_CONFIG",getJConfig());
        json.put("I_QUANTITY",getIQuantity());
        json.put("R_ORDER_ID",getROrderId());
        json.put("R_PRODUCT_ID",getRProductId());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
