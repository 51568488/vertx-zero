/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.HtlOccup;
import up.god.jooq.tables.records.HtlOccupRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlOccupDao extends DAOImpl<HtlOccupRecord, up.god.jooq.tables.pojos.HtlOccup, Long> implements VertxDAO<up.god.jooq.tables.records.HtlOccupRecord,up.god.jooq.tables.pojos.HtlOccup,java.lang.Long> {

    /**
     * Create a new HtlOccupDao without any configuration
     */
    public HtlOccupDao() {
        super(HtlOccup.HTL_OCCUP, up.god.jooq.tables.pojos.HtlOccup.class);
    }

    /**
     * Create a new HtlOccupDao with an attached configuration
     */
    public HtlOccupDao(Configuration configuration) {
        super(HtlOccup.HTL_OCCUP, up.god.jooq.tables.pojos.HtlOccup.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(up.god.jooq.tables.pojos.HtlOccup object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByPkId(Long... values) {
        return fetch(HtlOccup.HTL_OCCUP.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.HtlOccup fetchOneByPkId(Long value) {
        return fetchOne(HtlOccup.HTL_OCCUP.PK_ID, value);
    }

    /**
     * Fetch records that have <code>D_INCP_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByDIncpTime(LocalDateTime... values) {
        return fetch(HtlOccup.HTL_OCCUP.D_INCP_TIME, values);
    }

    /**
     * Fetch records that have <code>T_PREFERENCE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByTPreference(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.T_PREFERENCE, values);
    }

    /**
     * Fetch records that have <code>T_REQUEST IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByTRequest(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.T_REQUEST, values);
    }

    /**
     * Fetch records that have <code>V_HOTEL_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByVHotelId(Long... values) {
        return fetch(HtlOccup.HTL_OCCUP.V_HOTEL_ID, values);
    }

    /**
     * Fetch records that have <code>V_SCHEDULE_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByVScheduleId(Long... values) {
        return fetch(HtlOccup.HTL_OCCUP.V_SCHEDULE_ID, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchBySCode(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_CAR_PLATE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchBySCarPlate(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.S_CAR_PLATE, values);
    }

    /**
     * Fetch records that have <code>S_OPERATOR IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchBySOperator(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.S_OPERATOR, values);
    }

    /**
     * Fetch records that have <code>S_ROOM_NUM IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchBySRoomNum(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.S_ROOM_NUM, values);
    }

    /**
     * Fetch records that have <code>S_SERIAL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchBySSerial(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.S_SERIAL, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByJConfig(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>I_CARD_COUNTER IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByICardCounter(Integer... values) {
        return fetch(HtlOccup.HTL_OCCUP.I_CARD_COUNTER, values);
    }

    /**
     * Fetch records that have <code>I_INSIDE_DAYS IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByIInsideDays(Integer... values) {
        return fetch(HtlOccup.HTL_OCCUP.I_INSIDE_DAYS, values);
    }

    /**
     * Fetch records that have <code>I_INSIDE_PERSONS IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByIInsidePersons(Integer... values) {
        return fetch(HtlOccup.HTL_OCCUP.I_INSIDE_PERSONS, values);
    }

    /**
     * Fetch records that have <code>RLT_OCCUP_STATUS IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByRltOccupStatus(Long... values) {
        return fetch(HtlOccup.HTL_OCCUP.RLT_OCCUP_STATUS, values);
    }

    /**
     * Fetch records that have <code>RLT_OCCUP_TYPE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByRltOccupType(Long... values) {
        return fetch(HtlOccup.HTL_OCCUP.RLT_OCCUP_TYPE, values);
    }

    /**
     * Fetch records that have <code>R_ORDER_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByROrderId(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.R_ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>R_TRAVELER_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByRTravelerId(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.R_TRAVELER_ID, values);
    }

    /**
     * Fetch records that have <code>IS_SECRET IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByIsSecret(Boolean... values) {
        return fetch(HtlOccup.HTL_OCCUP.IS_SECRET, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByIsActive(Boolean... values) {
        return fetch(HtlOccup.HTL_OCCUP.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByZSigma(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByZLanguage(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByZCreateBy(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(HtlOccup.HTL_OCCUP.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByZUpdateBy(String... values) {
        return fetch(HtlOccup.HTL_OCCUP.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HtlOccup> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(HtlOccup.HTL_OCCUP.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByPkIdAsync(List<Long> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.HtlOccup> fetchOneByPkIdAsync(Long value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>D_INCP_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByDIncpTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.D_INCP_TIME,values);
    }

    /**
     * Fetch records that have <code>T_PREFERENCE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByTPreferenceAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.T_PREFERENCE,values);
    }

    /**
     * Fetch records that have <code>T_REQUEST IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByTRequestAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.T_REQUEST,values);
    }

    /**
     * Fetch records that have <code>V_HOTEL_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByVHotelIdAsync(List<Long> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.V_HOTEL_ID,values);
    }

    /**
     * Fetch records that have <code>V_SCHEDULE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByVScheduleIdAsync(List<Long> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.V_SCHEDULE_ID,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_CAR_PLATE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchBySCarPlateAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.S_CAR_PLATE,values);
    }

    /**
     * Fetch records that have <code>S_OPERATOR IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchBySOperatorAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.S_OPERATOR,values);
    }

    /**
     * Fetch records that have <code>S_ROOM_NUM IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchBySRoomNumAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.S_ROOM_NUM,values);
    }

    /**
     * Fetch records that have <code>S_SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchBySSerialAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.S_SERIAL,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>I_CARD_COUNTER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByICardCounterAsync(List<Integer> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.I_CARD_COUNTER,values);
    }

    /**
     * Fetch records that have <code>I_INSIDE_DAYS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByIInsideDaysAsync(List<Integer> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.I_INSIDE_DAYS,values);
    }

    /**
     * Fetch records that have <code>I_INSIDE_PERSONS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByIInsidePersonsAsync(List<Integer> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.I_INSIDE_PERSONS,values);
    }

    /**
     * Fetch records that have <code>RLT_OCCUP_STATUS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByRltOccupStatusAsync(List<Long> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.RLT_OCCUP_STATUS,values);
    }

    /**
     * Fetch records that have <code>RLT_OCCUP_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByRltOccupTypeAsync(List<Long> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.RLT_OCCUP_TYPE,values);
    }

    /**
     * Fetch records that have <code>R_ORDER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByROrderIdAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.R_ORDER_ID,values);
    }

    /**
     * Fetch records that have <code>R_TRAVELER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByRTravelerIdAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.R_TRAVELER_ID,values);
    }

    /**
     * Fetch records that have <code>IS_SECRET IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByIsSecretAsync(List<Boolean> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.IS_SECRET,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HtlOccup>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(HtlOccup.HTL_OCCUP.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
