/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.HrJob;
import up.god.jooq.tables.records.HrJobRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HrJobDao extends DAOImpl<HrJobRecord, up.god.jooq.tables.pojos.HrJob, Long> implements VertxDAO<up.god.jooq.tables.records.HrJobRecord,up.god.jooq.tables.pojos.HrJob,java.lang.Long> {

    /**
     * Create a new HrJobDao without any configuration
     */
    public HrJobDao() {
        super(HrJob.HR_JOB, up.god.jooq.tables.pojos.HrJob.class);
    }

    /**
     * Create a new HrJobDao with an attached configuration
     */
    public HrJobDao(Configuration configuration) {
        super(HrJob.HR_JOB, up.god.jooq.tables.pojos.HrJob.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(up.god.jooq.tables.pojos.HrJob object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByPkId(Long... values) {
        return fetch(HrJob.HR_JOB.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.HrJob fetchOneByPkId(Long value) {
        return fetchOne(HrJob.HR_JOB.PK_ID, value);
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByTComment(String... values) {
        return fetch(HrJob.HR_JOB.T_COMMENT, values);
    }

    /**
     * Fetch records that have <code>T_REQUIREMENTS IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByTRequirements(String... values) {
        return fetch(HrJob.HR_JOB.T_REQUIREMENTS, values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchBySName(String... values) {
        return fetch(HrJob.HR_JOB.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchBySCode(String... values) {
        return fetch(HrJob.HR_JOB.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_STATUS IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchBySStatus(String... values) {
        return fetch(HrJob.HR_JOB.S_STATUS, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByJConfig(String... values) {
        return fetch(HrJob.HR_JOB.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>I_NO_EMPLOYEE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByINoEmployee(Integer... values) {
        return fetch(HrJob.HR_JOB.I_NO_EMPLOYEE, values);
    }

    /**
     * Fetch records that have <code>I_NO_HIRED IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByINoHired(Integer... values) {
        return fetch(HrJob.HR_JOB.I_NO_HIRED, values);
    }

    /**
     * Fetch records that have <code>I_NO_RECRUIT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByINoRecruit(Integer... values) {
        return fetch(HrJob.HR_JOB.I_NO_RECRUIT, values);
    }

    /**
     * Fetch records that have <code>R_COMPANY_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByRCompanyId(Long... values) {
        return fetch(HrJob.HR_JOB.R_COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>R_DEPT_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByRDeptId(Long... values) {
        return fetch(HrJob.HR_JOB.R_DEPT_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByIsActive(Boolean... values) {
        return fetch(HrJob.HR_JOB.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByZSigma(String... values) {
        return fetch(HrJob.HR_JOB.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByZLanguage(String... values) {
        return fetch(HrJob.HR_JOB.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByZCreateBy(String... values) {
        return fetch(HrJob.HR_JOB.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(HrJob.HR_JOB.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByZUpdateBy(String... values) {
        return fetch(HrJob.HR_JOB.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrJob> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(HrJob.HR_JOB.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByPkIdAsync(List<Long> values) {
        return fetchAsync(HrJob.HR_JOB.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.HrJob> fetchOneByPkIdAsync(Long value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByTCommentAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.T_COMMENT,values);
    }

    /**
     * Fetch records that have <code>T_REQUIREMENTS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByTRequirementsAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.T_REQUIREMENTS,values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchBySNameAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.S_NAME,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_STATUS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchBySStatusAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.S_STATUS,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>I_NO_EMPLOYEE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByINoEmployeeAsync(List<Integer> values) {
        return fetchAsync(HrJob.HR_JOB.I_NO_EMPLOYEE,values);
    }

    /**
     * Fetch records that have <code>I_NO_HIRED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByINoHiredAsync(List<Integer> values) {
        return fetchAsync(HrJob.HR_JOB.I_NO_HIRED,values);
    }

    /**
     * Fetch records that have <code>I_NO_RECRUIT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByINoRecruitAsync(List<Integer> values) {
        return fetchAsync(HrJob.HR_JOB.I_NO_RECRUIT,values);
    }

    /**
     * Fetch records that have <code>R_COMPANY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByRCompanyIdAsync(List<Long> values) {
        return fetchAsync(HrJob.HR_JOB.R_COMPANY_ID,values);
    }

    /**
     * Fetch records that have <code>R_DEPT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByRDeptIdAsync(List<Long> values) {
        return fetchAsync(HrJob.HR_JOB.R_DEPT_ID,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(HrJob.HR_JOB.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(HrJob.HR_JOB.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(HrJob.HR_JOB.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrJob>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(HrJob.HR_JOB.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
