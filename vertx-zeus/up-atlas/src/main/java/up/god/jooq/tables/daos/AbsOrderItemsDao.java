/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.AbsOrderItems;
import up.god.jooq.tables.records.AbsOrderItemsRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AbsOrderItemsDao extends DAOImpl<AbsOrderItemsRecord, up.god.jooq.tables.pojos.AbsOrderItems, String> implements VertxDAO<up.god.jooq.tables.records.AbsOrderItemsRecord,up.god.jooq.tables.pojos.AbsOrderItems,java.lang.String> {

    /**
     * Create a new AbsOrderItemsDao without any configuration
     */
    public AbsOrderItemsDao() {
        super(AbsOrderItems.ABS_ORDER_ITEMS, up.god.jooq.tables.pojos.AbsOrderItems.class);
    }

    /**
     * Create a new AbsOrderItemsDao with an attached configuration
     */
    public AbsOrderItemsDao(Configuration configuration) {
        super(AbsOrderItems.ABS_ORDER_ITEMS, up.god.jooq.tables.pojos.AbsOrderItems.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(up.god.jooq.tables.pojos.AbsOrderItems object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByPkId(String... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.AbsOrderItems fetchOneByPkId(String value) {
        return fetchOne(AbsOrderItems.ABS_ORDER_ITEMS.PK_ID, value);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_ACTUAL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByDAmountActual(BigDecimal... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.D_AMOUNT_ACTUAL, values);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_PRICE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByDAmountPrice(BigDecimal... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.D_AMOUNT_PRICE, values);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_TOTAL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByDAmountTotal(BigDecimal... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.D_AMOUNT_TOTAL, values);
    }

    /**
     * Fetch records that have <code>D_DISCOUNT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByDDiscount(BigDecimal... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.D_DISCOUNT, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchBySCode(String... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_SERIAL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchBySSerial(String... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.S_SERIAL, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByJConfig(String... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>I_QUANTITY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByIQuantity(Integer... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.I_QUANTITY, values);
    }

    /**
     * Fetch records that have <code>R_ORDER_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByROrderId(Long... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.R_ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>R_PRODUCT_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByRProductId(Long... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.R_PRODUCT_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByIsActive(Boolean... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByZSigma(String... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByZLanguage(String... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByZCreateBy(String... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByZUpdateBy(String... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.AbsOrderItems> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(AbsOrderItems.ABS_ORDER_ITEMS.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByPkIdAsync(List<String> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.AbsOrderItems> fetchOneByPkIdAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>D_AMOUNT_ACTUAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByDAmountActualAsync(List<BigDecimal> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.D_AMOUNT_ACTUAL,values);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_PRICE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByDAmountPriceAsync(List<BigDecimal> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.D_AMOUNT_PRICE,values);
    }

    /**
     * Fetch records that have <code>D_AMOUNT_TOTAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByDAmountTotalAsync(List<BigDecimal> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.D_AMOUNT_TOTAL,values);
    }

    /**
     * Fetch records that have <code>D_DISCOUNT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByDDiscountAsync(List<BigDecimal> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.D_DISCOUNT,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchBySSerialAsync(List<String> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.S_SERIAL,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>I_QUANTITY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByIQuantityAsync(List<Integer> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.I_QUANTITY,values);
    }

    /**
     * Fetch records that have <code>R_ORDER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByROrderIdAsync(List<Long> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.R_ORDER_ID,values);
    }

    /**
     * Fetch records that have <code>R_PRODUCT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByRProductIdAsync(List<Long> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.R_PRODUCT_ID,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.AbsOrderItems>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(AbsOrderItems.ABS_ORDER_ITEMS.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
