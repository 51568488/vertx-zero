/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IResHisDeposit extends Serializable {

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.PK_ID</code>. uniqueId,PK_ID
     */
    public IResHisDeposit setPkId(String value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.D_AMOUNT</code>. amount,D_AMOUNT
     */
    public IResHisDeposit setDAmount(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.D_AMOUNT</code>. amount,D_AMOUNT
     */
    public BigDecimal getDAmount();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.D_DEPOSIT_TIME</code>. depositTime,D_DEPOSIT_TIME
     */
    public IResHisDeposit setDDepositTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.D_DEPOSIT_TIME</code>. depositTime,D_DEPOSIT_TIME
     */
    public LocalDateTime getDDepositTime();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.S_CODE</code>. code,S_CODE
     */
    public IResHisDeposit setSCode(String value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.S_SERIAL</code>. serial,S_SERIAL
     */
    public IResHisDeposit setSSerial(String value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.S_SERIAL</code>. serial,S_SERIAL
     */
    public String getSSerial();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.J_CONFIG</code>. config,J_CONFIG
     */
    public IResHisDeposit setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.RLT_DEPOSIT_SOURCE</code>. source,RLT_DEPOSIT_SOURCE
     */
    public IResHisDeposit setRltDepositSource(Long value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.RLT_DEPOSIT_SOURCE</code>. source,RLT_DEPOSIT_SOURCE
     */
    public Long getRltDepositSource();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.RLT_DEPOSIT_TYPE</code>. type,RLT_DEPOSIT_TYPE
     */
    public IResHisDeposit setRltDepositType(Long value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.RLT_DEPOSIT_TYPE</code>. type,RLT_DEPOSIT_TYPE
     */
    public Long getRltDepositType();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.R_CARD_ID</code>. cardId,R_CARD_ID
     */
    public IResHisDeposit setRCardId(String value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.R_CARD_ID</code>. cardId,R_CARD_ID
     */
    public String getRCardId();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.IS_FINISHED</code>. finished,IS_FINISHED
     */
    public IResHisDeposit setIsFinished(Boolean value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.IS_FINISHED</code>. finished,IS_FINISHED
     */
    public Boolean getIsFinished();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IResHisDeposit setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IResHisDeposit setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IResHisDeposit setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IResHisDeposit setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IResHisDeposit setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IResHisDeposit setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IResHisDeposit setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.RES_HIS_DEPOSIT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IResHisDeposit
     */
    public void from(up.god.jooq.tables.interfaces.IResHisDeposit from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IResHisDeposit
     */
    public <E extends up.god.jooq.tables.interfaces.IResHisDeposit> E into(E into);

    default IResHisDeposit fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT!
        // Omitting unrecognized type java.time.LocalDateTime for column D_DEPOSIT_TIME!
        setSCode(json.getString("S_CODE"));
        setSSerial(json.getString("S_SERIAL"));
        setJConfig(json.getString("J_CONFIG"));
        setRltDepositSource(json.getLong("RLT_DEPOSIT_SOURCE"));
        setRltDepositType(json.getLong("RLT_DEPOSIT_TYPE"));
        setRCardId(json.getString("R_CARD_ID"));
        setIsFinished(json.getBoolean("IS_FINISHED"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT!
        // Omitting unrecognized type java.time.LocalDateTime for column D_DEPOSIT_TIME!
        json.put("S_CODE",getSCode());
        json.put("S_SERIAL",getSSerial());
        json.put("J_CONFIG",getJConfig());
        json.put("RLT_DEPOSIT_SOURCE",getRltDepositSource());
        json.put("RLT_DEPOSIT_TYPE",getRltDepositType());
        json.put("R_CARD_ID",getRCardId());
        json.put("IS_FINISHED",getIsFinished());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
