/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.HtlOccupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlOccup extends TableImpl<HtlOccupRecord> {

    private static final long serialVersionUID = 1824652405;

    /**
     * The reference instance of <code>DB_HTL.HTL_OCCUP</code>
     */
    public static final HtlOccup HTL_OCCUP = new HtlOccup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HtlOccupRecord> getRecordType() {
        return HtlOccupRecord.class;
    }

    /**
     * The column <code>DB_HTL.HTL_OCCUP.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<HtlOccupRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.D_INCP_TIME</code>. inoccupTime,D_INCP_TIME
     */
    public final TableField<HtlOccupRecord, LocalDateTime> D_INCP_TIME = createField("D_INCP_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "inoccupTime,D_INCP_TIME");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.T_PREFERENCE</code>. preference,T_PREFERENCE
     */
    public final TableField<HtlOccupRecord, String> T_PREFERENCE = createField("T_PREFERENCE", org.jooq.impl.SQLDataType.CLOB, this, "preference,T_PREFERENCE");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.T_REQUEST</code>. request,T_REQUEST
     */
    public final TableField<HtlOccupRecord, String> T_REQUEST = createField("T_REQUEST", org.jooq.impl.SQLDataType.CLOB, this, "request,T_REQUEST");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.V_HOTEL_ID</code>. hotelId,V_HOTEL_ID
     */
    public final TableField<HtlOccupRecord, Long> V_HOTEL_ID = createField("V_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "hotelId,V_HOTEL_ID");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.V_SCHEDULE_ID</code>. scheduleId,V_SCHEDULE_ID
     */
    public final TableField<HtlOccupRecord, Long> V_SCHEDULE_ID = createField("V_SCHEDULE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "scheduleId,V_SCHEDULE_ID");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.S_CODE</code>. code,S_CODE
     */
    public final TableField<HtlOccupRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.S_CAR_PLATE</code>. carPlate,S_CAR_PLATE
     */
    public final TableField<HtlOccupRecord, String> S_CAR_PLATE = createField("S_CAR_PLATE", org.jooq.impl.SQLDataType.VARCHAR(32), this, "carPlate,S_CAR_PLATE");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.S_OPERATOR</code>. operator,S_OPERATOR
     */
    public final TableField<HtlOccupRecord, String> S_OPERATOR = createField("S_OPERATOR", org.jooq.impl.SQLDataType.VARCHAR(36), this, "operator,S_OPERATOR");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.S_ROOM_NUM</code>. roomNumber,S_ROOM_NUM
     */
    public final TableField<HtlOccupRecord, String> S_ROOM_NUM = createField("S_ROOM_NUM", org.jooq.impl.SQLDataType.VARCHAR(32), this, "roomNumber,S_ROOM_NUM");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.S_SERIAL</code>. serial,S_SERIAL
     */
    public final TableField<HtlOccupRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<HtlOccupRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.I_CARD_COUNTER</code>. cardCounter,I_CARD_COUNTER
     */
    public final TableField<HtlOccupRecord, Integer> I_CARD_COUNTER = createField("I_CARD_COUNTER", org.jooq.impl.SQLDataType.INTEGER, this, "cardCounter,I_CARD_COUNTER");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.I_INSIDE_DAYS</code>. insideDays,I_INSIDE_DAYS
     */
    public final TableField<HtlOccupRecord, Integer> I_INSIDE_DAYS = createField("I_INSIDE_DAYS", org.jooq.impl.SQLDataType.INTEGER, this, "insideDays,I_INSIDE_DAYS");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.I_INSIDE_PERSONS</code>. insidePersons,I_INSIDE_PERSONS
     */
    public final TableField<HtlOccupRecord, Integer> I_INSIDE_PERSONS = createField("I_INSIDE_PERSONS", org.jooq.impl.SQLDataType.INTEGER, this, "insidePersons,I_INSIDE_PERSONS");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.RLT_OCCUP_STATUS</code>. status,RLT_OCCUP_STATUS
     */
    public final TableField<HtlOccupRecord, Long> RLT_OCCUP_STATUS = createField("RLT_OCCUP_STATUS", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "status,RLT_OCCUP_STATUS");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.RLT_OCCUP_TYPE</code>. type,RLT_OCCUP_TYPE
     */
    public final TableField<HtlOccupRecord, Long> RLT_OCCUP_TYPE = createField("RLT_OCCUP_TYPE", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "type,RLT_OCCUP_TYPE");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.R_ORDER_ID</code>. orderId,R_ORDER_ID
     */
    public final TableField<HtlOccupRecord, String> R_ORDER_ID = createField("R_ORDER_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "orderId,R_ORDER_ID");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.R_TRAVELER_ID</code>. travelerId,R_TRAVELER_ID
     */
    public final TableField<HtlOccupRecord, String> R_TRAVELER_ID = createField("R_TRAVELER_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "travelerId,R_TRAVELER_ID");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.IS_SECRET</code>. secret,IS_SECRET
     */
    public final TableField<HtlOccupRecord, Boolean> IS_SECRET = createField("IS_SECRET", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "secret,IS_SECRET");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<HtlOccupRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<HtlOccupRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<HtlOccupRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<HtlOccupRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<HtlOccupRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<HtlOccupRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.HTL_OCCUP.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<HtlOccupRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.HTL_OCCUP</code> table reference
     */
    public HtlOccup() {
        this(DSL.name("HTL_OCCUP"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_OCCUP</code> table reference
     */
    public HtlOccup(String alias) {
        this(DSL.name(alias), HTL_OCCUP);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_OCCUP</code> table reference
     */
    public HtlOccup(Name alias) {
        this(alias, HTL_OCCUP);
    }

    private HtlOccup(Name alias, Table<HtlOccupRecord> aliased) {
        this(alias, aliased, null);
    }

    private HtlOccup(Name alias, Table<HtlOccupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HTL_OCCUP_FK_HTL_OCCUP_R_ORDER_ID, Indexes.HTL_OCCUP_FK_HTL_OCCUP_R_TRAVELER_ID, Indexes.HTL_OCCUP_PRIMARY, Indexes.HTL_OCCUP_UK_HTL_OCCUP_S_CODE_Z_SIGMA, Indexes.HTL_OCCUP_UK_HTL_OCCUP_S_SERIAL_V_HOTEL_ID_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HtlOccupRecord, Long> getIdentity() {
        return Keys.IDENTITY_HTL_OCCUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HtlOccupRecord> getPrimaryKey() {
        return Keys.KEY_HTL_OCCUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HtlOccupRecord>> getKeys() {
        return Arrays.<UniqueKey<HtlOccupRecord>>asList(Keys.KEY_HTL_OCCUP_PRIMARY, Keys.KEY_HTL_OCCUP_UK_HTL_OCCUP_S_SERIAL_V_HOTEL_ID_Z_SIGMA, Keys.KEY_HTL_OCCUP_UK_HTL_OCCUP_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlOccup as(String alias) {
        return new HtlOccup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlOccup as(Name alias) {
        return new HtlOccup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlOccup rename(String name) {
        return new HtlOccup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlOccup rename(Name name) {
        return new HtlOccup(name, null);
    }
}
