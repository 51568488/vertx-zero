/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.HtlMaterialRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlMaterial extends TableImpl<HtlMaterialRecord> {

    private static final long serialVersionUID = -981758177;

    /**
     * The reference instance of <code>DB_HTL.HTL_MATERIAL</code>
     */
    public static final HtlMaterial HTL_MATERIAL = new HtlMaterial();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HtlMaterialRecord> getRecordType() {
        return HtlMaterialRecord.class;
    }

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<HtlMaterialRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.L_MAX_BALANCE</code>. maxBalance,L_MAX_BALANCE
     */
    public final TableField<HtlMaterialRecord, Long> L_MAX_BALANCE = createField("L_MAX_BALANCE", org.jooq.impl.SQLDataType.BIGINT, this, "maxBalance,L_MAX_BALANCE");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.L_MIN_BALANCE</code>. minBalance,L_MIN_BALANCE
     */
    public final TableField<HtlMaterialRecord, Long> L_MIN_BALANCE = createField("L_MIN_BALANCE", org.jooq.impl.SQLDataType.BIGINT, this, "minBalance,L_MIN_BALANCE");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.L_QUALITYAPERIOD</code>. qualityAperiod,L_QUALITYAPERIOD
     */
    public final TableField<HtlMaterialRecord, Long> L_QUALITYAPERIOD = createField("L_QUALITYAPERIOD", org.jooq.impl.SQLDataType.BIGINT, this, "qualityAperiod,L_QUALITYAPERIOD");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.L_QUALITYGPERIOD</code>. qualityGperiod,L_QUALITYGPERIOD
     */
    public final TableField<HtlMaterialRecord, Long> L_QUALITYGPERIOD = createField("L_QUALITYGPERIOD", org.jooq.impl.SQLDataType.BIGINT, this, "qualityGperiod,L_QUALITYGPERIOD");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.V_COST_ID</code>. costId,V_COST_ID
     */
    public final TableField<HtlMaterialRecord, String> V_COST_ID = createField("V_COST_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "costId,V_COST_ID");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.V_INCOME_ID</code>. incomeId,V_INCOME_ID
     */
    public final TableField<HtlMaterialRecord, String> V_INCOME_ID = createField("V_INCOME_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "incomeId,V_INCOME_ID");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.V_PAYTERM_ID</code>. 【关联账单】该上挂的账单ID,payTermId,V_PAYTERM_ID
     */
    public final TableField<HtlMaterialRecord, String> V_PAYTERM_ID = createField("V_PAYTERM_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "【关联账单】该上挂的账单ID,payTermId,V_PAYTERM_ID");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.S_NAME</code>. name,S_NAME
     */
    public final TableField<HtlMaterialRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.S_CODE</code>. code,S_CODE
     */
    public final TableField<HtlMaterialRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.S_HELP_CODE</code>. helpCode,S_HELP_CODE
     */
    public final TableField<HtlMaterialRecord, String> S_HELP_CODE = createField("S_HELP_CODE", org.jooq.impl.SQLDataType.VARCHAR(32), this, "helpCode,S_HELP_CODE");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.S_PIC</code>. pic,S_PIC
     */
    public final TableField<HtlMaterialRecord, String> S_PIC = createField("S_PIC", org.jooq.impl.SQLDataType.VARCHAR(255), this, "pic,S_PIC");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.S_PRODUCT_CAT</code>. productCat,S_PRODUCT_CAT
     */
    public final TableField<HtlMaterialRecord, String> S_PRODUCT_CAT = createField("S_PRODUCT_CAT", org.jooq.impl.SQLDataType.VARCHAR(64), this, "productCat,S_PRODUCT_CAT");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.S_PRODUCT_CODE</code>. productCode,S_PRODUCT_CODE
     */
    public final TableField<HtlMaterialRecord, String> S_PRODUCT_CODE = createField("S_PRODUCT_CODE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "productCode,S_PRODUCT_CODE");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.S_REPOSITORY</code>. repository,S_REPOSITORY
     */
    public final TableField<HtlMaterialRecord, String> S_REPOSITORY = createField("S_REPOSITORY", org.jooq.impl.SQLDataType.VARCHAR(64), this, "repository,S_REPOSITORY");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.S_TYPE</code>. type,S_TYPE
     */
    public final TableField<HtlMaterialRecord, String> S_TYPE = createField("S_TYPE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "type,S_TYPE");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.S_UNIT</code>. unit,S_UNIT
     */
    public final TableField<HtlMaterialRecord, String> S_UNIT = createField("S_UNIT", org.jooq.impl.SQLDataType.VARCHAR(10), this, "unit,S_UNIT");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<HtlMaterialRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.R_CATEGORY_ID</code>. 【关联类别】该关联的类别ID,categoryId,R_CATEGORY_ID
     */
    public final TableField<HtlMaterialRecord, String> R_CATEGORY_ID = createField("R_CATEGORY_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "【关联类别】该关联的类别ID,categoryId,R_CATEGORY_ID");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public final TableField<HtlMaterialRecord, Long> R_HOTEL_ID = createField("R_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT, this, "hotelId,R_HOTEL_ID");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.IS_PRODUCT</code>. product,IS_PRODUCT
     */
    public final TableField<HtlMaterialRecord, Boolean> IS_PRODUCT = createField("IS_PRODUCT", org.jooq.impl.SQLDataType.BOOLEAN, this, "product,IS_PRODUCT");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<HtlMaterialRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<HtlMaterialRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<HtlMaterialRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<HtlMaterialRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<HtlMaterialRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<HtlMaterialRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.HTL_MATERIAL.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<HtlMaterialRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.HTL_MATERIAL</code> table reference
     */
    public HtlMaterial() {
        this(DSL.name("HTL_MATERIAL"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_MATERIAL</code> table reference
     */
    public HtlMaterial(String alias) {
        this(DSL.name(alias), HTL_MATERIAL);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_MATERIAL</code> table reference
     */
    public HtlMaterial(Name alias) {
        this(alias, HTL_MATERIAL);
    }

    private HtlMaterial(Name alias, Table<HtlMaterialRecord> aliased) {
        this(alias, aliased, null);
    }

    private HtlMaterial(Name alias, Table<HtlMaterialRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HTL_MATERIAL_FK_HTL_MATERIAL_R_CATEGORY_ID, Indexes.HTL_MATERIAL_FK_HTL_MATERIAL_R_HOTEL_ID, Indexes.HTL_MATERIAL_PRIMARY, Indexes.HTL_MATERIAL_UK_HTL_MATERIAL_S_CODE_Z_SIGMA, Indexes.HTL_MATERIAL_UK_HTL_MATERIAL_S_NAME_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HtlMaterialRecord, Long> getIdentity() {
        return Keys.IDENTITY_HTL_MATERIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HtlMaterialRecord> getPrimaryKey() {
        return Keys.KEY_HTL_MATERIAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HtlMaterialRecord>> getKeys() {
        return Arrays.<UniqueKey<HtlMaterialRecord>>asList(Keys.KEY_HTL_MATERIAL_PRIMARY, Keys.KEY_HTL_MATERIAL_UK_HTL_MATERIAL_S_NAME_Z_SIGMA, Keys.KEY_HTL_MATERIAL_UK_HTL_MATERIAL_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMaterial as(String alias) {
        return new HtlMaterial(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlMaterial as(Name alias) {
        return new HtlMaterial(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlMaterial rename(String name) {
        return new HtlMaterial(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlMaterial rename(Name name) {
        return new HtlMaterial(name, null);
    }
}
