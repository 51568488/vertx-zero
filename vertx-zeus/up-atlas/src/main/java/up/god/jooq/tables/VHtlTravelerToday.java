/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VHtlTravelerTodayRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VHtlTravelerToday extends TableImpl<VHtlTravelerTodayRecord> {

    private static final long serialVersionUID = -273502456;

    /**
     * The reference instance of <code>DB_HTL.v_htl_traveler_today</code>
     */
    public static final VHtlTravelerToday V_HTL_TRAVELER_TODAY = new VHtlTravelerToday();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VHtlTravelerTodayRecord> getRecordType() {
        return VHtlTravelerTodayRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlTravelerTodayRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.S_SERIAL</code>. serial,S_SERIAL
     */
    public final TableField<VHtlTravelerTodayRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.V_HOTEL_ID</code>. hotelId,V_HOTEL_ID
     */
    public final TableField<VHtlTravelerTodayRecord, Long> V_HOTEL_ID = createField("V_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "hotelId,V_HOTEL_ID");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.IS_SECRET</code>. secret,IS_SECRET
     */
    public final TableField<VHtlTravelerTodayRecord, Boolean> IS_SECRET = createField("IS_SECRET", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "secret,IS_SECRET");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.S_ROOM_NUM</code>. roomNumber,S_ROOM_NUM
     */
    public final TableField<VHtlTravelerTodayRecord, String> S_ROOM_NUM = createField("S_ROOM_NUM", org.jooq.impl.SQLDataType.VARCHAR(32), this, "roomNumber,S_ROOM_NUM");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.S_REALNAME</code>. realname,S_REALNAME
     */
    public final TableField<VHtlTravelerTodayRecord, String> S_REALNAME = createField("S_REALNAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "realname,S_REALNAME");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.S_MOBILE</code>. mobile,S_MOBILE
     */
    public final TableField<VHtlTravelerTodayRecord, String> S_MOBILE = createField("S_MOBILE", org.jooq.impl.SQLDataType.VARCHAR(20), this, "mobile,S_MOBILE");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public final TableField<VHtlTravelerTodayRecord, String> S_NICKNAME = createField("S_NICKNAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "nickname,S_NICKNAME");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.S_NATION</code>. nation,S_NATION
     */
    public final TableField<VHtlTravelerTodayRecord, String> S_NATION = createField("S_NATION", org.jooq.impl.SQLDataType.VARCHAR(32), this, "nation,S_NATION");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.S_COUNTRY</code>. country,S_COUNTRY
     */
    public final TableField<VHtlTravelerTodayRecord, String> S_COUNTRY = createField("S_COUNTRY", org.jooq.impl.SQLDataType.VARCHAR(16), this, "country,S_COUNTRY");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.D_BIRTHDAY</code>. birthday,D_BIRTHDAY
     */
    public final TableField<VHtlTravelerTodayRecord, LocalDate> D_BIRTHDAY = createField("D_BIRTHDAY", org.jooq.impl.SQLDataType.LOCALDATE, this, "birthday,D_BIRTHDAY");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.D_INCP_TIME</code>. inoccupTime,D_INCP_TIME
     */
    public final TableField<VHtlTravelerTodayRecord, LocalDateTime> D_INCP_TIME = createField("D_INCP_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "inoccupTime,D_INCP_TIME");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.IS_MALE</code>. male,IS_MALE
     */
    public final TableField<VHtlTravelerTodayRecord, Boolean> IS_MALE = createField("IS_MALE", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "male,IS_MALE");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.S_NTV_PLACE</code>. nativePlace,S_NTV_PLACE
     */
    public final TableField<VHtlTravelerTodayRecord, String> S_NTV_PLACE = createField("S_NTV_PLACE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "nativePlace,S_NTV_PLACE");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.RLT_IDC_TYPE</code>. idcType,RLT_IDC_TYPE
     */
    public final TableField<VHtlTravelerTodayRecord, Long> RLT_IDC_TYPE = createField("RLT_IDC_TYPE", org.jooq.impl.SQLDataType.BIGINT, this, "idcType,RLT_IDC_TYPE");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.S_IDC_NUM</code>. idcNumber,S_IDC_NUM
     */
    public final TableField<VHtlTravelerTodayRecord, String> S_IDC_NUM = createField("S_IDC_NUM", org.jooq.impl.SQLDataType.VARCHAR(32), this, "idcNumber,S_IDC_NUM");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.I_INOCCUPS</code>. inoccups,I_INOCCUPS
     */
    public final TableField<VHtlTravelerTodayRecord, Integer> I_INOCCUPS = createField("I_INOCCUPS", org.jooq.impl.SQLDataType.INTEGER, this, "inoccups,I_INOCCUPS");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.T_ADDRESS</code>. address,T_ADDRESS
     */
    public final TableField<VHtlTravelerTodayRecord, String> T_ADDRESS = createField("T_ADDRESS", org.jooq.impl.SQLDataType.CLOB, this, "address,T_ADDRESS");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.IS_UPLOADED</code>. uploaded,IS_UPLOADED
     */
    public final TableField<VHtlTravelerTodayRecord, Boolean> IS_UPLOADED = createField("IS_UPLOADED", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "uploaded,IS_UPLOADED");

    /**
     * The column <code>DB_HTL.v_htl_traveler_today.RLT_TRAVELER_STATUS</code>. status,RLT_TRAVELER_STATUS
     */
    public final TableField<VHtlTravelerTodayRecord, Long> RLT_TRAVELER_STATUS = createField("RLT_TRAVELER_STATUS", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "status,RLT_TRAVELER_STATUS");

    /**
     * Create a <code>DB_HTL.v_htl_traveler_today</code> table reference
     */
    public VHtlTravelerToday() {
        this(DSL.name("v_htl_traveler_today"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_traveler_today</code> table reference
     */
    public VHtlTravelerToday(String alias) {
        this(DSL.name(alias), V_HTL_TRAVELER_TODAY);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_traveler_today</code> table reference
     */
    public VHtlTravelerToday(Name alias) {
        this(alias, V_HTL_TRAVELER_TODAY);
    }

    private VHtlTravelerToday(Name alias, Table<VHtlTravelerTodayRecord> aliased) {
        this(alias, aliased, null);
    }

    private VHtlTravelerToday(Name alias, Table<VHtlTravelerTodayRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlTravelerToday as(String alias) {
        return new VHtlTravelerToday(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlTravelerToday as(Name alias) {
        return new VHtlTravelerToday(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlTravelerToday rename(String name) {
        return new VHtlTravelerToday(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlTravelerToday rename(Name name) {
        return new VHtlTravelerToday(name, null);
    }
}
