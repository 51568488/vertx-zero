/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.HtlOrderItems;
import up.god.jooq.tables.interfaces.IHtlOrderItems;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlOrderItemsRecord extends UpdatableRecordImpl<HtlOrderItemsRecord> implements IHtlOrderItems {

    private static final long serialVersionUID = 151380726;

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public HtlOrderItemsRecord setPkId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public Long getPkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.D_AMOUNT_ACTUAL</code>. 【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL
     */
    @Override
    public HtlOrderItemsRecord setDAmountActual(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.D_AMOUNT_ACTUAL</code>. 【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL
     */
    @Override
    public BigDecimal getDAmountActual() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.D_AMOUNT_PRICE</code>. 【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE
     */
    @Override
    public HtlOrderItemsRecord setDAmountPrice(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.D_AMOUNT_PRICE</code>. 【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE
     */
    @Override
    public BigDecimal getDAmountPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.D_AMOUNT_TOTAL</code>. 【总价】该明细的总价格：amountTotal = amountActual x quantity,amountTotal,D_AMOUNT_TOTAL
     */
    @Override
    public HtlOrderItemsRecord setDAmountTotal(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.D_AMOUNT_TOTAL</code>. 【总价】该明细的总价格：amountTotal = amountActual x quantity,amountTotal,D_AMOUNT_TOTAL
     */
    @Override
    public BigDecimal getDAmountTotal() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.D_ARRIVE_TIME</code>. arriveTime,D_ARRIVE_TIME
     */
    @Override
    public HtlOrderItemsRecord setDArriveTime(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.D_ARRIVE_TIME</code>. arriveTime,D_ARRIVE_TIME
     */
    @Override
    public LocalDateTime getDArriveTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.D_BREKKER_PRICE</code>. brekkerPrice,D_BREKKER_PRICE
     */
    @Override
    public HtlOrderItemsRecord setDBrekkerPrice(BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.D_BREKKER_PRICE</code>. brekkerPrice,D_BREKKER_PRICE
     */
    @Override
    public BigDecimal getDBrekkerPrice() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.D_DISCOUNT</code>. 【折扣率】格式为小数，单位%，用于记录当前明细的折扣率,discount,D_DISCOUNT
     */
    @Override
    public HtlOrderItemsRecord setDDiscount(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.D_DISCOUNT</code>. 【折扣率】格式为小数，单位%，用于记录当前明细的折扣率,discount,D_DISCOUNT
     */
    @Override
    public BigDecimal getDDiscount() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.D_LEAVE_TIME</code>. leaveTime,D_LEAVE_TIME
     */
    @Override
    public HtlOrderItemsRecord setDLeaveTime(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.D_LEAVE_TIME</code>. leaveTime,D_LEAVE_TIME
     */
    @Override
    public LocalDateTime getDLeaveTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.S_CODE</code>. code,S_CODE
     */
    @Override
    public HtlOrderItemsRecord setSCode(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.S_SERIAL</code>. REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL
     */
    @Override
    public HtlOrderItemsRecord setSSerial(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.S_SERIAL</code>. REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL
     */
    @Override
    public String getSSerial() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public HtlOrderItemsRecord setJConfig(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.I_BK_TICKET</code>. brekkerTicket,I_BK_TICKET
     */
    @Override
    public HtlOrderItemsRecord setIBkTicket(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.I_BK_TICKET</code>. brekkerTicket,I_BK_TICKET
     */
    @Override
    public Integer getIBkTicket() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.I_DR_TICKET</code>. dinnerTicket,I_DR_TICKET
     */
    @Override
    public HtlOrderItemsRecord setIDrTicket(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.I_DR_TICKET</code>. dinnerTicket,I_DR_TICKET
     */
    @Override
    public Integer getIDrTicket() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.I_INSIDE_DAYS</code>. insideDays,I_INSIDE_DAYS
     */
    @Override
    public HtlOrderItemsRecord setIInsideDays(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.I_INSIDE_DAYS</code>. insideDays,I_INSIDE_DAYS
     */
    @Override
    public Integer getIInsideDays() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.I_INSIDE_PERSONS</code>. insidePersons,I_INSIDE_PERSONS
     */
    @Override
    public HtlOrderItemsRecord setIInsidePersons(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.I_INSIDE_PERSONS</code>. insidePersons,I_INSIDE_PERSONS
     */
    @Override
    public Integer getIInsidePersons() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.I_LH_TICKET</code>. lunchTicket,I_LH_TICKET
     */
    @Override
    public HtlOrderItemsRecord setILhTicket(Integer value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.I_LH_TICKET</code>. lunchTicket,I_LH_TICKET
     */
    @Override
    public Integer getILhTicket() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.I_QUANTITY</code>. 【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY
     */
    @Override
    public HtlOrderItemsRecord setIQuantity(Integer value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.I_QUANTITY</code>. 【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY
     */
    @Override
    public Integer getIQuantity() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.I_RCOUNTER</code>. roomCounter,I_RCOUNTER
     */
    @Override
    public HtlOrderItemsRecord setIRcounter(Integer value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.I_RCOUNTER</code>. roomCounter,I_RCOUNTER
     */
    @Override
    public Integer getIRcounter() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.I_SP_TICKET</code>. supperTicket,I_SP_TICKET
     */
    @Override
    public HtlOrderItemsRecord setISpTicket(Integer value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.I_SP_TICKET</code>. supperTicket,I_SP_TICKET
     */
    @Override
    public Integer getISpTicket() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.R_CODE_COMMISSION_ID</code>. codeCommission,R_CODE_COMMISSION_ID
     */
    @Override
    public HtlOrderItemsRecord setRCodeCommissionId(Long value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.R_CODE_COMMISSION_ID</code>. codeCommission,R_CODE_COMMISSION_ID
     */
    @Override
    public Long getRCodeCommissionId() {
        return (Long) get(19);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.R_CODE_GROUP_ID</code>. codeGroup,R_CODE_GROUP_ID
     */
    @Override
    public HtlOrderItemsRecord setRCodeGroupId(Long value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.R_CODE_GROUP_ID</code>. codeGroup,R_CODE_GROUP_ID
     */
    @Override
    public Long getRCodeGroupId() {
        return (Long) get(20);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.R_CODE_PRICE_ID</code>. codePrice,R_CODE_PRICE_ID
     */
    @Override
    public HtlOrderItemsRecord setRCodePriceId(Long value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.R_CODE_PRICE_ID</code>. codePrice,R_CODE_PRICE_ID
     */
    @Override
    public Long getRCodePriceId() {
        return (Long) get(21);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.R_ORDER_ID</code>. REF：HTL_ORDERS【订单ID】该明细关联的订单ID值,orderId,R_ORDER_ID
     */
    @Override
    public HtlOrderItemsRecord setROrderId(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.R_ORDER_ID</code>. REF：HTL_ORDERS【订单ID】该明细关联的订单ID值,orderId,R_ORDER_ID
     */
    @Override
    public String getROrderId() {
        return (String) get(22);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.R_ROOM_TYPE_ID</code>. roomTypeId,R_ROOM_TYPE_ID
     */
    @Override
    public HtlOrderItemsRecord setRRoomTypeId(Long value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.R_ROOM_TYPE_ID</code>. roomTypeId,R_ROOM_TYPE_ID
     */
    @Override
    public Long getRRoomTypeId() {
        return (Long) get(23);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.IS_BREKKER</code>. brekker,IS_BREKKER
     */
    @Override
    public HtlOrderItemsRecord setIsBrekker(Boolean value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.IS_BREKKER</code>. brekker,IS_BREKKER
     */
    @Override
    public Boolean getIsBrekker() {
        return (Boolean) get(24);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.IS_POS</code>. pos,IS_POS
     */
    @Override
    public HtlOrderItemsRecord setIsPos(Boolean value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.IS_POS</code>. pos,IS_POS
     */
    @Override
    public Boolean getIsPos() {
        return (Boolean) get(25);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public HtlOrderItemsRecord setIsActive(Boolean value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(26);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public HtlOrderItemsRecord setZSigma(String value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(27);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public HtlOrderItemsRecord setZLanguage(String value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(28);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public HtlOrderItemsRecord setZCreateBy(String value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(29);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public HtlOrderItemsRecord setZCreateTime(LocalDateTime value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(30);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public HtlOrderItemsRecord setZUpdateBy(String value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(31);
    }

    /**
     * Setter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public HtlOrderItemsRecord setZUpdateTime(LocalDateTime value) {
        set(32, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.HTL_ORDER_ITEMS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(32);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IHtlOrderItems from) {
        setPkId(from.getPkId());
        setDAmountActual(from.getDAmountActual());
        setDAmountPrice(from.getDAmountPrice());
        setDAmountTotal(from.getDAmountTotal());
        setDArriveTime(from.getDArriveTime());
        setDBrekkerPrice(from.getDBrekkerPrice());
        setDDiscount(from.getDDiscount());
        setDLeaveTime(from.getDLeaveTime());
        setSCode(from.getSCode());
        setSSerial(from.getSSerial());
        setJConfig(from.getJConfig());
        setIBkTicket(from.getIBkTicket());
        setIDrTicket(from.getIDrTicket());
        setIInsideDays(from.getIInsideDays());
        setIInsidePersons(from.getIInsidePersons());
        setILhTicket(from.getILhTicket());
        setIQuantity(from.getIQuantity());
        setIRcounter(from.getIRcounter());
        setISpTicket(from.getISpTicket());
        setRCodeCommissionId(from.getRCodeCommissionId());
        setRCodeGroupId(from.getRCodeGroupId());
        setRCodePriceId(from.getRCodePriceId());
        setROrderId(from.getROrderId());
        setRRoomTypeId(from.getRRoomTypeId());
        setIsBrekker(from.getIsBrekker());
        setIsPos(from.getIsPos());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IHtlOrderItems> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HtlOrderItemsRecord
     */
    public HtlOrderItemsRecord() {
        super(HtlOrderItems.HTL_ORDER_ITEMS);
    }

    /**
     * Create a detached, initialised HtlOrderItemsRecord
     */
    public HtlOrderItemsRecord(Long pkId, BigDecimal dAmountActual, BigDecimal dAmountPrice, BigDecimal dAmountTotal, LocalDateTime dArriveTime, BigDecimal dBrekkerPrice, BigDecimal dDiscount, LocalDateTime dLeaveTime, String sCode, String sSerial, String jConfig, Integer iBkTicket, Integer iDrTicket, Integer iInsideDays, Integer iInsidePersons, Integer iLhTicket, Integer iQuantity, Integer iRcounter, Integer iSpTicket, Long rCodeCommissionId, Long rCodeGroupId, Long rCodePriceId, String rOrderId, Long rRoomTypeId, Boolean isBrekker, Boolean isPos, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(HtlOrderItems.HTL_ORDER_ITEMS);

        set(0, pkId);
        set(1, dAmountActual);
        set(2, dAmountPrice);
        set(3, dAmountTotal);
        set(4, dArriveTime);
        set(5, dBrekkerPrice);
        set(6, dDiscount);
        set(7, dLeaveTime);
        set(8, sCode);
        set(9, sSerial);
        set(10, jConfig);
        set(11, iBkTicket);
        set(12, iDrTicket);
        set(13, iInsideDays);
        set(14, iInsidePersons);
        set(15, iLhTicket);
        set(16, iQuantity);
        set(17, iRcounter);
        set(18, iSpTicket);
        set(19, rCodeCommissionId);
        set(20, rCodeGroupId);
        set(21, rCodePriceId);
        set(22, rOrderId);
        set(23, rRoomTypeId);
        set(24, isBrekker);
        set(25, isPos);
        set(26, isActive);
        set(27, zSigma);
        set(28, zLanguage);
        set(29, zCreateBy);
        set(30, zCreateTime);
        set(31, zUpdateBy);
        set(32, zUpdateTime);
    }
}
