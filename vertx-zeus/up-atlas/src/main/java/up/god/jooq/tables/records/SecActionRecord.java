/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.SecAction;
import up.god.jooq.tables.interfaces.ISecAction;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecActionRecord extends UpdatableRecordImpl<SecActionRecord> implements Record20<String, String, String, String, String, String, String, String, Long, Integer, Long, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, ISecAction {

    private static final long serialVersionUID = 423141738;

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public SecActionRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.T_SCRIPT</code>. script,T_SCRIPT
     */
    @Override
    public SecActionRecord setTScript(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.T_SCRIPT</code>. script,T_SCRIPT
     */
    @Override
    public String getTScript() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.S_CODE</code>. code,S_CODE
     */
    @Override
    public SecActionRecord setSCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.S_DISPATCH</code>. dispatch,S_DISPATCH
     */
    @Override
    public SecActionRecord setSDispatch(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.S_DISPATCH</code>. dispatch,S_DISPATCH
     */
    @Override
    public String getSDispatch() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.S_METHOD</code>. method,S_METHOD
     */
    @Override
    public SecActionRecord setSMethod(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.S_METHOD</code>. method,S_METHOD
     */
    @Override
    public String getSMethod() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.S_PATH</code>. path,S_PATH
     */
    @Override
    public SecActionRecord setSPath(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.S_PATH</code>. path,S_PATH
     */
    @Override
    public String getSPath() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public SecActionRecord setJConfig(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.J_PARAMS</code>. params,J_PARAMS
     */
    @Override
    public SecActionRecord setJParams(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.J_PARAMS</code>. params,J_PARAMS
     */
    @Override
    public String getJParams() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.I_LEFT</code>. left,I_LEFT
     */
    @Override
    public SecActionRecord setILeft(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.I_LEFT</code>. left,I_LEFT
     */
    @Override
    public Long getILeft() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.I_LEVEL</code>. level,I_LEVEL
     */
    @Override
    public SecActionRecord setILevel(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.I_LEVEL</code>. level,I_LEVEL
     */
    @Override
    public Integer getILevel() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.I_RIGHT</code>. right,I_RIGHT
     */
    @Override
    public SecActionRecord setIRight(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.I_RIGHT</code>. right,I_RIGHT
     */
    @Override
    public Long getIRight() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.R_PARENT_ID</code>. parentId,R_PARENT_ID
     */
    @Override
    public SecActionRecord setRParentId(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.R_PARENT_ID</code>. parentId,R_PARENT_ID
     */
    @Override
    public String getRParentId() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.R_RES_ID</code>. resourceId,R_RES_ID
     */
    @Override
    public SecActionRecord setRResId(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.R_RES_ID</code>. resourceId,R_RES_ID
     */
    @Override
    public String getRResId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public SecActionRecord setIsActive(Boolean value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public SecActionRecord setZSigma(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public SecActionRecord setZLanguage(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public SecActionRecord setZCreateBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public SecActionRecord setZCreateTime(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public SecActionRecord setZUpdateBy(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_HTL.SEC_ACTION.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public SecActionRecord setZUpdateTime(LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SEC_ACTION.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<String, String, String, String, String, String, String, String, Long, Integer, Long, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<String, String, String, String, String, String, String, String, Long, Integer, Long, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row20) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SecAction.SEC_ACTION.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SecAction.SEC_ACTION.T_SCRIPT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SecAction.SEC_ACTION.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SecAction.SEC_ACTION.S_DISPATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SecAction.SEC_ACTION.S_METHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return SecAction.SEC_ACTION.S_PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return SecAction.SEC_ACTION.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return SecAction.SEC_ACTION.J_PARAMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return SecAction.SEC_ACTION.I_LEFT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return SecAction.SEC_ACTION.I_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return SecAction.SEC_ACTION.I_RIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return SecAction.SEC_ACTION.R_PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return SecAction.SEC_ACTION.R_RES_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field14() {
        return SecAction.SEC_ACTION.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return SecAction.SEC_ACTION.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return SecAction.SEC_ACTION.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return SecAction.SEC_ACTION.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field18() {
        return SecAction.SEC_ACTION.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field19() {
        return SecAction.SEC_ACTION.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field20() {
        return SecAction.SEC_ACTION.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTScript();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSDispatch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getJParams();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getILeft();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getILevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getIRight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getRParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getRResId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component14() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component18() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component19() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component20() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTScript();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSDispatch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getJParams();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getILeft();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getILevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getIRight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getRParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getRResId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value14() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value18() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value19() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value20() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value2(String value) {
        setTScript(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value3(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value4(String value) {
        setSDispatch(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value5(String value) {
        setSMethod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value6(String value) {
        setSPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value7(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value8(String value) {
        setJParams(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value9(Long value) {
        setILeft(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value10(Integer value) {
        setILevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value11(Long value) {
        setIRight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value12(String value) {
        setRParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value13(String value) {
        setRResId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value14(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value15(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value16(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value17(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value18(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value19(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord value20(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecActionRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, Long value9, Integer value10, Long value11, String value12, String value13, Boolean value14, String value15, String value16, String value17, LocalDateTime value18, String value19, LocalDateTime value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISecAction from) {
        setPkId(from.getPkId());
        setTScript(from.getTScript());
        setSCode(from.getSCode());
        setSDispatch(from.getSDispatch());
        setSMethod(from.getSMethod());
        setSPath(from.getSPath());
        setJConfig(from.getJConfig());
        setJParams(from.getJParams());
        setILeft(from.getILeft());
        setILevel(from.getILevel());
        setIRight(from.getIRight());
        setRParentId(from.getRParentId());
        setRResId(from.getRResId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISecAction> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecActionRecord
     */
    public SecActionRecord() {
        super(SecAction.SEC_ACTION);
    }

    /**
     * Create a detached, initialised SecActionRecord
     */
    public SecActionRecord(String pkId, String tScript, String sCode, String sDispatch, String sMethod, String sPath, String jConfig, String jParams, Long iLeft, Integer iLevel, Long iRight, String rParentId, String rResId, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(SecAction.SEC_ACTION);

        set(0, pkId);
        set(1, tScript);
        set(2, sCode);
        set(3, sDispatch);
        set(4, sMethod);
        set(5, sPath);
        set(6, jConfig);
        set(7, jParams);
        set(8, iLeft);
        set(9, iLevel);
        set(10, iRight);
        set(11, rParentId);
        set(12, rResId);
        set(13, isActive);
        set(14, zSigma);
        set(15, zLanguage);
        set(16, zCreateBy);
        set(17, zCreateTime);
        set(18, zUpdateBy);
        set(19, zUpdateTime);
    }
}
