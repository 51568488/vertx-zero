/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IVHtlCodePrice extends Serializable {

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.PK_ID</code>. uniqueId,PK_ID
     */
    public IVHtlCodePrice setPkId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.PK_ID</code>. uniqueId,PK_ID
     */
    public Long getPkId();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.S_CODE</code>. code,S_CODE
     */
    public IVHtlCodePrice setSCode(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.S_NAME</code>. 【房价码名称】,name,S_NAME
     */
    public IVHtlCodePrice setSName(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.S_NAME</code>. 【房价码名称】,name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.D_PRICE</code>. 【挂牌价】当前房价码对应挂牌价,price,D_PRICE
     */
    public IVHtlCodePrice setDPrice(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.D_PRICE</code>. 【挂牌价】当前房价码对应挂牌价,price,D_PRICE
     */
    public BigDecimal getDPrice();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.D_BK_PRICE</code>. 【早餐价】当前房价码对应早餐价：包早价 = price + brekkerPrice,brekkerPrice,D_BK_PRICE
     */
    public IVHtlCodePrice setDBkPrice(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.D_BK_PRICE</code>. 【早餐价】当前房价码对应早餐价：包早价 = price + brekkerPrice,brekkerPrice,D_BK_PRICE
     */
    public BigDecimal getDBkPrice();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.R_ROOM_TYPE_ID</code>. 【房型信息】该房价码对应的房型信息,roomTypeId,R_ROOM_TYPE_ID
     */
    public IVHtlCodePrice setRRoomTypeId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.R_ROOM_TYPE_ID</code>. 【房型信息】该房价码对应的房型信息,roomTypeId,R_ROOM_TYPE_ID
     */
    public Long getRRoomTypeId();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.I_ORDER</code>. order,I_ORDER
     */
    public IVHtlCodePrice setIOrder(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.I_ORDER</code>. order,I_ORDER
     */
    public Integer getIOrder();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.RLT_PRICECAT</code>. REF: SYS_TABULAR【价格类型】房价码对应价格类型,priceCat,RLT_PRICECAT
     */
    public IVHtlCodePrice setRltPricecat(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.RLT_PRICECAT</code>. REF: SYS_TABULAR【价格类型】房价码对应价格类型,priceCat,RLT_PRICECAT
     */
    public Long getRltPricecat();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.RLT_SOURCE</code>. REF: SYS_TABULAR【来源码】该房价码关联来源码,source,RLT_SOURCE
     */
    public IVHtlCodePrice setRltSource(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.RLT_SOURCE</code>. REF: SYS_TABULAR【来源码】该房价码关联来源码,source,RLT_SOURCE
     */
    public Long getRltSource();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.RLT_MARKET</code>. REF: SYS_TABULAR【市场码】该房价码关联市场码,market,RLT_MARKET
     */
    public IVHtlCodePrice setRltMarket(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.RLT_MARKET</code>. REF: SYS_TABULAR【市场码】该房价码关联市场码,market,RLT_MARKET
     */
    public Long getRltMarket();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.IS_HASBREK</code>. 房包早？,hasBrek,IS_HASBREK
     */
    public IVHtlCodePrice setIsHasbrek(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.IS_HASBREK</code>. 房包早？,hasBrek,IS_HASBREK
     */
    public Boolean getIsHasbrek();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IVHtlCodePrice setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.v_htl_code_price.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public IVHtlCodePrice setRHotelId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_code_price.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public Long getRHotelId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IVHtlCodePrice
     */
    public void from(up.god.jooq.tables.interfaces.IVHtlCodePrice from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IVHtlCodePrice
     */
    public <E extends up.god.jooq.tables.interfaces.IVHtlCodePrice> E into(E into);

    default IVHtlCodePrice fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getLong("PK_ID"));
        setSCode(json.getString("S_CODE"));
        setSName(json.getString("S_NAME"));
        // Omitting unrecognized type java.math.BigDecimal for column D_PRICE!
        // Omitting unrecognized type java.math.BigDecimal for column D_BK_PRICE!
        setRRoomTypeId(json.getLong("R_ROOM_TYPE_ID"));
        setIOrder(json.getInteger("I_ORDER"));
        setRltPricecat(json.getLong("RLT_PRICECAT"));
        setRltSource(json.getLong("RLT_SOURCE"));
        setRltMarket(json.getLong("RLT_MARKET"));
        setIsHasbrek(json.getBoolean("IS_HASBREK"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setRHotelId(json.getLong("R_HOTEL_ID"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("S_CODE",getSCode());
        json.put("S_NAME",getSName());
        // Omitting unrecognized type java.math.BigDecimal for column D_PRICE!
        // Omitting unrecognized type java.math.BigDecimal for column D_BK_PRICE!
        json.put("R_ROOM_TYPE_ID",getRRoomTypeId());
        json.put("I_ORDER",getIOrder());
        json.put("RLT_PRICECAT",getRltPricecat());
        json.put("RLT_SOURCE",getRltSource());
        json.put("RLT_MARKET",getRltMarket());
        json.put("IS_HASBREK",getIsHasbrek());
        json.put("IS_ACTIVE",getIsActive());
        json.put("R_HOTEL_ID",getRHotelId());
        return json;
    }

}
