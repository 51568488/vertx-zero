/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.AbsProduct;
import up.god.jooq.tables.interfaces.IAbsProduct;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AbsProductRecord extends UpdatableRecordImpl<AbsProductRecord> implements Record18<Long, BigDecimal, BigDecimal, String, String, String, String, String, String, String, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IAbsProduct {

    private static final long serialVersionUID = 1331169081;

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public AbsProductRecord setPkId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public Long getPkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.D_MK_PRICE</code>. 【市场价】无折扣的商品价格,marketPrice,D_MK_PRICE
     */
    @Override
    public AbsProductRecord setDMkPrice(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.D_MK_PRICE</code>. 【市场价】无折扣的商品价格,marketPrice,D_MK_PRICE
     */
    @Override
    public BigDecimal getDMkPrice() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.D_UT_PRICE</code>. 【单价】商品实际单价（订单运算使用该价格）,unitPrice,D_UT_PRICE
     */
    @Override
    public AbsProductRecord setDUtPrice(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.D_UT_PRICE</code>. 【单价】商品实际单价（订单运算使用该价格）,unitPrice,D_UT_PRICE
     */
    @Override
    public BigDecimal getDUtPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.S_NAME</code>. name,S_NAME
     */
    @Override
    public AbsProductRecord setSName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.S_NAME</code>. name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.S_CODE</code>. code,S_CODE
     */
    @Override
    public AbsProductRecord setSCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.S_BARCODE</code>. barCode,S_BARCODE
     */
    @Override
    public AbsProductRecord setSBarcode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.S_BARCODE</code>. barCode,S_BARCODE
     */
    @Override
    public String getSBarcode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.S_MANUFACTURER</code>. 制造商,manufacturer,S_MANUFACTURER
     */
    @Override
    public AbsProductRecord setSManufacturer(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.S_MANUFACTURER</code>. 制造商,manufacturer,S_MANUFACTURER
     */
    @Override
    public String getSManufacturer() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.S_SERIAL</code>. serial,S_SERIAL
     */
    @Override
    public AbsProductRecord setSSerial(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.S_SERIAL</code>. serial,S_SERIAL
     */
    @Override
    public String getSSerial() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public AbsProductRecord setJConfig(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.H_CAT_ID</code>. category,H_CAT_ID
     */
    @Override
    public AbsProductRecord setHCatId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.H_CAT_ID</code>. category,H_CAT_ID
     */
    @Override
    public String getHCatId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.R_BRAND_ID</code>. brandId,R_BRAND_ID
     */
    @Override
    public AbsProductRecord setRBrandId(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.R_BRAND_ID</code>. brandId,R_BRAND_ID
     */
    @Override
    public Long getRBrandId() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public AbsProductRecord setIsActive(Boolean value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public AbsProductRecord setZSigma(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public AbsProductRecord setZLanguage(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public AbsProductRecord setZCreateBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public AbsProductRecord setZCreateTime(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public AbsProductRecord setZUpdateBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_HTL.ABS_PRODUCT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public AbsProductRecord setZUpdateTime(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.ABS_PRODUCT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Long, BigDecimal, BigDecimal, String, String, String, String, String, String, String, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Long, BigDecimal, BigDecimal, String, String, String, String, String, String, String, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return AbsProduct.ABS_PRODUCT.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field2() {
        return AbsProduct.ABS_PRODUCT.D_MK_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return AbsProduct.ABS_PRODUCT.D_UT_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return AbsProduct.ABS_PRODUCT.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return AbsProduct.ABS_PRODUCT.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return AbsProduct.ABS_PRODUCT.S_BARCODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return AbsProduct.ABS_PRODUCT.S_MANUFACTURER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return AbsProduct.ABS_PRODUCT.S_SERIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return AbsProduct.ABS_PRODUCT.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return AbsProduct.ABS_PRODUCT.H_CAT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return AbsProduct.ABS_PRODUCT.R_BRAND_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field12() {
        return AbsProduct.ABS_PRODUCT.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return AbsProduct.ABS_PRODUCT.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return AbsProduct.ABS_PRODUCT.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return AbsProduct.ABS_PRODUCT.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field16() {
        return AbsProduct.ABS_PRODUCT.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return AbsProduct.ABS_PRODUCT.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field18() {
        return AbsProduct.ABS_PRODUCT.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component2() {
        return getDMkPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getDUtPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSBarcode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getSManufacturer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSSerial();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getHCatId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getRBrandId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component12() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component16() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component18() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value2() {
        return getDMkPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getDUtPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSBarcode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getSManufacturer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSSerial();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getHCatId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getRBrandId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value12() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value16() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value18() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value1(Long value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value2(BigDecimal value) {
        setDMkPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value3(BigDecimal value) {
        setDUtPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value4(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value5(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value6(String value) {
        setSBarcode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value7(String value) {
        setSManufacturer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value8(String value) {
        setSSerial(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value9(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value10(String value) {
        setHCatId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value11(Long value) {
        setRBrandId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value12(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value13(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value14(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value15(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value16(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value17(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord value18(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsProductRecord values(Long value1, BigDecimal value2, BigDecimal value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, Long value11, Boolean value12, String value13, String value14, String value15, LocalDateTime value16, String value17, LocalDateTime value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IAbsProduct from) {
        setPkId(from.getPkId());
        setDMkPrice(from.getDMkPrice());
        setDUtPrice(from.getDUtPrice());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSBarcode(from.getSBarcode());
        setSManufacturer(from.getSManufacturer());
        setSSerial(from.getSSerial());
        setJConfig(from.getJConfig());
        setHCatId(from.getHCatId());
        setRBrandId(from.getRBrandId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IAbsProduct> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AbsProductRecord
     */
    public AbsProductRecord() {
        super(AbsProduct.ABS_PRODUCT);
    }

    /**
     * Create a detached, initialised AbsProductRecord
     */
    public AbsProductRecord(Long pkId, BigDecimal dMkPrice, BigDecimal dUtPrice, String sName, String sCode, String sBarcode, String sManufacturer, String sSerial, String jConfig, String hCatId, Long rBrandId, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(AbsProduct.ABS_PRODUCT);

        set(0, pkId);
        set(1, dMkPrice);
        set(2, dUtPrice);
        set(3, sName);
        set(4, sCode);
        set(5, sBarcode);
        set(6, sManufacturer);
        set(7, sSerial);
        set(8, jConfig);
        set(9, hCatId);
        set(10, rBrandId);
        set(11, isActive);
        set(12, zSigma);
        set(13, zLanguage);
        set(14, zCreateBy);
        set(15, zCreateTime);
        set(16, zUpdateBy);
        set(17, zUpdateTime);
    }
}
