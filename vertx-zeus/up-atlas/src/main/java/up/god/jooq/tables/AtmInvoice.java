/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.AtmInvoiceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AtmInvoice extends TableImpl<AtmInvoiceRecord> {

    private static final long serialVersionUID = 624112491;

    /**
     * The reference instance of <code>DB_HTL.ATM_INVOICE</code>
     */
    public static final AtmInvoice ATM_INVOICE = new AtmInvoice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AtmInvoiceRecord> getRecordType() {
        return AtmInvoiceRecord.class;
    }

    /**
     * The column <code>DB_HTL.ATM_INVOICE.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<AtmInvoiceRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.D_PRICE</code>. 【发票价格】,price,D_PRICE
     */
    public final TableField<AtmInvoiceRecord, BigDecimal> D_PRICE = createField("D_PRICE", org.jooq.impl.SQLDataType.DECIMAL(8, 2).nullable(false), this, "【发票价格】,price,D_PRICE");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.T_COMMENT</code>. 【备注】发票备注信息,comment,T_COMMENT
     */
    public final TableField<AtmInvoiceRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "【备注】发票备注信息,comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.S_CODE</code>. code,S_CODE
     */
    public final TableField<AtmInvoiceRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.S_INVOICE_SERIAL</code>. REF: SYS_NUMBER【发票编号】系统自动生成,serial,S_INVOICE_SERIAL
     */
    public final TableField<AtmInvoiceRecord, String> S_INVOICE_SERIAL = createField("S_INVOICE_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "REF: SYS_NUMBER【发票编号】系统自动生成,serial,S_INVOICE_SERIAL");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.S_INVOICE_TITLE</code>. 【发票抬头】,invoiceTitle,S_INVOICE_TITLE
     */
    public final TableField<AtmInvoiceRecord, String> S_INVOICE_TITLE = createField("S_INVOICE_TITLE", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "【发票抬头】,invoiceTitle,S_INVOICE_TITLE");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<AtmInvoiceRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.RLT_INVOICE_TYPE</code>. REF: SYS_TABULAR【发票类型】,invoiceType,RLT_INVOICE_TYPE
     */
    public final TableField<AtmInvoiceRecord, Long> RLT_INVOICE_TYPE = createField("RLT_INVOICE_TYPE", org.jooq.impl.SQLDataType.BIGINT, this, "REF: SYS_TABULAR【发票类型】,invoiceType,RLT_INVOICE_TYPE");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.R_ORDER_ID</code>. REF: ABS_ORDERS【发票对应订单ID】该发票关联订单ID,orderId,R_ORDER_ID
     */
    public final TableField<AtmInvoiceRecord, Long> R_ORDER_ID = createField("R_ORDER_ID", org.jooq.impl.SQLDataType.BIGINT, this, "REF: ABS_ORDERS【发票对应订单ID】该发票关联订单ID,orderId,R_ORDER_ID");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.IS_PERSONAL</code>. 【个人发票】是否个人发票？,personal,IS_PERSONAL
     */
    public final TableField<AtmInvoiceRecord, Boolean> IS_PERSONAL = createField("IS_PERSONAL", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "【个人发票】是否个人发票？,personal,IS_PERSONAL");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<AtmInvoiceRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<AtmInvoiceRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<AtmInvoiceRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<AtmInvoiceRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<AtmInvoiceRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<AtmInvoiceRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.ATM_INVOICE.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<AtmInvoiceRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.ATM_INVOICE</code> table reference
     */
    public AtmInvoice() {
        this(DSL.name("ATM_INVOICE"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.ATM_INVOICE</code> table reference
     */
    public AtmInvoice(String alias) {
        this(DSL.name(alias), ATM_INVOICE);
    }

    /**
     * Create an aliased <code>DB_HTL.ATM_INVOICE</code> table reference
     */
    public AtmInvoice(Name alias) {
        this(alias, ATM_INVOICE);
    }

    private AtmInvoice(Name alias, Table<AtmInvoiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private AtmInvoice(Name alias, Table<AtmInvoiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ATM_INVOICE_FK_ATM_INVOICE_R_ORDER_ID, Indexes.ATM_INVOICE_PRIMARY, Indexes.ATM_INVOICE_UK_ATM_INVOICE_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AtmInvoiceRecord> getPrimaryKey() {
        return Keys.KEY_ATM_INVOICE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AtmInvoiceRecord>> getKeys() {
        return Arrays.<UniqueKey<AtmInvoiceRecord>>asList(Keys.KEY_ATM_INVOICE_PRIMARY, Keys.KEY_ATM_INVOICE_UK_ATM_INVOICE_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AtmInvoice as(String alias) {
        return new AtmInvoice(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AtmInvoice as(Name alias) {
        return new AtmInvoice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AtmInvoice rename(String name) {
        return new AtmInvoice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AtmInvoice rename(Name name) {
        return new AtmInvoice(name, null);
    }
}
