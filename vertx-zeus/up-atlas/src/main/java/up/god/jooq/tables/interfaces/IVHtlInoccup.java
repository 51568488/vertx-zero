/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IVHtlInoccup extends Serializable {

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.PK_ID</code>. uniqueId,PK_ID
     */
    public IVHtlInoccup setPkId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.PK_ID</code>. uniqueId,PK_ID
     */
    public Long getPkId();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_SERIAL</code>. serial,S_SERIAL
     */
    public IVHtlInoccup setSSerial(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_SERIAL</code>. serial,S_SERIAL
     */
    public String getSSerial();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_ITEM_SERIAL</code>. REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL
     */
    public IVHtlInoccup setSItemSerial(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_ITEM_SERIAL</code>. REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL
     */
    public String getSItemSerial();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_ORDER_SERIAL</code>. serial,S_SERIAL
     */
    public IVHtlInoccup setSOrderSerial(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_ORDER_SERIAL</code>. serial,S_SERIAL
     */
    public String getSOrderSerial();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_ORDER_ID</code>. uniqueId,PK_ID
     */
    public IVHtlInoccup setSOrderId(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_ORDER_ID</code>. uniqueId,PK_ID
     */
    public String getSOrderId();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_ORDER_CAT</code>. cat,RLT_ORD_CATEGORY
     */
    public IVHtlInoccup setSOrderCat(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_ORDER_CAT</code>. cat,RLT_ORD_CATEGORY
     */
    public Long getSOrderCat();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public IVHtlInoccup setRHotelId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public Long getRHotelId();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_ROOM_NUM</code>. roomNumber,S_ROOM_NUM
     */
    public IVHtlInoccup setSRoomNum(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_ROOM_NUM</code>. roomNumber,S_ROOM_NUM
     */
    public String getSRoomNum();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.I_RCOUNTER</code>. roomCounter,I_RCOUNTER
     */
    public IVHtlInoccup setIRcounter(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.I_RCOUNTER</code>. roomCounter,I_RCOUNTER
     */
    public Integer getIRcounter();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.I_QUANTITY</code>. 【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY
     */
    public IVHtlInoccup setIQuantity(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.I_QUANTITY</code>. 【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY
     */
    public Integer getIQuantity();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.D_ARRIVE_TIME</code>. arriveTime,D_ARRIVE_TIME
     */
    public IVHtlInoccup setDArriveTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.D_ARRIVE_TIME</code>. arriveTime,D_ARRIVE_TIME
     */
    public LocalDateTime getDArriveTime();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.D_LEAVE_TIME</code>. leaveTime,D_LEAVE_TIME
     */
    public IVHtlInoccup setDLeaveTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.D_LEAVE_TIME</code>. leaveTime,D_LEAVE_TIME
     */
    public LocalDateTime getDLeaveTime();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.D_ORDER_TIME</code>. 【订单时间】下订/制单时间。,orderTime,D_ORDER_TIME
     */
    public IVHtlInoccup setDOrderTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.D_ORDER_TIME</code>. 【订单时间】下订/制单时间。,orderTime,D_ORDER_TIME
     */
    public LocalDateTime getDOrderTime();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.R_OITEM_ID</code>. oitemId,R_OITEM_ID
     */
    public IVHtlInoccup setROitemId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.R_OITEM_ID</code>. oitemId,R_OITEM_ID
     */
    public Long getROitemId();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_OPERATOR</code>. operator,S_OPERATOR
     */
    public IVHtlInoccup setSOperator(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_OPERATOR</code>. operator,S_OPERATOR
     */
    public String getSOperator();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_PRESERVOR</code>. preservor,S_PRESERVOR
     */
    public IVHtlInoccup setSPreservor(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_PRESERVOR</code>. preservor,S_PRESERVOR
     */
    public String getSPreservor();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_STATUS</code>. orderStatus,S_STATUS
     */
    public IVHtlInoccup setSStatus(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_STATUS</code>. orderStatus,S_STATUS
     */
    public String getSStatus();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_SURETY</code>. 担保人,surety,S_SURETY
     */
    public IVHtlInoccup setSSurety(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_SURETY</code>. 担保人,surety,S_SURETY
     */
    public String getSSurety();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_GROUP_LEADER</code>. groupLeader,S_GROUP_LEADER
     */
    public IVHtlInoccup setSGroupLeader(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_GROUP_LEADER</code>. groupLeader,S_GROUP_LEADER
     */
    public String getSGroupLeader();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_GROUP_NAME</code>. groupName,S_GROUP_NAME
     */
    public IVHtlInoccup setSGroupName(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_GROUP_NAME</code>. groupName,S_GROUP_NAME
     */
    public String getSGroupName();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.RLT_CODE_SOURCE</code>. codeSource,RLT_CODE_SOURCE
     */
    public IVHtlInoccup setRltCodeSource(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.RLT_CODE_SOURCE</code>. codeSource,RLT_CODE_SOURCE
     */
    public Long getRltCodeSource();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.RLT_CODE_MARKET</code>. codeMarket,RLT_CODE_MARKET
     */
    public IVHtlInoccup setRltCodeMarket(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.RLT_CODE_MARKET</code>. codeMarket,RLT_CODE_MARKET
     */
    public Long getRltCodeMarket();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.RLT_ORD_METHOD</code>. method,RLT_ORD_METHOD
     */
    public IVHtlInoccup setRltOrdMethod(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.RLT_ORD_METHOD</code>. method,RLT_ORD_METHOD
     */
    public Long getRltOrdMethod();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.RLT_SURETY_TYPE</code>. suretyType,RLT_SURETY_TYPE
     */
    public IVHtlInoccup setRltSuretyType(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.RLT_SURETY_TYPE</code>. suretyType,RLT_SURETY_TYPE
     */
    public Long getRltSuretyType();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_MEMBER</code>. member,S_MEMBER
     */
    public IVHtlInoccup setSMember(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_MEMBER</code>. member,S_MEMBER
     */
    public String getSMember();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.D_AMOUNT</code>. 【会员卡卡余额】（ReadOnly固定值）。,amount,D_AMOUNT
     */
    public IVHtlInoccup setDAmount(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.D_AMOUNT</code>. 【会员卡卡余额】（ReadOnly固定值）。,amount,D_AMOUNT
     */
    public BigDecimal getDAmount();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_PARTNER</code>. partner,S_PARTNER
     */
    public IVHtlInoccup setSPartner(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_PARTNER</code>. partner,S_PARTNER
     */
    public String getSPartner();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_CREATOR</code>. creator,S_CREATOR
     */
    public IVHtlInoccup setSCreator(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_CREATOR</code>. creator,S_CREATOR
     */
    public String getSCreator();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.I_INSIDE_DAYS</code>. insideDays,I_INSIDE_DAYS
     */
    public IVHtlInoccup setIInsideDays(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.I_INSIDE_DAYS</code>. insideDays,I_INSIDE_DAYS
     */
    public Integer getIInsideDays();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.I_INSIDE_PERSONS</code>. insidePersons,I_INSIDE_PERSONS
     */
    public IVHtlInoccup setIInsidePersons(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.I_INSIDE_PERSONS</code>. insidePersons,I_INSIDE_PERSONS
     */
    public Integer getIInsidePersons();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.D_AMOUNT_ACTUAL</code>. 【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL
     */
    public IVHtlInoccup setDAmountActual(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.D_AMOUNT_ACTUAL</code>. 【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL
     */
    public BigDecimal getDAmountActual();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.D_AMOUNT_PRICE</code>. 【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE
     */
    public IVHtlInoccup setDAmountPrice(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.D_AMOUNT_PRICE</code>. 【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE
     */
    public BigDecimal getDAmountPrice();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.IS_BREKKER</code>. brekker,IS_BREKKER
     */
    public IVHtlInoccup setIsBrekker(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.IS_BREKKER</code>. brekker,IS_BREKKER
     */
    public Boolean getIsBrekker();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.R_CODE_GROUP_ID</code>. codeGroup,R_CODE_GROUP_ID
     */
    public IVHtlInoccup setRCodeGroupId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.R_CODE_GROUP_ID</code>. codeGroup,R_CODE_GROUP_ID
     */
    public Long getRCodeGroupId();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.R_CODE_COMMISSION_ID</code>. codeCommission,R_CODE_COMMISSION_ID
     */
    public IVHtlInoccup setRCodeCommissionId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.R_CODE_COMMISSION_ID</code>. codeCommission,R_CODE_COMMISSION_ID
     */
    public Long getRCodeCommissionId();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.I_INOCCUP</code>. inoccup,I_INOCCUP
     */
    public IVHtlInoccup setIInoccup(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.I_INOCCUP</code>. inoccup,I_INOCCUP
     */
    public Integer getIInoccup();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.I_PERSON</code>. person,I_PERSON
     */
    public IVHtlInoccup setIPerson(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.I_PERSON</code>. person,I_PERSON
     */
    public Integer getIPerson();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.R_ROOM_TYPE_ID</code>. roomTypeId,R_ROOM_TYPE_ID
     */
    public IVHtlInoccup setRRoomTypeId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.R_ROOM_TYPE_ID</code>. roomTypeId,R_ROOM_TYPE_ID
     */
    public Long getRRoomTypeId();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.S_CONTACT</code>. 【预定电话】该订单预定人联系电话,phone,S_PHONE
     */
    public IVHtlInoccup setSContact(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.S_CONTACT</code>. 【预定电话】该订单预定人联系电话,phone,S_PHONE
     */
    public String getSContact();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.J_CONFIG</code>. config,J_CONFIG
     */
    public IVHtlInoccup setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IVHtlInoccup setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.v_htl_inoccup.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IVHtlInoccup setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_htl_inoccup.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IVHtlInoccup
     */
    public void from(up.god.jooq.tables.interfaces.IVHtlInoccup from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IVHtlInoccup
     */
    public <E extends up.god.jooq.tables.interfaces.IVHtlInoccup> E into(E into);

    default IVHtlInoccup fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getLong("PK_ID"));
        setSSerial(json.getString("S_SERIAL"));
        setSItemSerial(json.getString("S_ITEM_SERIAL"));
        setSOrderSerial(json.getString("S_ORDER_SERIAL"));
        setSOrderId(json.getString("S_ORDER_ID"));
        setSOrderCat(json.getLong("S_ORDER_CAT"));
        setRHotelId(json.getLong("R_HOTEL_ID"));
        setSRoomNum(json.getString("S_ROOM_NUM"));
        setIRcounter(json.getInteger("I_RCOUNTER"));
        setIQuantity(json.getInteger("I_QUANTITY"));
        // Omitting unrecognized type java.time.LocalDateTime for column D_ARRIVE_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column D_LEAVE_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column D_ORDER_TIME!
        setROitemId(json.getLong("R_OITEM_ID"));
        setSOperator(json.getString("S_OPERATOR"));
        setSPreservor(json.getString("S_PRESERVOR"));
        setSStatus(json.getString("S_STATUS"));
        setSSurety(json.getString("S_SURETY"));
        setSGroupLeader(json.getString("S_GROUP_LEADER"));
        setSGroupName(json.getString("S_GROUP_NAME"));
        setRltCodeSource(json.getLong("RLT_CODE_SOURCE"));
        setRltCodeMarket(json.getLong("RLT_CODE_MARKET"));
        setRltOrdMethod(json.getLong("RLT_ORD_METHOD"));
        setRltSuretyType(json.getLong("RLT_SURETY_TYPE"));
        setSMember(json.getString("S_MEMBER"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT!
        setSPartner(json.getString("S_PARTNER"));
        setSCreator(json.getString("S_CREATOR"));
        setIInsideDays(json.getInteger("I_INSIDE_DAYS"));
        setIInsidePersons(json.getInteger("I_INSIDE_PERSONS"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_PRICE!
        setIsBrekker(json.getBoolean("IS_BREKKER"));
        setRCodeGroupId(json.getLong("R_CODE_GROUP_ID"));
        setRCodeCommissionId(json.getLong("R_CODE_COMMISSION_ID"));
        setIInoccup(json.getInteger("I_INOCCUP"));
        setIPerson(json.getInteger("I_PERSON"));
        setRRoomTypeId(json.getLong("R_ROOM_TYPE_ID"));
        setSContact(json.getString("S_CONTACT"));
        setJConfig(json.getString("J_CONFIG"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("S_SERIAL",getSSerial());
        json.put("S_ITEM_SERIAL",getSItemSerial());
        json.put("S_ORDER_SERIAL",getSOrderSerial());
        json.put("S_ORDER_ID",getSOrderId());
        json.put("S_ORDER_CAT",getSOrderCat());
        json.put("R_HOTEL_ID",getRHotelId());
        json.put("S_ROOM_NUM",getSRoomNum());
        json.put("I_RCOUNTER",getIRcounter());
        json.put("I_QUANTITY",getIQuantity());
        // Omitting unrecognized type java.time.LocalDateTime for column D_ARRIVE_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column D_LEAVE_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column D_ORDER_TIME!
        json.put("R_OITEM_ID",getROitemId());
        json.put("S_OPERATOR",getSOperator());
        json.put("S_PRESERVOR",getSPreservor());
        json.put("S_STATUS",getSStatus());
        json.put("S_SURETY",getSSurety());
        json.put("S_GROUP_LEADER",getSGroupLeader());
        json.put("S_GROUP_NAME",getSGroupName());
        json.put("RLT_CODE_SOURCE",getRltCodeSource());
        json.put("RLT_CODE_MARKET",getRltCodeMarket());
        json.put("RLT_ORD_METHOD",getRltOrdMethod());
        json.put("RLT_SURETY_TYPE",getRltSuretyType());
        json.put("S_MEMBER",getSMember());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT!
        json.put("S_PARTNER",getSPartner());
        json.put("S_CREATOR",getSCreator());
        json.put("I_INSIDE_DAYS",getIInsideDays());
        json.put("I_INSIDE_PERSONS",getIInsidePersons());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_PRICE!
        json.put("IS_BREKKER",getIsBrekker());
        json.put("R_CODE_GROUP_ID",getRCodeGroupId());
        json.put("R_CODE_COMMISSION_ID",getRCodeCommissionId());
        json.put("I_INOCCUP",getIInoccup());
        json.put("I_PERSON",getIPerson());
        json.put("R_ROOM_TYPE_ID",getRRoomTypeId());
        json.put("S_CONTACT",getSContact());
        json.put("J_CONFIG",getJConfig());
        json.put("Z_LANGUAGE",getZLanguage());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        return json;
    }

}
