/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.SecRelUserGroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecRelUserGroup extends TableImpl<SecRelUserGroupRecord> {

    private static final long serialVersionUID = 2063549871;

    /**
     * The reference instance of <code>DB_HTL.SEC_REL_USER_GROUP</code>
     */
    public static final SecRelUserGroup SEC_REL_USER_GROUP = new SecRelUserGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SecRelUserGroupRecord> getRecordType() {
        return SecRelUserGroupRecord.class;
    }

    /**
     * The column <code>DB_HTL.SEC_REL_USER_GROUP.R_GROUP_ID</code>. groupId,R_GROUP_ID
     */
    public final TableField<SecRelUserGroupRecord, String> R_GROUP_ID = createField("R_GROUP_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "groupId,R_GROUP_ID");

    /**
     * The column <code>DB_HTL.SEC_REL_USER_GROUP.R_USER_ID</code>. userId,R_USER_ID
     */
    public final TableField<SecRelUserGroupRecord, String> R_USER_ID = createField("R_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "userId,R_USER_ID");

    /**
     * Create a <code>DB_HTL.SEC_REL_USER_GROUP</code> table reference
     */
    public SecRelUserGroup() {
        this(DSL.name("SEC_REL_USER_GROUP"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.SEC_REL_USER_GROUP</code> table reference
     */
    public SecRelUserGroup(String alias) {
        this(DSL.name(alias), SEC_REL_USER_GROUP);
    }

    /**
     * Create an aliased <code>DB_HTL.SEC_REL_USER_GROUP</code> table reference
     */
    public SecRelUserGroup(Name alias) {
        this(alias, SEC_REL_USER_GROUP);
    }

    private SecRelUserGroup(Name alias, Table<SecRelUserGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private SecRelUserGroup(Name alias, Table<SecRelUserGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SEC_REL_USER_GROUP_FK_SEC_REL_UG_GROUP, Indexes.SEC_REL_USER_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SecRelUserGroupRecord> getPrimaryKey() {
        return Keys.KEY_SEC_REL_USER_GROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SecRelUserGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<SecRelUserGroupRecord>>asList(Keys.KEY_SEC_REL_USER_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecRelUserGroup as(String alias) {
        return new SecRelUserGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecRelUserGroup as(Name alias) {
        return new SecRelUserGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SecRelUserGroup rename(String name) {
        return new SecRelUserGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SecRelUserGroup rename(Name name) {
        return new SecRelUserGroup(name, null);
    }
}
