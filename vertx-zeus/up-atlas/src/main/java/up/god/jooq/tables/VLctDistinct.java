/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VLctDistinctRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VLctDistinct extends TableImpl<VLctDistinctRecord> {

    private static final long serialVersionUID = 1063307839;

    /**
     * The reference instance of <code>DB_HTL.v_lct_distinct</code>
     */
    public static final VLctDistinct V_LCT_DISTINCT = new VLctDistinct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VLctDistinctRecord> getRecordType() {
        return VLctDistinctRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_lct_distinct.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VLctDistinctRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_lct_distinct.S_NAME</code>. 名称,name,S_NAME
     */
    public final TableField<VLctDistinctRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "名称,name,S_NAME");

    /**
     * The column <code>DB_HTL.v_lct_distinct.I_ORDER</code>. 区域排序,order,I_ORDER
     */
    public final TableField<VLctDistinctRecord, Integer> I_ORDER = createField("I_ORDER", org.jooq.impl.SQLDataType.INTEGER, this, "区域排序,order,I_ORDER");

    /**
     * The column <code>DB_HTL.v_lct_distinct.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<VLctDistinctRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.v_lct_distinct.R_CITY_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VLctDistinctRecord, Long> R_CITY_ID = createField("R_CITY_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_lct_distinct.S_CITY_NAME</code>. 城市名,name,S_NAME
     */
    public final TableField<VLctDistinctRecord, String> S_CITY_NAME = createField("S_CITY_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "城市名,name,S_NAME");

    /**
     * The column <code>DB_HTL.v_lct_distinct.R_STATE_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VLctDistinctRecord, Long> R_STATE_ID = createField("R_STATE_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_lct_distinct.S_STATE_NAME</code>. 全名,name,S_NAME
     */
    public final TableField<VLctDistinctRecord, String> S_STATE_NAME = createField("S_STATE_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "全名,name,S_NAME");

    /**
     * The column <code>DB_HTL.v_lct_distinct.R_COUNTRY_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VLctDistinctRecord, Long> R_COUNTRY_ID = createField("R_COUNTRY_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_lct_distinct.S_COUNTRY_NAME</code>. 国家名称,name,S_NAME
     */
    public final TableField<VLctDistinctRecord, String> S_COUNTRY_NAME = createField("S_COUNTRY_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "国家名称,name,S_NAME");

    /**
     * Create a <code>DB_HTL.v_lct_distinct</code> table reference
     */
    public VLctDistinct() {
        this(DSL.name("v_lct_distinct"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_lct_distinct</code> table reference
     */
    public VLctDistinct(String alias) {
        this(DSL.name(alias), V_LCT_DISTINCT);
    }

    /**
     * Create an aliased <code>DB_HTL.v_lct_distinct</code> table reference
     */
    public VLctDistinct(Name alias) {
        this(alias, V_LCT_DISTINCT);
    }

    private VLctDistinct(Name alias, Table<VLctDistinctRecord> aliased) {
        this(alias, aliased, null);
    }

    private VLctDistinct(Name alias, Table<VLctDistinctRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VLctDistinct as(String alias) {
        return new VLctDistinct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VLctDistinct as(Name alias) {
        return new VLctDistinct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VLctDistinct rename(String name) {
        return new VLctDistinct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VLctDistinct rename(Name name) {
        return new VLctDistinct(name, null);
    }
}
