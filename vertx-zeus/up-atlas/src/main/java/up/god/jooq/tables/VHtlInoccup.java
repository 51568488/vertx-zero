/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VHtlInoccupRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VHtlInoccup extends TableImpl<VHtlInoccupRecord> {

    private static final long serialVersionUID = 1527839235;

    /**
     * The reference instance of <code>DB_HTL.v_htl_inoccup</code>
     */
    public static final VHtlInoccup V_HTL_INOCCUP = new VHtlInoccup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VHtlInoccupRecord> getRecordType() {
        return VHtlInoccupRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_htl_inoccup.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlInoccupRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_SERIAL</code>. serial,S_SERIAL
     */
    public final TableField<VHtlInoccupRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_ITEM_SERIAL</code>. REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL
     */
    public final TableField<VHtlInoccupRecord, String> S_ITEM_SERIAL = createField("S_ITEM_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_ORDER_SERIAL</code>. serial,S_SERIAL
     */
    public final TableField<VHtlInoccupRecord, String> S_ORDER_SERIAL = createField("S_ORDER_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_ORDER_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlInoccupRecord, String> S_ORDER_ID = createField("S_ORDER_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_ORDER_CAT</code>. cat,RLT_ORD_CATEGORY
     */
    public final TableField<VHtlInoccupRecord, Long> S_ORDER_CAT = createField("S_ORDER_CAT", org.jooq.impl.SQLDataType.BIGINT, this, "cat,RLT_ORD_CATEGORY");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public final TableField<VHtlInoccupRecord, Long> R_HOTEL_ID = createField("R_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "hotelId,R_HOTEL_ID");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_ROOM_NUM</code>. roomNumber,S_ROOM_NUM
     */
    public final TableField<VHtlInoccupRecord, String> S_ROOM_NUM = createField("S_ROOM_NUM", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "roomNumber,S_ROOM_NUM");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.I_RCOUNTER</code>. roomCounter,I_RCOUNTER
     */
    public final TableField<VHtlInoccupRecord, Integer> I_RCOUNTER = createField("I_RCOUNTER", org.jooq.impl.SQLDataType.INTEGER, this, "roomCounter,I_RCOUNTER");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.I_QUANTITY</code>. 【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY
     */
    public final TableField<VHtlInoccupRecord, Integer> I_QUANTITY = createField("I_QUANTITY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.D_ARRIVE_TIME</code>. arriveTime,D_ARRIVE_TIME
     */
    public final TableField<VHtlInoccupRecord, LocalDateTime> D_ARRIVE_TIME = createField("D_ARRIVE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "arriveTime,D_ARRIVE_TIME");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.D_LEAVE_TIME</code>. leaveTime,D_LEAVE_TIME
     */
    public final TableField<VHtlInoccupRecord, LocalDateTime> D_LEAVE_TIME = createField("D_LEAVE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "leaveTime,D_LEAVE_TIME");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.D_ORDER_TIME</code>. 【订单时间】下订/制单时间。,orderTime,D_ORDER_TIME
     */
    public final TableField<VHtlInoccupRecord, LocalDateTime> D_ORDER_TIME = createField("D_ORDER_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "【订单时间】下订/制单时间。,orderTime,D_ORDER_TIME");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.R_OITEM_ID</code>. oitemId,R_OITEM_ID
     */
    public final TableField<VHtlInoccupRecord, Long> R_OITEM_ID = createField("R_OITEM_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "oitemId,R_OITEM_ID");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_OPERATOR</code>. operator,S_OPERATOR
     */
    public final TableField<VHtlInoccupRecord, String> S_OPERATOR = createField("S_OPERATOR", org.jooq.impl.SQLDataType.VARCHAR(36), this, "operator,S_OPERATOR");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_PRESERVOR</code>. preservor,S_PRESERVOR
     */
    public final TableField<VHtlInoccupRecord, String> S_PRESERVOR = createField("S_PRESERVOR", org.jooq.impl.SQLDataType.VARCHAR(64), this, "preservor,S_PRESERVOR");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_STATUS</code>. orderStatus,S_STATUS
     */
    public final TableField<VHtlInoccupRecord, String> S_STATUS = createField("S_STATUS", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "orderStatus,S_STATUS");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_SURETY</code>. 担保人,surety,S_SURETY
     */
    public final TableField<VHtlInoccupRecord, String> S_SURETY = createField("S_SURETY", org.jooq.impl.SQLDataType.VARCHAR(64), this, "担保人,surety,S_SURETY");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_GROUP_LEADER</code>. groupLeader,S_GROUP_LEADER
     */
    public final TableField<VHtlInoccupRecord, String> S_GROUP_LEADER = createField("S_GROUP_LEADER", org.jooq.impl.SQLDataType.VARCHAR(192), this, "groupLeader,S_GROUP_LEADER");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_GROUP_NAME</code>. groupName,S_GROUP_NAME
     */
    public final TableField<VHtlInoccupRecord, String> S_GROUP_NAME = createField("S_GROUP_NAME", org.jooq.impl.SQLDataType.VARCHAR(192), this, "groupName,S_GROUP_NAME");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.RLT_CODE_SOURCE</code>. codeSource,RLT_CODE_SOURCE
     */
    public final TableField<VHtlInoccupRecord, Long> RLT_CODE_SOURCE = createField("RLT_CODE_SOURCE", org.jooq.impl.SQLDataType.BIGINT, this, "codeSource,RLT_CODE_SOURCE");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.RLT_CODE_MARKET</code>. codeMarket,RLT_CODE_MARKET
     */
    public final TableField<VHtlInoccupRecord, Long> RLT_CODE_MARKET = createField("RLT_CODE_MARKET", org.jooq.impl.SQLDataType.BIGINT, this, "codeMarket,RLT_CODE_MARKET");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.RLT_ORD_METHOD</code>. method,RLT_ORD_METHOD
     */
    public final TableField<VHtlInoccupRecord, Long> RLT_ORD_METHOD = createField("RLT_ORD_METHOD", org.jooq.impl.SQLDataType.BIGINT, this, "method,RLT_ORD_METHOD");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.RLT_SURETY_TYPE</code>. suretyType,RLT_SURETY_TYPE
     */
    public final TableField<VHtlInoccupRecord, Long> RLT_SURETY_TYPE = createField("RLT_SURETY_TYPE", org.jooq.impl.SQLDataType.BIGINT, this, "suretyType,RLT_SURETY_TYPE");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_MEMBER</code>. member,S_MEMBER
     */
    public final TableField<VHtlInoccupRecord, String> S_MEMBER = createField("S_MEMBER", org.jooq.impl.SQLDataType.VARCHAR(255), this, "member,S_MEMBER");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.D_AMOUNT</code>. 【会员卡卡余额】（ReadOnly固定值）。,amount,D_AMOUNT
     */
    public final TableField<VHtlInoccupRecord, BigDecimal> D_AMOUNT = createField("D_AMOUNT", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "【会员卡卡余额】（ReadOnly固定值）。,amount,D_AMOUNT");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_PARTNER</code>. partner,S_PARTNER
     */
    public final TableField<VHtlInoccupRecord, String> S_PARTNER = createField("S_PARTNER", org.jooq.impl.SQLDataType.VARCHAR(255), this, "partner,S_PARTNER");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_CREATOR</code>. creator,S_CREATOR
     */
    public final TableField<VHtlInoccupRecord, String> S_CREATOR = createField("S_CREATOR", org.jooq.impl.SQLDataType.VARCHAR(255), this, "creator,S_CREATOR");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.I_INSIDE_DAYS</code>. insideDays,I_INSIDE_DAYS
     */
    public final TableField<VHtlInoccupRecord, Integer> I_INSIDE_DAYS = createField("I_INSIDE_DAYS", org.jooq.impl.SQLDataType.INTEGER, this, "insideDays,I_INSIDE_DAYS");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.I_INSIDE_PERSONS</code>. insidePersons,I_INSIDE_PERSONS
     */
    public final TableField<VHtlInoccupRecord, Integer> I_INSIDE_PERSONS = createField("I_INSIDE_PERSONS", org.jooq.impl.SQLDataType.INTEGER, this, "insidePersons,I_INSIDE_PERSONS");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.D_AMOUNT_ACTUAL</code>. 【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL
     */
    public final TableField<VHtlInoccupRecord, BigDecimal> D_AMOUNT_ACTUAL = createField("D_AMOUNT_ACTUAL", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.D_AMOUNT_PRICE</code>. 【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE
     */
    public final TableField<VHtlInoccupRecord, BigDecimal> D_AMOUNT_PRICE = createField("D_AMOUNT_PRICE", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.IS_BREKKER</code>. brekker,IS_BREKKER
     */
    public final TableField<VHtlInoccupRecord, Boolean> IS_BREKKER = createField("IS_BREKKER", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "brekker,IS_BREKKER");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.R_CODE_GROUP_ID</code>. codeGroup,R_CODE_GROUP_ID
     */
    public final TableField<VHtlInoccupRecord, Long> R_CODE_GROUP_ID = createField("R_CODE_GROUP_ID", org.jooq.impl.SQLDataType.BIGINT, this, "codeGroup,R_CODE_GROUP_ID");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.R_CODE_COMMISSION_ID</code>. codeCommission,R_CODE_COMMISSION_ID
     */
    public final TableField<VHtlInoccupRecord, Long> R_CODE_COMMISSION_ID = createField("R_CODE_COMMISSION_ID", org.jooq.impl.SQLDataType.BIGINT, this, "codeCommission,R_CODE_COMMISSION_ID");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.I_INOCCUP</code>. inoccup,I_INOCCUP
     */
    public final TableField<VHtlInoccupRecord, Integer> I_INOCCUP = createField("I_INOCCUP", org.jooq.impl.SQLDataType.INTEGER, this, "inoccup,I_INOCCUP");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.I_PERSON</code>. person,I_PERSON
     */
    public final TableField<VHtlInoccupRecord, Integer> I_PERSON = createField("I_PERSON", org.jooq.impl.SQLDataType.INTEGER, this, "person,I_PERSON");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.R_ROOM_TYPE_ID</code>. roomTypeId,R_ROOM_TYPE_ID
     */
    public final TableField<VHtlInoccupRecord, Long> R_ROOM_TYPE_ID = createField("R_ROOM_TYPE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "roomTypeId,R_ROOM_TYPE_ID");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.S_CONTACT</code>. 【预定电话】该订单预定人联系电话,phone,S_PHONE
     */
    public final TableField<VHtlInoccupRecord, String> S_CONTACT = createField("S_CONTACT", org.jooq.impl.SQLDataType.VARCHAR(20), this, "【预定电话】该订单预定人联系电话,phone,S_PHONE");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<VHtlInoccupRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<VHtlInoccupRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.v_htl_inoccup.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<VHtlInoccupRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * Create a <code>DB_HTL.v_htl_inoccup</code> table reference
     */
    public VHtlInoccup() {
        this(DSL.name("v_htl_inoccup"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_inoccup</code> table reference
     */
    public VHtlInoccup(String alias) {
        this(DSL.name(alias), V_HTL_INOCCUP);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_inoccup</code> table reference
     */
    public VHtlInoccup(Name alias) {
        this(alias, V_HTL_INOCCUP);
    }

    private VHtlInoccup(Name alias, Table<VHtlInoccupRecord> aliased) {
        this(alias, aliased, null);
    }

    private VHtlInoccup(Name alias, Table<VHtlInoccupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlInoccup as(String alias) {
        return new VHtlInoccup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlInoccup as(Name alias) {
        return new VHtlInoccup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlInoccup rename(String name) {
        return new VHtlInoccup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlInoccup rename(Name name) {
        return new VHtlInoccup(name, null);
    }
}
