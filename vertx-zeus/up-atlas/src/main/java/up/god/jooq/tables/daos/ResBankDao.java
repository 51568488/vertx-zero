/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.ResBank;
import up.god.jooq.tables.records.ResBankRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResBankDao extends DAOImpl<ResBankRecord, up.god.jooq.tables.pojos.ResBank, Long> implements VertxDAO<up.god.jooq.tables.records.ResBankRecord,up.god.jooq.tables.pojos.ResBank,java.lang.Long> {

    /**
     * Create a new ResBankDao without any configuration
     */
    public ResBankDao() {
        super(ResBank.RES_BANK, up.god.jooq.tables.pojos.ResBank.class);
    }

    /**
     * Create a new ResBankDao with an attached configuration
     */
    public ResBankDao(Configuration configuration) {
        super(ResBank.RES_BANK, up.god.jooq.tables.pojos.ResBank.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(up.god.jooq.tables.pojos.ResBank object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByPkId(Long... values) {
        return fetch(ResBank.RES_BANK.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.ResBank fetchOneByPkId(Long value) {
        return fetchOne(ResBank.RES_BANK.PK_ID, value);
    }

    /**
     * Fetch records that have <code>T_ADDRESS IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByTAddress(String... values) {
        return fetch(ResBank.RES_BANK.T_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByTComment(String... values) {
        return fetch(ResBank.RES_BANK.T_COMMENT, values);
    }

    /**
     * Fetch records that have <code>T_STREET IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByTStreet(String... values) {
        return fetch(ResBank.RES_BANK.T_STREET, values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySName(String... values) {
        return fetch(ResBank.RES_BANK.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySCode(String... values) {
        return fetch(ResBank.RES_BANK.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_BIC IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySBic(String... values) {
        return fetch(ResBank.RES_BANK.S_BIC, values);
    }

    /**
     * Fetch records that have <code>S_CITY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySCity(String... values) {
        return fetch(ResBank.RES_BANK.S_CITY, values);
    }

    /**
     * Fetch records that have <code>S_COUNTRY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySCountry(String... values) {
        return fetch(ResBank.RES_BANK.S_COUNTRY, values);
    }

    /**
     * Fetch records that have <code>S_DISTINCT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySDistinct(String... values) {
        return fetch(ResBank.RES_BANK.S_DISTINCT, values);
    }

    /**
     * Fetch records that have <code>S_EMAIL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySEmail(String... values) {
        return fetch(ResBank.RES_BANK.S_EMAIL, values);
    }

    /**
     * Fetch records that have <code>S_FAX IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySFax(String... values) {
        return fetch(ResBank.RES_BANK.S_FAX, values);
    }

    /**
     * Fetch records that have <code>S_PHONE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySPhone(String... values) {
        return fetch(ResBank.RES_BANK.S_PHONE, values);
    }

    /**
     * Fetch records that have <code>S_STATE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySState(String... values) {
        return fetch(ResBank.RES_BANK.S_STATE, values);
    }

    /**
     * Fetch records that have <code>S_ZIP IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchBySZip(String... values) {
        return fetch(ResBank.RES_BANK.S_ZIP, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByJConfig(String... values) {
        return fetch(ResBank.RES_BANK.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByIsActive(Boolean... values) {
        return fetch(ResBank.RES_BANK.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByZSigma(String... values) {
        return fetch(ResBank.RES_BANK.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByZLanguage(String... values) {
        return fetch(ResBank.RES_BANK.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByZCreateBy(String... values) {
        return fetch(ResBank.RES_BANK.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(ResBank.RES_BANK.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByZUpdateBy(String... values) {
        return fetch(ResBank.RES_BANK.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBank> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(ResBank.RES_BANK.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByPkIdAsync(List<Long> values) {
        return fetchAsync(ResBank.RES_BANK.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.ResBank> fetchOneByPkIdAsync(Long value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>T_ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByTAddressAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.T_ADDRESS,values);
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByTCommentAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.T_COMMENT,values);
    }

    /**
     * Fetch records that have <code>T_STREET IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByTStreetAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.T_STREET,values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySNameAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_NAME,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_BIC IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySBicAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_BIC,values);
    }

    /**
     * Fetch records that have <code>S_CITY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySCityAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_CITY,values);
    }

    /**
     * Fetch records that have <code>S_COUNTRY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySCountryAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_COUNTRY,values);
    }

    /**
     * Fetch records that have <code>S_DISTINCT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySDistinctAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_DISTINCT,values);
    }

    /**
     * Fetch records that have <code>S_EMAIL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySEmailAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_EMAIL,values);
    }

    /**
     * Fetch records that have <code>S_FAX IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySFaxAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_FAX,values);
    }

    /**
     * Fetch records that have <code>S_PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySPhoneAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_PHONE,values);
    }

    /**
     * Fetch records that have <code>S_STATE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySStateAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_STATE,values);
    }

    /**
     * Fetch records that have <code>S_ZIP IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchBySZipAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.S_ZIP,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(ResBank.RES_BANK.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(ResBank.RES_BANK.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(ResBank.RES_BANK.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBank>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(ResBank.RES_BANK.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
