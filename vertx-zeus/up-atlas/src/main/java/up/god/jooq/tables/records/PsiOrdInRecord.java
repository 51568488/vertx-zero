/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.PsiOrdIn;
import up.god.jooq.tables.interfaces.IPsiOrdIn;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsiOrdInRecord extends UpdatableRecordImpl<PsiOrdInRecord> implements Record18<String, String, String, String, String, String, String, String, String, Long, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IPsiOrdIn {

    private static final long serialVersionUID = -412816435;

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public PsiOrdInRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.T_COMMENT</code>. comment,T_COMMENT
     */
    @Override
    public PsiOrdInRecord setTComment(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.T_COMMENT</code>. comment,T_COMMENT
     */
    @Override
    public String getTComment() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.S_NAME</code>. name,S_NAME
     */
    @Override
    public PsiOrdInRecord setSName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.S_NAME</code>. name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.S_CODE</code>. code,S_CODE
     */
    @Override
    public PsiOrdInRecord setSCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.S_GODOWN</code>. 入库人,godown,S_GODOWN
     */
    @Override
    public PsiOrdInRecord setSGodown(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.S_GODOWN</code>. 入库人,godown,S_GODOWN
     */
    @Override
    public String getSGodown() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.S_HANDLER</code>. 处理人,handler,S_HANDLER
     */
    @Override
    public PsiOrdInRecord setSHandler(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.S_HANDLER</code>. 处理人,handler,S_HANDLER
     */
    @Override
    public String getSHandler() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.S_MANAGER</code>. 经理,manager,S_MANAGER
     */
    @Override
    public PsiOrdInRecord setSManager(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.S_MANAGER</code>. 经理,manager,S_MANAGER
     */
    @Override
    public String getSManager() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.S_OPERATOR</code>. 开单人,operator,S_OPERATOR
     */
    @Override
    public PsiOrdInRecord setSOperator(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.S_OPERATOR</code>. 开单人,operator,S_OPERATOR
     */
    @Override
    public String getSOperator() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public PsiOrdInRecord setJConfig(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.R_ORDER_ID</code>. orderId,R_ORDER_ID
     */
    @Override
    public PsiOrdInRecord setROrderId(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.R_ORDER_ID</code>. orderId,R_ORDER_ID
     */
    @Override
    public Long getROrderId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.R_WH_ID</code>. warehouseId,R_WH_ID
     */
    @Override
    public PsiOrdInRecord setRWhId(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.R_WH_ID</code>. warehouseId,R_WH_ID
     */
    @Override
    public Long getRWhId() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public PsiOrdInRecord setIsActive(Boolean value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public PsiOrdInRecord setZSigma(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public PsiOrdInRecord setZLanguage(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public PsiOrdInRecord setZCreateBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public PsiOrdInRecord setZCreateTime(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public PsiOrdInRecord setZUpdateBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_IN.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public PsiOrdInRecord setZUpdateTime(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_IN.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<String, String, String, String, String, String, String, String, String, Long, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<String, String, String, String, String, String, String, String, String, Long, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return PsiOrdIn.PSI_ORD_IN.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PsiOrdIn.PSI_ORD_IN.T_COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PsiOrdIn.PSI_ORD_IN.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return PsiOrdIn.PSI_ORD_IN.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return PsiOrdIn.PSI_ORD_IN.S_GODOWN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return PsiOrdIn.PSI_ORD_IN.S_HANDLER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return PsiOrdIn.PSI_ORD_IN.S_MANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return PsiOrdIn.PSI_ORD_IN.S_OPERATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return PsiOrdIn.PSI_ORD_IN.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return PsiOrdIn.PSI_ORD_IN.R_ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return PsiOrdIn.PSI_ORD_IN.R_WH_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field12() {
        return PsiOrdIn.PSI_ORD_IN.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return PsiOrdIn.PSI_ORD_IN.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return PsiOrdIn.PSI_ORD_IN.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return PsiOrdIn.PSI_ORD_IN.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field16() {
        return PsiOrdIn.PSI_ORD_IN.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return PsiOrdIn.PSI_ORD_IN.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field18() {
        return PsiOrdIn.PSI_ORD_IN.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSGodown();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSHandler();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getSManager();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component10() {
        return getROrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getRWhId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component12() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component16() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component18() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSGodown();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSHandler();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getSManager();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getROrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getRWhId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value12() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value16() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value18() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value2(String value) {
        setTComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value3(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value4(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value5(String value) {
        setSGodown(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value6(String value) {
        setSHandler(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value7(String value) {
        setSManager(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value8(String value) {
        setSOperator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value9(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value10(Long value) {
        setROrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value11(Long value) {
        setRWhId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value12(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value13(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value14(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value15(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value16(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value17(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord value18(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdInRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, Long value10, Long value11, Boolean value12, String value13, String value14, String value15, LocalDateTime value16, String value17, LocalDateTime value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IPsiOrdIn from) {
        setPkId(from.getPkId());
        setTComment(from.getTComment());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSGodown(from.getSGodown());
        setSHandler(from.getSHandler());
        setSManager(from.getSManager());
        setSOperator(from.getSOperator());
        setJConfig(from.getJConfig());
        setROrderId(from.getROrderId());
        setRWhId(from.getRWhId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IPsiOrdIn> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PsiOrdInRecord
     */
    public PsiOrdInRecord() {
        super(PsiOrdIn.PSI_ORD_IN);
    }

    /**
     * Create a detached, initialised PsiOrdInRecord
     */
    public PsiOrdInRecord(String pkId, String tComment, String sName, String sCode, String sGodown, String sHandler, String sManager, String sOperator, String jConfig, Long rOrderId, Long rWhId, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(PsiOrdIn.PSI_ORD_IN);

        set(0, pkId);
        set(1, tComment);
        set(2, sName);
        set(3, sCode);
        set(4, sGodown);
        set(5, sHandler);
        set(6, sManager);
        set(7, sOperator);
        set(8, jConfig);
        set(9, rOrderId);
        set(10, rWhId);
        set(11, isActive);
        set(12, zSigma);
        set(13, zLanguage);
        set(14, zCreateBy);
        set(15, zCreateTime);
        set(16, zUpdateBy);
        set(17, zUpdateTime);
    }
}
