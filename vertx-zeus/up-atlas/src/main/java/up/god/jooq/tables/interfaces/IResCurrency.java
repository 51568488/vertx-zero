/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IResCurrency extends Serializable {

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.PK_ID</code>. uniqueId,PK_ID
     */
    public IResCurrency setPkId(Long value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.PK_ID</code>. uniqueId,PK_ID
     */
    public Long getPkId();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.D_ROUND</code>. 货币支持精度，用于货币计算,round,D_ROUND
     */
    public IResCurrency setDRound(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.D_ROUND</code>. 货币支持精度，用于货币计算,round,D_ROUND
     */
    public BigDecimal getDRound();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.S_NAME</code>. 货币名称,name,S_NAME
     */
    public IResCurrency setSName(String value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.S_NAME</code>. 货币名称,name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.S_CODE</code>. code,S_CODE
     */
    public IResCurrency setSCode(String value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.S_SYMBOL</code>. 货币单位符号，如￥或$,symbol,S_SYMBOL
     */
    public IResCurrency setSSymbol(String value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.S_SYMBOL</code>. 货币单位符号，如￥或$,symbol,S_SYMBOL
     */
    public String getSSymbol();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.J_CONFIG</code>. config,J_CONFIG
     */
    public IResCurrency setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.I_NUMBER</code>. 货币号码，ISO 4217,number,I_NUMBER
     */
    public IResCurrency setINumber(Integer value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.I_NUMBER</code>. 货币号码，ISO 4217,number,I_NUMBER
     */
    public Integer getINumber();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IResCurrency setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IResCurrency setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IResCurrency setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IResCurrency setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IResCurrency setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IResCurrency setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.RES_CURRENCY.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IResCurrency setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.RES_CURRENCY.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IResCurrency
     */
    public void from(up.god.jooq.tables.interfaces.IResCurrency from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IResCurrency
     */
    public <E extends up.god.jooq.tables.interfaces.IResCurrency> E into(E into);

    default IResCurrency fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getLong("PK_ID"));
        // Omitting unrecognized type java.math.BigDecimal for column D_ROUND!
        setSName(json.getString("S_NAME"));
        setSCode(json.getString("S_CODE"));
        setSSymbol(json.getString("S_SYMBOL"));
        setJConfig(json.getString("J_CONFIG"));
        setINumber(json.getInteger("I_NUMBER"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        // Omitting unrecognized type java.math.BigDecimal for column D_ROUND!
        json.put("S_NAME",getSName());
        json.put("S_CODE",getSCode());
        json.put("S_SYMBOL",getSSymbol());
        json.put("J_CONFIG",getJConfig());
        json.put("I_NUMBER",getINumber());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
