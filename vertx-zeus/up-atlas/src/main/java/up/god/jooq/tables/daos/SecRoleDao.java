/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.SecRole;
import up.god.jooq.tables.records.SecRoleRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecRoleDao extends DAOImpl<SecRoleRecord, up.god.jooq.tables.pojos.SecRole, String> implements VertxDAO<up.god.jooq.tables.records.SecRoleRecord,up.god.jooq.tables.pojos.SecRole,java.lang.String> {

    /**
     * Create a new SecRoleDao without any configuration
     */
    public SecRoleDao() {
        super(SecRole.SEC_ROLE, up.god.jooq.tables.pojos.SecRole.class);
    }

    /**
     * Create a new SecRoleDao with an attached configuration
     */
    public SecRoleDao(Configuration configuration) {
        super(SecRole.SEC_ROLE, up.god.jooq.tables.pojos.SecRole.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(up.god.jooq.tables.pojos.SecRole object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByPkId(String... values) {
        return fetch(SecRole.SEC_ROLE.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.SecRole fetchOneByPkId(String value) {
        return fetchOne(SecRole.SEC_ROLE.PK_ID, value);
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByTComment(String... values) {
        return fetch(SecRole.SEC_ROLE.T_COMMENT, values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchBySName(String... values) {
        return fetch(SecRole.SEC_ROLE.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchBySCode(String... values) {
        return fetch(SecRole.SEC_ROLE.S_CODE, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByJConfig(String... values) {
        return fetch(SecRole.SEC_ROLE.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>IS_SUPER IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByIsSuper(Boolean... values) {
        return fetch(SecRole.SEC_ROLE.IS_SUPER, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByIsActive(Boolean... values) {
        return fetch(SecRole.SEC_ROLE.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByZSigma(String... values) {
        return fetch(SecRole.SEC_ROLE.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByZLanguage(String... values) {
        return fetch(SecRole.SEC_ROLE.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByZCreateBy(String... values) {
        return fetch(SecRole.SEC_ROLE.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(SecRole.SEC_ROLE.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByZUpdateBy(String... values) {
        return fetch(SecRole.SEC_ROLE.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecRole> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(SecRole.SEC_ROLE.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByPkIdAsync(List<String> values) {
        return fetchAsync(SecRole.SEC_ROLE.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.SecRole> fetchOneByPkIdAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByTCommentAsync(List<String> values) {
        return fetchAsync(SecRole.SEC_ROLE.T_COMMENT,values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchBySNameAsync(List<String> values) {
        return fetchAsync(SecRole.SEC_ROLE.S_NAME,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(SecRole.SEC_ROLE.S_CODE,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(SecRole.SEC_ROLE.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>IS_SUPER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByIsSuperAsync(List<Boolean> values) {
        return fetchAsync(SecRole.SEC_ROLE.IS_SUPER,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(SecRole.SEC_ROLE.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(SecRole.SEC_ROLE.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(SecRole.SEC_ROLE.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(SecRole.SEC_ROLE.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(SecRole.SEC_ROLE.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(SecRole.SEC_ROLE.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecRole>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(SecRole.SEC_ROLE.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
