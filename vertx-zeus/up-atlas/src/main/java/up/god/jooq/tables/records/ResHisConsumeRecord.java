/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.ResHisConsume;
import up.god.jooq.tables.interfaces.IResHisConsume;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResHisConsumeRecord extends UpdatableRecordImpl<ResHisConsumeRecord> implements Record15<String, BigDecimal, LocalDateTime, String, String, String, String, Boolean, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IResHisConsume {

    private static final long serialVersionUID = -1349686051;

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public ResHisConsumeRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.D_AMOUNT</code>. amount,D_AMOUNT
     */
    @Override
    public ResHisConsumeRecord setDAmount(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.D_AMOUNT</code>. amount,D_AMOUNT
     */
    @Override
    public BigDecimal getDAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.D_CONSUME_TIME</code>. consumeTime,D_CONSUME_TIME
     */
    @Override
    public ResHisConsumeRecord setDConsumeTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.D_CONSUME_TIME</code>. consumeTime,D_CONSUME_TIME
     */
    @Override
    public LocalDateTime getDConsumeTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.S_CODE</code>. code,S_CODE
     */
    @Override
    public ResHisConsumeRecord setSCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.S_SERIAL</code>. 序号,serial,S_SERIAL
     */
    @Override
    public ResHisConsumeRecord setSSerial(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.S_SERIAL</code>. 序号,serial,S_SERIAL
     */
    @Override
    public String getSSerial() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public ResHisConsumeRecord setJConfig(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.R_CARD_ID</code>. cardId,R_CARD_ID
     */
    @Override
    public ResHisConsumeRecord setRCardId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.R_CARD_ID</code>. cardId,R_CARD_ID
     */
    @Override
    public String getRCardId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.IS_FINISHED</code>. finished,IS_FINISHED
     */
    @Override
    public ResHisConsumeRecord setIsFinished(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.IS_FINISHED</code>. finished,IS_FINISHED
     */
    @Override
    public Boolean getIsFinished() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public ResHisConsumeRecord setIsActive(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public ResHisConsumeRecord setZSigma(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public ResHisConsumeRecord setZLanguage(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public ResHisConsumeRecord setZCreateBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public ResHisConsumeRecord setZCreateTime(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public ResHisConsumeRecord setZUpdateBy(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.RES_HIS_CONSUME.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public ResHisConsumeRecord setZUpdateTime(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.RES_HIS_CONSUME.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, BigDecimal, LocalDateTime, String, String, String, String, Boolean, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, BigDecimal, LocalDateTime, String, String, String, String, Boolean, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ResHisConsume.RES_HIS_CONSUME.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field2() {
        return ResHisConsume.RES_HIS_CONSUME.D_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return ResHisConsume.RES_HIS_CONSUME.D_CONSUME_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ResHisConsume.RES_HIS_CONSUME.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ResHisConsume.RES_HIS_CONSUME.S_SERIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ResHisConsume.RES_HIS_CONSUME.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ResHisConsume.RES_HIS_CONSUME.R_CARD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return ResHisConsume.RES_HIS_CONSUME.IS_FINISHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return ResHisConsume.RES_HIS_CONSUME.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ResHisConsume.RES_HIS_CONSUME.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return ResHisConsume.RES_HIS_CONSUME.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return ResHisConsume.RES_HIS_CONSUME.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field13() {
        return ResHisConsume.RES_HIS_CONSUME.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return ResHisConsume.RES_HIS_CONSUME.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field15() {
        return ResHisConsume.RES_HIS_CONSUME.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component2() {
        return getDAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getDConsumeTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSSerial();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getRCardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getIsFinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component13() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component15() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value2() {
        return getDAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getDConsumeTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSSerial();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getRCardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getIsFinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value13() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value15() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value2(BigDecimal value) {
        setDAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value3(LocalDateTime value) {
        setDConsumeTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value4(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value5(String value) {
        setSSerial(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value6(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value7(String value) {
        setRCardId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value8(Boolean value) {
        setIsFinished(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value9(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value10(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value11(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value12(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value13(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value14(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord value15(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResHisConsumeRecord values(String value1, BigDecimal value2, LocalDateTime value3, String value4, String value5, String value6, String value7, Boolean value8, Boolean value9, String value10, String value11, String value12, LocalDateTime value13, String value14, LocalDateTime value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IResHisConsume from) {
        setPkId(from.getPkId());
        setDAmount(from.getDAmount());
        setDConsumeTime(from.getDConsumeTime());
        setSCode(from.getSCode());
        setSSerial(from.getSSerial());
        setJConfig(from.getJConfig());
        setRCardId(from.getRCardId());
        setIsFinished(from.getIsFinished());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IResHisConsume> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResHisConsumeRecord
     */
    public ResHisConsumeRecord() {
        super(ResHisConsume.RES_HIS_CONSUME);
    }

    /**
     * Create a detached, initialised ResHisConsumeRecord
     */
    public ResHisConsumeRecord(String pkId, BigDecimal dAmount, LocalDateTime dConsumeTime, String sCode, String sSerial, String jConfig, String rCardId, Boolean isFinished, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(ResHisConsume.RES_HIS_CONSUME);

        set(0, pkId);
        set(1, dAmount);
        set(2, dConsumeTime);
        set(3, sCode);
        set(4, sSerial);
        set(5, jConfig);
        set(6, rCardId);
        set(7, isFinished);
        set(8, isActive);
        set(9, zSigma);
        set(10, zLanguage);
        set(11, zCreateBy);
        set(12, zCreateTime);
        set(13, zUpdateBy);
        set(14, zUpdateTime);
    }
}
