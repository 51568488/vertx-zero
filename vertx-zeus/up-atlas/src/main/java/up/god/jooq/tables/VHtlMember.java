/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VHtlMemberRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VHtlMember extends TableImpl<VHtlMemberRecord> {

    private static final long serialVersionUID = -494095570;

    /**
     * The reference instance of <code>DB_HTL.v_htl_member</code>
     */
    public static final VHtlMember V_HTL_MEMBER = new VHtlMember();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VHtlMemberRecord> getRecordType() {
        return VHtlMemberRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_htl_member.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlMemberRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_member.S_LICENSE_NUM</code>. licenseNumber,S_LICENSE_NUM
     */
    public final TableField<VHtlMemberRecord, String> S_LICENSE_NUM = createField("S_LICENSE_NUM", org.jooq.impl.SQLDataType.VARCHAR(16), this, "licenseNumber,S_LICENSE_NUM");

    /**
     * The column <code>DB_HTL.v_htl_member.T_PREF_ROOM</code>. prefRoom,T_PREF_ROOM
     */
    public final TableField<VHtlMemberRecord, String> T_PREF_ROOM = createField("T_PREF_ROOM", org.jooq.impl.SQLDataType.CLOB, this, "prefRoom,T_PREF_ROOM");

    /**
     * The column <code>DB_HTL.v_htl_member.T_PREF_REPAST</code>. prefRepast,T_PREF_REPAST
     */
    public final TableField<VHtlMemberRecord, String> T_PREF_REPAST = createField("T_PREF_REPAST", org.jooq.impl.SQLDataType.CLOB, this, "prefRepast,T_PREF_REPAST");

    /**
     * The column <code>DB_HTL.v_htl_member.T_PREF_INTEREST</code>. prefInterest,T_PREF_INTEREST
     */
    public final TableField<VHtlMemberRecord, String> T_PREF_INTEREST = createField("T_PREF_INTEREST", org.jooq.impl.SQLDataType.CLOB, this, "prefInterest,T_PREF_INTEREST");

    /**
     * The column <code>DB_HTL.v_htl_member.T_SPEC_REQUEST</code>. specRequest,T_SPEC_REQUEST
     */
    public final TableField<VHtlMemberRecord, String> T_SPEC_REQUEST = createField("T_SPEC_REQUEST", org.jooq.impl.SQLDataType.CLOB, this, "specRequest,T_SPEC_REQUEST");

    /**
     * The column <code>DB_HTL.v_htl_member.S_PROPOSER</code>. 推荐人,proposer,S_PROPOSER
     */
    public final TableField<VHtlMemberRecord, String> S_PROPOSER = createField("S_PROPOSER", org.jooq.impl.SQLDataType.VARCHAR(32), this, "推荐人,proposer,S_PROPOSER");

    /**
     * The column <code>DB_HTL.v_htl_member.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<VHtlMemberRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.v_htl_member.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<VHtlMemberRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.v_htl_member.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public final TableField<VHtlMemberRecord, Long> R_HOTEL_ID = createField("R_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "hotelId,R_HOTEL_ID");

    /**
     * The column <code>DB_HTL.v_htl_member.V_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlMemberRecord, String> V_PK_ID = createField("V_PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_member.L_POINT</code>. 积分,point,L_POINT
     */
    public final TableField<VHtlMemberRecord, Long> L_POINT = createField("L_POINT", org.jooq.impl.SQLDataType.BIGINT, this, "积分,point,L_POINT");

    /**
     * The column <code>DB_HTL.v_htl_member.RLT_MBER_LEVEL</code>. 会员等级,level,RLT_MBER_LEVEL
     */
    public final TableField<VHtlMemberRecord, Long> RLT_MBER_LEVEL = createField("RLT_MBER_LEVEL", org.jooq.impl.SQLDataType.BIGINT, this, "会员等级,level,RLT_MBER_LEVEL");

    /**
     * The column <code>DB_HTL.v_htl_member.RLT_MBER_STATUS</code>. 会员状态,status,RLT_MBER_STATUS
     */
    public final TableField<VHtlMemberRecord, Long> RLT_MBER_STATUS = createField("RLT_MBER_STATUS", org.jooq.impl.SQLDataType.BIGINT, this, "会员状态,status,RLT_MBER_STATUS");

    /**
     * The column <code>DB_HTL.v_htl_member.S_REALNAME</code>. realname,S_REALNAME
     */
    public final TableField<VHtlMemberRecord, String> S_REALNAME = createField("S_REALNAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "realname,S_REALNAME");

    /**
     * The column <code>DB_HTL.v_htl_member.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public final TableField<VHtlMemberRecord, String> S_NICKNAME = createField("S_NICKNAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "nickname,S_NICKNAME");

    /**
     * The column <code>DB_HTL.v_htl_member.D_BIRTHDAY</code>. birthday,D_BIRTHDAY
     */
    public final TableField<VHtlMemberRecord, LocalDateTime> D_BIRTHDAY = createField("D_BIRTHDAY", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "birthday,D_BIRTHDAY");

    /**
     * The column <code>DB_HTL.v_htl_member.IS_MALE</code>. 男？true为男，false为女,male,IS_MALE
     */
    public final TableField<VHtlMemberRecord, Boolean> IS_MALE = createField("IS_MALE", org.jooq.impl.SQLDataType.BOOLEAN, this, "男？true为男，false为女,male,IS_MALE");

    /**
     * The column <code>DB_HTL.v_htl_member.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<VHtlMemberRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.v_htl_member.S_SERIAL</code>. serial,S_SERIAL
     */
    public final TableField<VHtlMemberRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(64), this, "serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.v_htl_member.U_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlMemberRecord, String> U_PK_ID = createField("U_PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_member.S_USERNAME</code>. 登陆账号,username,S_USERNAME
     */
    public final TableField<VHtlMemberRecord, String> S_USERNAME = createField("S_USERNAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "登陆账号,username,S_USERNAME");

    /**
     * The column <code>DB_HTL.v_htl_member.S_EMAIL</code>. 个人Email,email,S_EMAIL
     */
    public final TableField<VHtlMemberRecord, String> S_EMAIL = createField("S_EMAIL", org.jooq.impl.SQLDataType.VARCHAR(72), this, "个人Email,email,S_EMAIL");

    /**
     * The column <code>DB_HTL.v_htl_member.S_MOBILE</code>. 手机号,mobile,S_MOBILE
     */
    public final TableField<VHtlMemberRecord, String> S_MOBILE = createField("S_MOBILE", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "手机号,mobile,S_MOBILE");

    /**
     * The column <code>DB_HTL.v_htl_member.S_PASSWORD</code>. 登陆口令/密码,password,S_PASSWORD
     */
    public final TableField<VHtlMemberRecord, String> S_PASSWORD = createField("S_PASSWORD", org.jooq.impl.SQLDataType.VARCHAR(255), this, "登陆口令/密码,password,S_PASSWORD");

    /**
     * The column <code>DB_HTL.v_htl_member.S_QQ</code>. 个人QQ号,qq,S_QQ
     */
    public final TableField<VHtlMemberRecord, String> S_QQ = createField("S_QQ", org.jooq.impl.SQLDataType.VARCHAR(10), this, "个人QQ号,qq,S_QQ");

    /**
     * The column <code>DB_HTL.v_htl_member.S_ALIPAY</code>. 支付宝,alipay,S_ALIPAY
     */
    public final TableField<VHtlMemberRecord, String> S_ALIPAY = createField("S_ALIPAY", org.jooq.impl.SQLDataType.VARCHAR(72), this, "支付宝,alipay,S_ALIPAY");

    /**
     * The column <code>DB_HTL.v_htl_member.S_TAOBAO</code>. 淘宝,taobao,S_TAOBAO
     */
    public final TableField<VHtlMemberRecord, String> S_TAOBAO = createField("S_TAOBAO", org.jooq.impl.SQLDataType.VARCHAR(72), this, "淘宝,taobao,S_TAOBAO");

    /**
     * The column <code>DB_HTL.v_htl_member.S_WEIBO</code>. 微博账号,weibo,S_WEIBO
     */
    public final TableField<VHtlMemberRecord, String> S_WEIBO = createField("S_WEIBO", org.jooq.impl.SQLDataType.VARCHAR(64), this, "微博账号,weibo,S_WEIBO");

    /**
     * The column <code>DB_HTL.v_htl_member.S_WECHAT</code>. 微信账号,wechat,S_WECHAT
     */
    public final TableField<VHtlMemberRecord, String> S_WECHAT = createField("S_WECHAT", org.jooq.impl.SQLDataType.VARCHAR(64), this, "微信账号,wechat,S_WECHAT");

    /**
     * The column <code>DB_HTL.v_htl_member.I_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlMemberRecord, String> I_PK_ID = createField("I_PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_member.S_IDC_NUMBER</code>. 证件号,idcNumber,S_IDC_NUMBER
     */
    public final TableField<VHtlMemberRecord, String> S_IDC_NUMBER = createField("S_IDC_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(64), this, "证件号,idcNumber,S_IDC_NUMBER");

    /**
     * The column <code>DB_HTL.v_htl_member.RLT_IDC_TYPE</code>. 证件类型,idcType,RLT_IDC_TYPE
     */
    public final TableField<VHtlMemberRecord, Long> RLT_IDC_TYPE = createField("RLT_IDC_TYPE", org.jooq.impl.SQLDataType.BIGINT, this, "证件类型,idcType,RLT_IDC_TYPE");

    /**
     * The column <code>DB_HTL.v_htl_member.S_COUNTRY</code>. country,S_COUNTRY
     */
    public final TableField<VHtlMemberRecord, String> S_COUNTRY = createField("S_COUNTRY", org.jooq.impl.SQLDataType.VARCHAR(32), this, "country,S_COUNTRY");

    /**
     * The column <code>DB_HTL.v_htl_member.C_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlMemberRecord, String> C_PK_ID = createField("C_PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_member.C_S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    public final TableField<VHtlMemberRecord, String> C_S_NUMBER = createField("C_S_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(64), this, "卡号,number,S_NUMBER");

    /**
     * The column <code>DB_HTL.v_htl_member.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    public final TableField<VHtlMemberRecord, BigDecimal> D_AMOUNT = createField("D_AMOUNT", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "卡余额,amount,D_AMOUNT");

    /**
     * Create a <code>DB_HTL.v_htl_member</code> table reference
     */
    public VHtlMember() {
        this(DSL.name("v_htl_member"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_member</code> table reference
     */
    public VHtlMember(String alias) {
        this(DSL.name(alias), V_HTL_MEMBER);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_member</code> table reference
     */
    public VHtlMember(Name alias) {
        this(alias, V_HTL_MEMBER);
    }

    private VHtlMember(Name alias, Table<VHtlMemberRecord> aliased) {
        this(alias, aliased, null);
    }

    private VHtlMember(Name alias, Table<VHtlMemberRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlMember as(String alias) {
        return new VHtlMember(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlMember as(Name alias) {
        return new VHtlMember(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlMember rename(String name) {
        return new VHtlMember(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlMember rename(Name name) {
        return new VHtlMember(name, null);
    }
}
