/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.EnuIncrementRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnuIncrement extends TableImpl<EnuIncrementRecord> {

    private static final long serialVersionUID = 317711334;

    /**
     * The reference instance of <code>DB_HTL.ENU_INCREMENT</code>
     */
    public static final EnuIncrement ENU_INCREMENT = new EnuIncrement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnuIncrementRecord> getRecordType() {
        return EnuIncrementRecord.class;
    }

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<EnuIncrementRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.B_BINARY</code>. binary,B_BINARY
     */
    public final TableField<EnuIncrementRecord, byte[]> B_BINARY = createField("B_BINARY", org.jooq.impl.SQLDataType.BLOB, this, "binary,B_BINARY");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.D_DATE1</code>. date,D_DATE1
     */
    public final TableField<EnuIncrementRecord, LocalDateTime> D_DATE1 = createField("D_DATE1", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "date,D_DATE1");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.D_DECIMAL</code>. decimal,D_DECIMAL
     */
    public final TableField<EnuIncrementRecord, BigDecimal> D_DECIMAL = createField("D_DECIMAL", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "decimal,D_DECIMAL");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.L_LONG</code>. long,L_LONG
     */
    public final TableField<EnuIncrementRecord, Long> L_LONG = createField("L_LONG", org.jooq.impl.SQLDataType.BIGINT, this, "long,L_LONG");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.T_STRING</code>. text,T_STRING
     */
    public final TableField<EnuIncrementRecord, String> T_STRING = createField("T_STRING", org.jooq.impl.SQLDataType.CLOB, this, "text,T_STRING");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.X_XML</code>. xml,X_XML
     */
    public final TableField<EnuIncrementRecord, String> X_XML = createField("X_XML", org.jooq.impl.SQLDataType.CLOB, this, "xml,X_XML");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.S_CODE</code>. code,S_CODE
     */
    public final TableField<EnuIncrementRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.S_STRING</code>. string,S_STRING
     */
    public final TableField<EnuIncrementRecord, String> S_STRING = createField("S_STRING", org.jooq.impl.SQLDataType.VARCHAR(64), this, "string,S_STRING");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<EnuIncrementRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.J_JSON</code>. json,J_JSON
     */
    public final TableField<EnuIncrementRecord, String> J_JSON = createField("J_JSON", org.jooq.impl.SQLDataType.CLOB, this, "json,J_JSON");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.I_INT</code>. int,I_INT
     */
    public final TableField<EnuIncrementRecord, Integer> I_INT = createField("I_INT", org.jooq.impl.SQLDataType.INTEGER, this, "int,I_INT");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.IS_BOOL</code>. boolean,IS_BOOL
     */
    public final TableField<EnuIncrementRecord, Boolean> IS_BOOL = createField("IS_BOOL", org.jooq.impl.SQLDataType.BOOLEAN, this, "boolean,IS_BOOL");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<EnuIncrementRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.E_SCRIPT</code>. script,E_SCRIPT
     */
    public final TableField<EnuIncrementRecord, String> E_SCRIPT = createField("E_SCRIPT", org.jooq.impl.SQLDataType.CLOB, this, "script,E_SCRIPT");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<EnuIncrementRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<EnuIncrementRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<EnuIncrementRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<EnuIncrementRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<EnuIncrementRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.ENU_INCREMENT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<EnuIncrementRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.ENU_INCREMENT</code> table reference
     */
    public EnuIncrement() {
        this(DSL.name("ENU_INCREMENT"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.ENU_INCREMENT</code> table reference
     */
    public EnuIncrement(String alias) {
        this(DSL.name(alias), ENU_INCREMENT);
    }

    /**
     * Create an aliased <code>DB_HTL.ENU_INCREMENT</code> table reference
     */
    public EnuIncrement(Name alias) {
        this(alias, ENU_INCREMENT);
    }

    private EnuIncrement(Name alias, Table<EnuIncrementRecord> aliased) {
        this(alias, aliased, null);
    }

    private EnuIncrement(Name alias, Table<EnuIncrementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENU_INCREMENT_PRIMARY, Indexes.ENU_INCREMENT_UK_ENU_INCREMENT_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EnuIncrementRecord, Long> getIdentity() {
        return Keys.IDENTITY_ENU_INCREMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnuIncrementRecord> getPrimaryKey() {
        return Keys.KEY_ENU_INCREMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnuIncrementRecord>> getKeys() {
        return Arrays.<UniqueKey<EnuIncrementRecord>>asList(Keys.KEY_ENU_INCREMENT_PRIMARY, Keys.KEY_ENU_INCREMENT_UK_ENU_INCREMENT_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnuIncrement as(String alias) {
        return new EnuIncrement(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnuIncrement as(Name alias) {
        return new EnuIncrement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EnuIncrement rename(String name) {
        return new EnuIncrement(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EnuIncrement rename(Name name) {
        return new EnuIncrement(name, null);
    }
}
