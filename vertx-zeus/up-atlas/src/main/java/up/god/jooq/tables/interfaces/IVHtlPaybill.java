/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IVHtlPaybill extends Serializable {

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.PK_ID</code>. uniqueId,PK_ID
     */
    public IVHtlPaybill setPkId(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.I_SEQUENCE</code>. 序号,sequence,I_SEQUENCE
     */
    public IVHtlPaybill setISequence(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.I_SEQUENCE</code>. 序号,sequence,I_SEQUENCE
     */
    public Integer getISequence();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.RLT_BILL_TYPE</code>. REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE
     */
    public IVHtlPaybill setRltBillType(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.RLT_BILL_TYPE</code>. REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE
     */
    public Long getRltBillType();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.V_ROOM_NUM</code>. VREF：【账单房号】,roomNum,V_ROOM_NUM
     */
    public IVHtlPaybill setVRoomNum(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.V_ROOM_NUM</code>. VREF：【账单房号】,roomNum,V_ROOM_NUM
     */
    public String getVRoomNum();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.S_CODE</code>. code,S_CODE
     */
    public IVHtlPaybill setSCode(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.S_NAME</code>. 【名称】消费项名称,name,S_NAME
     */
    public IVHtlPaybill setSName(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.S_NAME</code>. 【名称】消费项名称,name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.I_QUANTITY</code>. 【数量】商品数量,quantity,I_QUANTITY
     */
    public IVHtlPaybill setIQuantity(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.I_QUANTITY</code>. 【数量】商品数量,quantity,I_QUANTITY
     */
    public Integer getIQuantity();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.D_AMOUNT_ACTUAL</code>. 【实际总价】实际给付结果,amountActual,D_AMOUNT_ACTUAL
     */
    public IVHtlPaybill setDAmountActual(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.D_AMOUNT_ACTUAL</code>. 【实际总价】实际给付结果,amountActual,D_AMOUNT_ACTUAL
     */
    public BigDecimal getDAmountActual();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.IS_INCOME</code>. 【账单方向】，income为true入帐，否则为出帐,income,IS_INCOME
     */
    public IVHtlPaybill setIsIncome(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.IS_INCOME</code>. 【账单方向】，income为true入帐，否则为出帐,income,IS_INCOME
     */
    public Boolean getIsIncome();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.S_TRANSFER</code>. 【账单流转】,transfer,S_TRANSFER
     */
    public IVHtlPaybill setSTransfer(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.S_TRANSFER</code>. 【账单流转】,transfer,S_TRANSFER
     */
    public String getSTransfer();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public IVHtlPaybill setTComment(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public String getTComment();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.S_EMPLOYEE_NO</code>. 【工号】,employeeNo,S_EMPLOYEE_NO
     */
    public IVHtlPaybill setSEmployeeNo(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.S_EMPLOYEE_NO</code>. 【工号】,employeeNo,S_EMPLOYEE_NO
     */
    public String getSEmployeeNo();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.S_SHIFT</code>. 【班次】保存结果，同房号字段,shift,S_SHIFT
     */
    public IVHtlPaybill setSShift(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.S_SHIFT</code>. 【班次】保存结果，同房号字段,shift,S_SHIFT
     */
    public String getSShift();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IVHtlPaybill setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.D_OPERATE_DATE</code>. operateDate,D_OPERATE_DATE
     */
    public IVHtlPaybill setDOperateDate(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.D_OPERATE_DATE</code>. operateDate,D_OPERATE_DATE
     */
    public LocalDateTime getDOperateDate();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IVHtlPaybill setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.v_htl_paybill.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IVHtlPaybill setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_paybill.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IVHtlPaybill
     */
    public void from(up.god.jooq.tables.interfaces.IVHtlPaybill from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IVHtlPaybill
     */
    public <E extends up.god.jooq.tables.interfaces.IVHtlPaybill> E into(E into);

    default IVHtlPaybill fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        setISequence(json.getInteger("I_SEQUENCE"));
        setRltBillType(json.getLong("RLT_BILL_TYPE"));
        setVRoomNum(json.getString("V_ROOM_NUM"));
        setSCode(json.getString("S_CODE"));
        setSName(json.getString("S_NAME"));
        setIQuantity(json.getInteger("I_QUANTITY"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        setIsIncome(json.getBoolean("IS_INCOME"));
        setSTransfer(json.getString("S_TRANSFER"));
        setTComment(json.getString("T_COMMENT"));
        setSEmployeeNo(json.getString("S_EMPLOYEE_NO"));
        setSShift(json.getString("S_SHIFT"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column D_OPERATE_DATE!
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("I_SEQUENCE",getISequence());
        json.put("RLT_BILL_TYPE",getRltBillType());
        json.put("V_ROOM_NUM",getVRoomNum());
        json.put("S_CODE",getSCode());
        json.put("S_NAME",getSName());
        json.put("I_QUANTITY",getIQuantity());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        json.put("IS_INCOME",getIsIncome());
        json.put("S_TRANSFER",getSTransfer());
        json.put("T_COMMENT",getTComment());
        json.put("S_EMPLOYEE_NO",getSEmployeeNo());
        json.put("S_SHIFT",getSShift());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column D_OPERATE_DATE!
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        return json;
    }

}
