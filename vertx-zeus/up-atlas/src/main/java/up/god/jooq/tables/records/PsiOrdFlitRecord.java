/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.PsiOrdFlit;
import up.god.jooq.tables.interfaces.IPsiOrdFlit;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsiOrdFlitRecord extends UpdatableRecordImpl<PsiOrdFlitRecord> implements Record16<String, String, String, String, String, String, String, Long, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IPsiOrdFlit {

    private static final long serialVersionUID = -612949417;

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public PsiOrdFlitRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.S_NAME</code>. name,S_NAME
     */
    @Override
    public PsiOrdFlitRecord setSName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.S_NAME</code>. name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.S_CODE</code>. code,S_CODE
     */
    @Override
    public PsiOrdFlitRecord setSCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.S_DELIVERY</code>. 调拨人,delivery,S_DELIVERY
     */
    @Override
    public PsiOrdFlitRecord setSDelivery(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.S_DELIVERY</code>. 调拨人,delivery,S_DELIVERY
     */
    @Override
    public String getSDelivery() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.S_HANDLER</code>. 处理人,handler,S_HANDLER
     */
    @Override
    public PsiOrdFlitRecord setSHandler(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.S_HANDLER</code>. 处理人,handler,S_HANDLER
     */
    @Override
    public String getSHandler() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.S_OPERATOR</code>. 开单人,operator,S_OPERATOR
     */
    @Override
    public PsiOrdFlitRecord setSOperator(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.S_OPERATOR</code>. 开单人,operator,S_OPERATOR
     */
    @Override
    public String getSOperator() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public PsiOrdFlitRecord setJConfig(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.R_DEPT_ID</code>. departmentId,R_DEPT_ID
     */
    @Override
    public PsiOrdFlitRecord setRDeptId(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.R_DEPT_ID</code>. departmentId,R_DEPT_ID
     */
    @Override
    public Long getRDeptId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.R_ORDER_ID</code>. orderId,R_ORDER_ID
     */
    @Override
    public PsiOrdFlitRecord setROrderId(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.R_ORDER_ID</code>. orderId,R_ORDER_ID
     */
    @Override
    public Long getROrderId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public PsiOrdFlitRecord setIsActive(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public PsiOrdFlitRecord setZSigma(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public PsiOrdFlitRecord setZLanguage(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public PsiOrdFlitRecord setZCreateBy(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public PsiOrdFlitRecord setZCreateTime(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public PsiOrdFlitRecord setZUpdateBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_FLIT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public PsiOrdFlitRecord setZUpdateTime(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_FLIT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<String, String, String, String, String, String, String, Long, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<String, String, String, String, String, String, String, Long, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row16) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return PsiOrdFlit.PSI_ORD_FLIT.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PsiOrdFlit.PSI_ORD_FLIT.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PsiOrdFlit.PSI_ORD_FLIT.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return PsiOrdFlit.PSI_ORD_FLIT.S_DELIVERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return PsiOrdFlit.PSI_ORD_FLIT.S_HANDLER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return PsiOrdFlit.PSI_ORD_FLIT.S_OPERATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return PsiOrdFlit.PSI_ORD_FLIT.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return PsiOrdFlit.PSI_ORD_FLIT.R_DEPT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return PsiOrdFlit.PSI_ORD_FLIT.R_ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return PsiOrdFlit.PSI_ORD_FLIT.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return PsiOrdFlit.PSI_ORD_FLIT.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return PsiOrdFlit.PSI_ORD_FLIT.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return PsiOrdFlit.PSI_ORD_FLIT.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field14() {
        return PsiOrdFlit.PSI_ORD_FLIT.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return PsiOrdFlit.PSI_ORD_FLIT.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field16() {
        return PsiOrdFlit.PSI_ORD_FLIT.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSDelivery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSHandler();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component8() {
        return getRDeptId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getROrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component14() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component16() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSDelivery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSHandler();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getRDeptId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getROrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value14() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value16() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value2(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value3(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value4(String value) {
        setSDelivery(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value5(String value) {
        setSHandler(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value6(String value) {
        setSOperator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value7(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value8(Long value) {
        setRDeptId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value9(Long value) {
        setROrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value10(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value11(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value12(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value13(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value14(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value15(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord value16(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdFlitRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, Long value8, Long value9, Boolean value10, String value11, String value12, String value13, LocalDateTime value14, String value15, LocalDateTime value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IPsiOrdFlit from) {
        setPkId(from.getPkId());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSDelivery(from.getSDelivery());
        setSHandler(from.getSHandler());
        setSOperator(from.getSOperator());
        setJConfig(from.getJConfig());
        setRDeptId(from.getRDeptId());
        setROrderId(from.getROrderId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IPsiOrdFlit> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PsiOrdFlitRecord
     */
    public PsiOrdFlitRecord() {
        super(PsiOrdFlit.PSI_ORD_FLIT);
    }

    /**
     * Create a detached, initialised PsiOrdFlitRecord
     */
    public PsiOrdFlitRecord(String pkId, String sName, String sCode, String sDelivery, String sHandler, String sOperator, String jConfig, Long rDeptId, Long rOrderId, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(PsiOrdFlit.PSI_ORD_FLIT);

        set(0, pkId);
        set(1, sName);
        set(2, sCode);
        set(3, sDelivery);
        set(4, sHandler);
        set(5, sOperator);
        set(6, jConfig);
        set(7, rDeptId);
        set(8, rOrderId);
        set(9, isActive);
        set(10, zSigma);
        set(11, zLanguage);
        set(12, zCreateBy);
        set(13, zCreateTime);
        set(14, zUpdateBy);
        set(15, zUpdateTime);
    }
}
