/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.AtmBillRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AtmBill extends TableImpl<AtmBillRecord> {

    private static final long serialVersionUID = 229300027;

    /**
     * The reference instance of <code>DB_HTL.ATM_BILL</code>
     */
    public static final AtmBill ATM_BILL = new AtmBill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AtmBillRecord> getRecordType() {
        return AtmBillRecord.class;
    }

    /**
     * The column <code>DB_HTL.ATM_BILL.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<AtmBillRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.ATM_BILL.D_AMOUNT_PRICE</code>. 【账单金额】当前账单的金额,amountPrice,D_AMOUNT_PRICE
     */
    public final TableField<AtmBillRecord, BigDecimal> D_AMOUNT_PRICE = createField("D_AMOUNT_PRICE", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "【账单金额】当前账单的金额,amountPrice,D_AMOUNT_PRICE");

    /**
     * The column <code>DB_HTL.ATM_BILL.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public final TableField<AtmBillRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "【备注】账单相关备注信息,comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.ATM_BILL.S_CODE</code>. code,S_CODE
     */
    public final TableField<AtmBillRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.ATM_BILL.S_CREDENCE</code>. 【账单凭证】,credence,S_CREDENCE
     */
    public final TableField<AtmBillRecord, String> S_CREDENCE = createField("S_CREDENCE", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "【账单凭证】,credence,S_CREDENCE");

    /**
     * The column <code>DB_HTL.ATM_BILL.S_SERIAL</code>. 【账单编号】,serial,S_SERIAL
     */
    public final TableField<AtmBillRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "【账单编号】,serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.ATM_BILL.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<AtmBillRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.ATM_BILL.RLT_BILL_TYPE</code>. REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE
     */
    public final TableField<AtmBillRecord, Long> RLT_BILL_TYPE = createField("RLT_BILL_TYPE", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE");

    /**
     * The column <code>DB_HTL.ATM_BILL.R_ORDER_ID</code>. REF: ABS_ORDERS【关联订单】该账单关联的订单ID,orderId,R_ORDER_ID
     */
    public final TableField<AtmBillRecord, Long> R_ORDER_ID = createField("R_ORDER_ID", org.jooq.impl.SQLDataType.BIGINT, this, "REF: ABS_ORDERS【关联订单】该账单关联的订单ID,orderId,R_ORDER_ID");

    /**
     * The column <code>DB_HTL.ATM_BILL.R_PAYTERM_ID</code>. REF: ATM_PAYTERM【消费项】关联消费项ID,ptermId,R_PAYTERM_ID
     */
    public final TableField<AtmBillRecord, String> R_PAYTERM_ID = createField("R_PAYTERM_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "REF: ATM_PAYTERM【消费项】关联消费项ID,ptermId,R_PAYTERM_ID");

    /**
     * The column <code>DB_HTL.ATM_BILL.IS_INCOME</code>. 【借（出）/贷（入）】如果是income则是入账，否则是出账。,income,IS_INCOME
     */
    public final TableField<AtmBillRecord, Boolean> IS_INCOME = createField("IS_INCOME", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "【借（出）/贷（入）】如果是income则是入账，否则是出账。,income,IS_INCOME");

    /**
     * The column <code>DB_HTL.ATM_BILL.IS_INVOICE</code>. 【发票】是否开票？,invoice,IS_INVOICE
     */
    public final TableField<AtmBillRecord, Boolean> IS_INVOICE = createField("IS_INVOICE", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "【发票】是否开票？,invoice,IS_INVOICE");

    /**
     * The column <code>DB_HTL.ATM_BILL.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<AtmBillRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.ATM_BILL.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<AtmBillRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.ATM_BILL.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<AtmBillRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.ATM_BILL.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<AtmBillRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.ATM_BILL.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<AtmBillRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.ATM_BILL.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<AtmBillRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.ATM_BILL.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<AtmBillRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.ATM_BILL</code> table reference
     */
    public AtmBill() {
        this(DSL.name("ATM_BILL"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.ATM_BILL</code> table reference
     */
    public AtmBill(String alias) {
        this(DSL.name(alias), ATM_BILL);
    }

    /**
     * Create an aliased <code>DB_HTL.ATM_BILL</code> table reference
     */
    public AtmBill(Name alias) {
        this(alias, ATM_BILL);
    }

    private AtmBill(Name alias, Table<AtmBillRecord> aliased) {
        this(alias, aliased, null);
    }

    private AtmBill(Name alias, Table<AtmBillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ATM_BILL_FK_ATM_BILL_R_ORDER_ID, Indexes.ATM_BILL_FK_ATM_BILL_R_PAYTERM_ID, Indexes.ATM_BILL_PRIMARY, Indexes.ATM_BILL_UK_ATM_BILL_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AtmBillRecord> getPrimaryKey() {
        return Keys.KEY_ATM_BILL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AtmBillRecord>> getKeys() {
        return Arrays.<UniqueKey<AtmBillRecord>>asList(Keys.KEY_ATM_BILL_PRIMARY, Keys.KEY_ATM_BILL_UK_ATM_BILL_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AtmBill as(String alias) {
        return new AtmBill(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AtmBill as(Name alias) {
        return new AtmBill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AtmBill rename(String name) {
        return new AtmBill(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AtmBill rename(Name name) {
        return new AtmBill(name, null);
    }
}
