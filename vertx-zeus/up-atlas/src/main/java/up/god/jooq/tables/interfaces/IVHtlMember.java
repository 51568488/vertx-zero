/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IVHtlMember extends Serializable {

    /**
     * Setter for <code>DB_HTL.v_htl_member.PK_ID</code>. uniqueId,PK_ID
     */
    public IVHtlMember setPkId(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_LICENSE_NUM</code>. licenseNumber,S_LICENSE_NUM
     */
    public IVHtlMember setSLicenseNum(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_LICENSE_NUM</code>. licenseNumber,S_LICENSE_NUM
     */
    public String getSLicenseNum();

    /**
     * Setter for <code>DB_HTL.v_htl_member.T_PREF_ROOM</code>. prefRoom,T_PREF_ROOM
     */
    public IVHtlMember setTPrefRoom(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.T_PREF_ROOM</code>. prefRoom,T_PREF_ROOM
     */
    public String getTPrefRoom();

    /**
     * Setter for <code>DB_HTL.v_htl_member.T_PREF_REPAST</code>. prefRepast,T_PREF_REPAST
     */
    public IVHtlMember setTPrefRepast(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.T_PREF_REPAST</code>. prefRepast,T_PREF_REPAST
     */
    public String getTPrefRepast();

    /**
     * Setter for <code>DB_HTL.v_htl_member.T_PREF_INTEREST</code>. prefInterest,T_PREF_INTEREST
     */
    public IVHtlMember setTPrefInterest(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.T_PREF_INTEREST</code>. prefInterest,T_PREF_INTEREST
     */
    public String getTPrefInterest();

    /**
     * Setter for <code>DB_HTL.v_htl_member.T_SPEC_REQUEST</code>. specRequest,T_SPEC_REQUEST
     */
    public IVHtlMember setTSpecRequest(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.T_SPEC_REQUEST</code>. specRequest,T_SPEC_REQUEST
     */
    public String getTSpecRequest();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_PROPOSER</code>. 推荐人,proposer,S_PROPOSER
     */
    public IVHtlMember setSProposer(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_PROPOSER</code>. 推荐人,proposer,S_PROPOSER
     */
    public String getSProposer();

    /**
     * Setter for <code>DB_HTL.v_htl_member.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IVHtlMember setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.v_htl_member.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IVHtlMember setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.v_htl_member.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public IVHtlMember setRHotelId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public Long getRHotelId();

    /**
     * Setter for <code>DB_HTL.v_htl_member.V_PK_ID</code>. uniqueId,PK_ID
     */
    public IVHtlMember setVPkId(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.V_PK_ID</code>. uniqueId,PK_ID
     */
    public String getVPkId();

    /**
     * Setter for <code>DB_HTL.v_htl_member.L_POINT</code>. 积分,point,L_POINT
     */
    public IVHtlMember setLPoint(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.L_POINT</code>. 积分,point,L_POINT
     */
    public Long getLPoint();

    /**
     * Setter for <code>DB_HTL.v_htl_member.RLT_MBER_LEVEL</code>. 会员等级,level,RLT_MBER_LEVEL
     */
    public IVHtlMember setRltMberLevel(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.RLT_MBER_LEVEL</code>. 会员等级,level,RLT_MBER_LEVEL
     */
    public Long getRltMberLevel();

    /**
     * Setter for <code>DB_HTL.v_htl_member.RLT_MBER_STATUS</code>. 会员状态,status,RLT_MBER_STATUS
     */
    public IVHtlMember setRltMberStatus(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.RLT_MBER_STATUS</code>. 会员状态,status,RLT_MBER_STATUS
     */
    public Long getRltMberStatus();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_REALNAME</code>. realname,S_REALNAME
     */
    public IVHtlMember setSRealname(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_REALNAME</code>. realname,S_REALNAME
     */
    public String getSRealname();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public IVHtlMember setSNickname(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public String getSNickname();

    /**
     * Setter for <code>DB_HTL.v_htl_member.D_BIRTHDAY</code>. birthday,D_BIRTHDAY
     */
    public IVHtlMember setDBirthday(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.D_BIRTHDAY</code>. birthday,D_BIRTHDAY
     */
    public LocalDateTime getDBirthday();

    /**
     * Setter for <code>DB_HTL.v_htl_member.IS_MALE</code>. 男？true为男，false为女,male,IS_MALE
     */
    public IVHtlMember setIsMale(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.IS_MALE</code>. 男？true为男，false为女,male,IS_MALE
     */
    public Boolean getIsMale();

    /**
     * Setter for <code>DB_HTL.v_htl_member.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IVHtlMember setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_SERIAL</code>. serial,S_SERIAL
     */
    public IVHtlMember setSSerial(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_SERIAL</code>. serial,S_SERIAL
     */
    public String getSSerial();

    /**
     * Setter for <code>DB_HTL.v_htl_member.U_PK_ID</code>. uniqueId,PK_ID
     */
    public IVHtlMember setUPkId(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.U_PK_ID</code>. uniqueId,PK_ID
     */
    public String getUPkId();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_USERNAME</code>. 登陆账号,username,S_USERNAME
     */
    public IVHtlMember setSUsername(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_USERNAME</code>. 登陆账号,username,S_USERNAME
     */
    public String getSUsername();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_EMAIL</code>. 个人Email,email,S_EMAIL
     */
    public IVHtlMember setSEmail(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_EMAIL</code>. 个人Email,email,S_EMAIL
     */
    public String getSEmail();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_MOBILE</code>. 手机号,mobile,S_MOBILE
     */
    public IVHtlMember setSMobile(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_MOBILE</code>. 手机号,mobile,S_MOBILE
     */
    public String getSMobile();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_PASSWORD</code>. 登陆口令/密码,password,S_PASSWORD
     */
    public IVHtlMember setSPassword(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_PASSWORD</code>. 登陆口令/密码,password,S_PASSWORD
     */
    public String getSPassword();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_QQ</code>. 个人QQ号,qq,S_QQ
     */
    public IVHtlMember setSQq(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_QQ</code>. 个人QQ号,qq,S_QQ
     */
    public String getSQq();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_ALIPAY</code>. 支付宝,alipay,S_ALIPAY
     */
    public IVHtlMember setSAlipay(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_ALIPAY</code>. 支付宝,alipay,S_ALIPAY
     */
    public String getSAlipay();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_TAOBAO</code>. 淘宝,taobao,S_TAOBAO
     */
    public IVHtlMember setSTaobao(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_TAOBAO</code>. 淘宝,taobao,S_TAOBAO
     */
    public String getSTaobao();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_WEIBO</code>. 微博账号,weibo,S_WEIBO
     */
    public IVHtlMember setSWeibo(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_WEIBO</code>. 微博账号,weibo,S_WEIBO
     */
    public String getSWeibo();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_WECHAT</code>. 微信账号,wechat,S_WECHAT
     */
    public IVHtlMember setSWechat(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_WECHAT</code>. 微信账号,wechat,S_WECHAT
     */
    public String getSWechat();

    /**
     * Setter for <code>DB_HTL.v_htl_member.I_PK_ID</code>. uniqueId,PK_ID
     */
    public IVHtlMember setIPkId(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.I_PK_ID</code>. uniqueId,PK_ID
     */
    public String getIPkId();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_IDC_NUMBER</code>. 证件号,idcNumber,S_IDC_NUMBER
     */
    public IVHtlMember setSIdcNumber(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_IDC_NUMBER</code>. 证件号,idcNumber,S_IDC_NUMBER
     */
    public String getSIdcNumber();

    /**
     * Setter for <code>DB_HTL.v_htl_member.RLT_IDC_TYPE</code>. 证件类型,idcType,RLT_IDC_TYPE
     */
    public IVHtlMember setRltIdcType(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.RLT_IDC_TYPE</code>. 证件类型,idcType,RLT_IDC_TYPE
     */
    public Long getRltIdcType();

    /**
     * Setter for <code>DB_HTL.v_htl_member.S_COUNTRY</code>. country,S_COUNTRY
     */
    public IVHtlMember setSCountry(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.S_COUNTRY</code>. country,S_COUNTRY
     */
    public String getSCountry();

    /**
     * Setter for <code>DB_HTL.v_htl_member.C_PK_ID</code>. uniqueId,PK_ID
     */
    public IVHtlMember setCPkId(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.C_PK_ID</code>. uniqueId,PK_ID
     */
    public String getCPkId();

    /**
     * Setter for <code>DB_HTL.v_htl_member.C_S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    public IVHtlMember setCSNumber(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.C_S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    public String getCSNumber();

    /**
     * Setter for <code>DB_HTL.v_htl_member.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    public IVHtlMember setDAmount(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.v_htl_member.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    public BigDecimal getDAmount();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IVHtlMember
     */
    public void from(up.god.jooq.tables.interfaces.IVHtlMember from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IVHtlMember
     */
    public <E extends up.god.jooq.tables.interfaces.IVHtlMember> E into(E into);

    default IVHtlMember fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        setSLicenseNum(json.getString("S_LICENSE_NUM"));
        setTPrefRoom(json.getString("T_PREF_ROOM"));
        setTPrefRepast(json.getString("T_PREF_REPAST"));
        setTPrefInterest(json.getString("T_PREF_INTEREST"));
        setTSpecRequest(json.getString("T_SPEC_REQUEST"));
        setSProposer(json.getString("S_PROPOSER"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setRHotelId(json.getLong("R_HOTEL_ID"));
        setVPkId(json.getString("V_PK_ID"));
        setLPoint(json.getLong("L_POINT"));
        setRltMberLevel(json.getLong("RLT_MBER_LEVEL"));
        setRltMberStatus(json.getLong("RLT_MBER_STATUS"));
        setSRealname(json.getString("S_REALNAME"));
        setSNickname(json.getString("S_NICKNAME"));
        // Omitting unrecognized type java.time.LocalDateTime for column D_BIRTHDAY!
        setIsMale(json.getBoolean("IS_MALE"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setSSerial(json.getString("S_SERIAL"));
        setUPkId(json.getString("U_PK_ID"));
        setSUsername(json.getString("S_USERNAME"));
        setSEmail(json.getString("S_EMAIL"));
        setSMobile(json.getString("S_MOBILE"));
        setSPassword(json.getString("S_PASSWORD"));
        setSQq(json.getString("S_QQ"));
        setSAlipay(json.getString("S_ALIPAY"));
        setSTaobao(json.getString("S_TAOBAO"));
        setSWeibo(json.getString("S_WEIBO"));
        setSWechat(json.getString("S_WECHAT"));
        setIPkId(json.getString("I_PK_ID"));
        setSIdcNumber(json.getString("S_IDC_NUMBER"));
        setRltIdcType(json.getLong("RLT_IDC_TYPE"));
        setSCountry(json.getString("S_COUNTRY"));
        setCPkId(json.getString("C_PK_ID"));
        setCSNumber(json.getString("C_S_NUMBER"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("S_LICENSE_NUM",getSLicenseNum());
        json.put("T_PREF_ROOM",getTPrefRoom());
        json.put("T_PREF_REPAST",getTPrefRepast());
        json.put("T_PREF_INTEREST",getTPrefInterest());
        json.put("T_SPEC_REQUEST",getTSpecRequest());
        json.put("S_PROPOSER",getSProposer());
        json.put("Z_LANGUAGE",getZLanguage());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("R_HOTEL_ID",getRHotelId());
        json.put("V_PK_ID",getVPkId());
        json.put("L_POINT",getLPoint());
        json.put("RLT_MBER_LEVEL",getRltMberLevel());
        json.put("RLT_MBER_STATUS",getRltMberStatus());
        json.put("S_REALNAME",getSRealname());
        json.put("S_NICKNAME",getSNickname());
        // Omitting unrecognized type java.time.LocalDateTime for column D_BIRTHDAY!
        json.put("IS_MALE",getIsMale());
        json.put("IS_ACTIVE",getIsActive());
        json.put("S_SERIAL",getSSerial());
        json.put("U_PK_ID",getUPkId());
        json.put("S_USERNAME",getSUsername());
        json.put("S_EMAIL",getSEmail());
        json.put("S_MOBILE",getSMobile());
        json.put("S_PASSWORD",getSPassword());
        json.put("S_QQ",getSQq());
        json.put("S_ALIPAY",getSAlipay());
        json.put("S_TAOBAO",getSTaobao());
        json.put("S_WEIBO",getSWeibo());
        json.put("S_WECHAT",getSWechat());
        json.put("I_PK_ID",getIPkId());
        json.put("S_IDC_NUMBER",getSIdcNumber());
        json.put("RLT_IDC_TYPE",getRltIdcType());
        json.put("S_COUNTRY",getSCountry());
        json.put("C_PK_ID",getCPkId());
        json.put("C_S_NUMBER",getCSNumber());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT!
        return json;
    }

}
