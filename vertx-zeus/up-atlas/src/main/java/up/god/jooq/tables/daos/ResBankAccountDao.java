/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.ResBankAccount;
import up.god.jooq.tables.records.ResBankAccountRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResBankAccountDao extends DAOImpl<ResBankAccountRecord, up.god.jooq.tables.pojos.ResBankAccount, Long> implements VertxDAO<up.god.jooq.tables.records.ResBankAccountRecord,up.god.jooq.tables.pojos.ResBankAccount,java.lang.Long> {

    /**
     * Create a new ResBankAccountDao without any configuration
     */
    public ResBankAccountDao() {
        super(ResBankAccount.RES_BANK_ACCOUNT, up.god.jooq.tables.pojos.ResBankAccount.class);
    }

    /**
     * Create a new ResBankAccountDao with an attached configuration
     */
    public ResBankAccountDao(Configuration configuration) {
        super(ResBankAccount.RES_BANK_ACCOUNT, up.god.jooq.tables.pojos.ResBankAccount.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(up.god.jooq.tables.pojos.ResBankAccount object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByPkId(Long... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.ResBankAccount fetchOneByPkId(Long value) {
        return fetchOne(ResBankAccount.RES_BANK_ACCOUNT.PK_ID, value);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchBySCode(String... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_ACC_NUM IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchBySAccNum(String... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.S_ACC_NUM, values);
    }

    /**
     * Fetch records that have <code>S_SANITIZED_ACC_NUMBER IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchBySSanitizedAccNumber(String... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.S_SANITIZED_ACC_NUMBER, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByJConfig(String... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>I_ORDER IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByIOrder(Integer... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.I_ORDER, values);
    }

    /**
     * Fetch records that have <code>RLT_TYPE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByRltType(Long... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.RLT_TYPE, values);
    }

    /**
     * Fetch records that have <code>R_BANK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByRBankId(Long... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.R_BANK_ID, values);
    }

    /**
     * Fetch records that have <code>R_COMPANY_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByRCompanyId(Long... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.R_COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>R_CURRENCY_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByRCurrencyId(Long... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.R_CURRENCY_ID, values);
    }

    /**
     * Fetch records that have <code>R_MEMBER_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByRMemberId(String... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.R_MEMBER_ID, values);
    }

    /**
     * Fetch records that have <code>R_PARTNER_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByRPartnerId(Long... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.R_PARTNER_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByIsActive(Boolean... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByZSigma(String... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByZLanguage(String... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByZCreateBy(String... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByZUpdateBy(String... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.ResBankAccount> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(ResBankAccount.RES_BANK_ACCOUNT.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByPkIdAsync(List<Long> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.ResBankAccount> fetchOneByPkIdAsync(Long value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_ACC_NUM IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchBySAccNumAsync(List<String> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.S_ACC_NUM,values);
    }

    /**
     * Fetch records that have <code>S_SANITIZED_ACC_NUMBER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchBySSanitizedAccNumberAsync(List<String> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.S_SANITIZED_ACC_NUMBER,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>I_ORDER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByIOrderAsync(List<Integer> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.I_ORDER,values);
    }

    /**
     * Fetch records that have <code>RLT_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByRltTypeAsync(List<Long> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.RLT_TYPE,values);
    }

    /**
     * Fetch records that have <code>R_BANK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByRBankIdAsync(List<Long> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.R_BANK_ID,values);
    }

    /**
     * Fetch records that have <code>R_COMPANY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByRCompanyIdAsync(List<Long> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.R_COMPANY_ID,values);
    }

    /**
     * Fetch records that have <code>R_CURRENCY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByRCurrencyIdAsync(List<Long> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.R_CURRENCY_ID,values);
    }

    /**
     * Fetch records that have <code>R_MEMBER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByRMemberIdAsync(List<String> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.R_MEMBER_ID,values);
    }

    /**
     * Fetch records that have <code>R_PARTNER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByRPartnerIdAsync(List<Long> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.R_PARTNER_ID,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.ResBankAccount>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(ResBankAccount.RES_BANK_ACCOUNT.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
