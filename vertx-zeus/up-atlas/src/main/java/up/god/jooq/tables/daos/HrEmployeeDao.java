/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.HrEmployee;
import up.god.jooq.tables.records.HrEmployeeRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HrEmployeeDao extends DAOImpl<HrEmployeeRecord, up.god.jooq.tables.pojos.HrEmployee, Long> implements VertxDAO<up.god.jooq.tables.records.HrEmployeeRecord,up.god.jooq.tables.pojos.HrEmployee,java.lang.Long> {

    /**
     * Create a new HrEmployeeDao without any configuration
     */
    public HrEmployeeDao() {
        super(HrEmployee.HR_EMPLOYEE, up.god.jooq.tables.pojos.HrEmployee.class);
    }

    /**
     * Create a new HrEmployeeDao with an attached configuration
     */
    public HrEmployeeDao(Configuration configuration) {
        super(HrEmployee.HR_EMPLOYEE, up.god.jooq.tables.pojos.HrEmployee.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(up.god.jooq.tables.pojos.HrEmployee object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByPkId(Long... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.HrEmployee fetchOneByPkId(Long value) {
        return fetchOne(HrEmployee.HR_EMPLOYEE.PK_ID, value);
    }

    /**
     * Fetch records that have <code>D_BIRTHDAY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByDBirthday(LocalDateTime... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.D_BIRTHDAY, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySCode(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_COMPANY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySCompany(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_COMPANY, values);
    }

    /**
     * Fetch records that have <code>S_COUNTRY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySCountry(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_COUNTRY, values);
    }

    /**
     * Fetch records that have <code>S_DEPARTMENT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySDepartment(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_DEPARTMENT, values);
    }

    /**
     * Fetch records that have <code>S_EMPLOYEE_NUM IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySEmployeeNum(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_EMPLOYEE_NUM, values);
    }

    /**
     * Fetch records that have <code>S_GENDER IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySGender(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_GENDER, values);
    }

    /**
     * Fetch records that have <code>S_JOB IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySJob(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_JOB, values);
    }

    /**
     * Fetch records that have <code>S_MARITAL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySMarital(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_MARITAL, values);
    }

    /**
     * Fetch records that have <code>S_NICKNAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySNickname(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_NICKNAME, values);
    }

    /**
     * Fetch records that have <code>S_REALNAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySRealname(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_REALNAME, values);
    }

    /**
     * Fetch records that have <code>S_SINID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySSinid(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_SINID, values);
    }

    /**
     * Fetch records that have <code>S_SSNID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySSsnid(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_SSNID, values);
    }

    /**
     * Fetch records that have <code>S_WORK_EMAIL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySWorkEmail(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_WORK_EMAIL, values);
    }

    /**
     * Fetch records that have <code>S_WORK_LOCATION IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySWorkLocation(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_WORK_LOCATION, values);
    }

    /**
     * Fetch records that have <code>S_WORK_PHONE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchBySWorkPhone(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.S_WORK_PHONE, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByJConfig(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>RLT_CAT_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByRltCatId(Long... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.RLT_CAT_ID, values);
    }

    /**
     * Fetch records that have <code>R_USER_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByRUserId(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.R_USER_ID, values);
    }

    /**
     * Fetch records that have <code>R_JOB_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByRJobId(Long... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.R_JOB_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByIsActive(Boolean... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByZSigma(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByZLanguage(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByZCreateBy(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByZUpdateBy(String... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.HrEmployee> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(HrEmployee.HR_EMPLOYEE.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByPkIdAsync(List<Long> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.HrEmployee> fetchOneByPkIdAsync(Long value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>D_BIRTHDAY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByDBirthdayAsync(List<LocalDateTime> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.D_BIRTHDAY,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_COMPANY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySCompanyAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_COMPANY,values);
    }

    /**
     * Fetch records that have <code>S_COUNTRY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySCountryAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_COUNTRY,values);
    }

    /**
     * Fetch records that have <code>S_DEPARTMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySDepartmentAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_DEPARTMENT,values);
    }

    /**
     * Fetch records that have <code>S_EMPLOYEE_NUM IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySEmployeeNumAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_EMPLOYEE_NUM,values);
    }

    /**
     * Fetch records that have <code>S_GENDER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySGenderAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_GENDER,values);
    }

    /**
     * Fetch records that have <code>S_JOB IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySJobAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_JOB,values);
    }

    /**
     * Fetch records that have <code>S_MARITAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySMaritalAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_MARITAL,values);
    }

    /**
     * Fetch records that have <code>S_NICKNAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySNicknameAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_NICKNAME,values);
    }

    /**
     * Fetch records that have <code>S_REALNAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySRealnameAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_REALNAME,values);
    }

    /**
     * Fetch records that have <code>S_SINID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySSinidAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_SINID,values);
    }

    /**
     * Fetch records that have <code>S_SSNID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySSsnidAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_SSNID,values);
    }

    /**
     * Fetch records that have <code>S_WORK_EMAIL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySWorkEmailAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_WORK_EMAIL,values);
    }

    /**
     * Fetch records that have <code>S_WORK_LOCATION IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySWorkLocationAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_WORK_LOCATION,values);
    }

    /**
     * Fetch records that have <code>S_WORK_PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchBySWorkPhoneAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.S_WORK_PHONE,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>RLT_CAT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByRltCatIdAsync(List<Long> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.RLT_CAT_ID,values);
    }

    /**
     * Fetch records that have <code>R_USER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByRUserIdAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.R_USER_ID,values);
    }

    /**
     * Fetch records that have <code>R_JOB_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByRJobIdAsync(List<Long> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.R_JOB_ID,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.HrEmployee>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(HrEmployee.HR_EMPLOYEE.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
