/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.ResMemberRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResMember extends TableImpl<ResMemberRecord> {

    private static final long serialVersionUID = -589435026;

    /**
     * The reference instance of <code>DB_HTL.RES_MEMBER</code>
     */
    public static final ResMember RES_MEMBER = new ResMember();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResMemberRecord> getRecordType() {
        return ResMemberRecord.class;
    }

    /**
     * The column <code>DB_HTL.RES_MEMBER.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<ResMemberRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.RES_MEMBER.D_BIRTHDAY</code>. birthday,D_BIRTHDAY
     */
    public final TableField<ResMemberRecord, LocalDateTime> D_BIRTHDAY = createField("D_BIRTHDAY", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "birthday,D_BIRTHDAY");

    /**
     * The column <code>DB_HTL.RES_MEMBER.L_POINT</code>. 积分,point,L_POINT
     */
    public final TableField<ResMemberRecord, Long> L_POINT = createField("L_POINT", org.jooq.impl.SQLDataType.BIGINT, this, "积分,point,L_POINT");

    /**
     * The column <code>DB_HTL.RES_MEMBER.S_CODE</code>. code,S_CODE
     */
    public final TableField<ResMemberRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.RES_MEMBER.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public final TableField<ResMemberRecord, String> S_NICKNAME = createField("S_NICKNAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "nickname,S_NICKNAME");

    /**
     * The column <code>DB_HTL.RES_MEMBER.S_PHOTO</code>. photo,S_PHOTO
     */
    public final TableField<ResMemberRecord, String> S_PHOTO = createField("S_PHOTO", org.jooq.impl.SQLDataType.VARCHAR(255), this, "photo,S_PHOTO");

    /**
     * The column <code>DB_HTL.RES_MEMBER.S_REALNAME</code>. realname,S_REALNAME
     */
    public final TableField<ResMemberRecord, String> S_REALNAME = createField("S_REALNAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "realname,S_REALNAME");

    /**
     * The column <code>DB_HTL.RES_MEMBER.S_SERIAL</code>. serial,S_SERIAL
     */
    public final TableField<ResMemberRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(64), this, "serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.RES_MEMBER.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<ResMemberRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.RES_MEMBER.RLT_MBER_LEVEL</code>. 会员等级,level,RLT_MBER_LEVEL
     */
    public final TableField<ResMemberRecord, Long> RLT_MBER_LEVEL = createField("RLT_MBER_LEVEL", org.jooq.impl.SQLDataType.BIGINT, this, "会员等级,level,RLT_MBER_LEVEL");

    /**
     * The column <code>DB_HTL.RES_MEMBER.RLT_MBER_STATUS</code>. 会员状态,status,RLT_MBER_STATUS
     */
    public final TableField<ResMemberRecord, Long> RLT_MBER_STATUS = createField("RLT_MBER_STATUS", org.jooq.impl.SQLDataType.BIGINT, this, "会员状态,status,RLT_MBER_STATUS");

    /**
     * The column <code>DB_HTL.RES_MEMBER.R_USER_ID</code>. userId,R_USER_ID
     */
    public final TableField<ResMemberRecord, String> R_USER_ID = createField("R_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "userId,R_USER_ID");

    /**
     * The column <code>DB_HTL.RES_MEMBER.IS_MALE</code>. 男？true为男，false为女,male,IS_MALE
     */
    public final TableField<ResMemberRecord, Boolean> IS_MALE = createField("IS_MALE", org.jooq.impl.SQLDataType.BOOLEAN, this, "男？true为男，false为女,male,IS_MALE");

    /**
     * The column <code>DB_HTL.RES_MEMBER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<ResMemberRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.RES_MEMBER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<ResMemberRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.RES_MEMBER.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<ResMemberRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.RES_MEMBER.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<ResMemberRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.RES_MEMBER.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<ResMemberRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.RES_MEMBER.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<ResMemberRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.RES_MEMBER.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<ResMemberRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.RES_MEMBER</code> table reference
     */
    public ResMember() {
        this(DSL.name("RES_MEMBER"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.RES_MEMBER</code> table reference
     */
    public ResMember(String alias) {
        this(DSL.name(alias), RES_MEMBER);
    }

    /**
     * Create an aliased <code>DB_HTL.RES_MEMBER</code> table reference
     */
    public ResMember(Name alias) {
        this(alias, RES_MEMBER);
    }

    private ResMember(Name alias, Table<ResMemberRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResMember(Name alias, Table<ResMemberRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RES_MEMBER_PRIMARY, Indexes.RES_MEMBER_UK_RES_MEMBER_R_USER_ID_Z_SIGMA, Indexes.RES_MEMBER_UK_RES_MEMBER_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResMemberRecord> getPrimaryKey() {
        return Keys.KEY_RES_MEMBER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResMemberRecord>> getKeys() {
        return Arrays.<UniqueKey<ResMemberRecord>>asList(Keys.KEY_RES_MEMBER_PRIMARY, Keys.KEY_RES_MEMBER_UK_RES_MEMBER_S_CODE_Z_SIGMA, Keys.KEY_RES_MEMBER_UK_RES_MEMBER_R_USER_ID_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResMember as(String alias) {
        return new ResMember(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResMember as(Name alias) {
        return new ResMember(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResMember rename(String name) {
        return new ResMember(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResMember rename(Name name) {
        return new ResMember(name, null);
    }
}
