/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IPsiWarehouse extends Serializable {

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.PK_ID</code>. uniqueId,PK_ID
     */
    public IPsiWarehouse setPkId(Long value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.PK_ID</code>. uniqueId,PK_ID
     */
    public Long getPkId();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.T_COMMENT</code>. comment,T_COMMENT
     */
    public IPsiWarehouse setTComment(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.T_COMMENT</code>. comment,T_COMMENT
     */
    public String getTComment();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.V_MANAGER_ID</code>. managerId,V_MANAGER_ID
     */
    public IPsiWarehouse setVManagerId(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.V_MANAGER_ID</code>. managerId,V_MANAGER_ID
     */
    public String getVManagerId();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.S_NAME</code>. name,S_NAME
     */
    public IPsiWarehouse setSName(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.S_NAME</code>. name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.S_CODE</code>. code,S_CODE
     */
    public IPsiWarehouse setSCode(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.S_FULLNAME</code>. fullName,S_FULLNAME
     */
    public IPsiWarehouse setSFullname(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.S_FULLNAME</code>. fullName,S_FULLNAME
     */
    public String getSFullname();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.J_CONFIG</code>. config,J_CONFIG
     */
    public IPsiWarehouse setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.H_CAT_ID</code>. category,H_CAT_ID
     */
    public IPsiWarehouse setHCatId(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.H_CAT_ID</code>. category,H_CAT_ID
     */
    public String getHCatId();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.R_LOCATION_ID</code>. locationId,R_LOCATION_ID
     */
    public IPsiWarehouse setRLocationId(Long value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.R_LOCATION_ID</code>. locationId,R_LOCATION_ID
     */
    public Long getRLocationId();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.R_COMPANY_ID</code>. companyId,R_COMPANY_ID
     */
    public IPsiWarehouse setRCompanyId(Long value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.R_COMPANY_ID</code>. companyId,R_COMPANY_ID
     */
    public Long getRCompanyId();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.R_PARNTER_ID</code>. parnterId,R_PARNTER_ID
     */
    public IPsiWarehouse setRParnterId(Long value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.R_PARNTER_ID</code>. parnterId,R_PARNTER_ID
     */
    public Long getRParnterId();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IPsiWarehouse setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IPsiWarehouse setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IPsiWarehouse setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IPsiWarehouse setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IPsiWarehouse setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IPsiWarehouse setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.PSI_WAREHOUSE.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IPsiWarehouse setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.PSI_WAREHOUSE.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IPsiWarehouse
     */
    public void from(up.god.jooq.tables.interfaces.IPsiWarehouse from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IPsiWarehouse
     */
    public <E extends up.god.jooq.tables.interfaces.IPsiWarehouse> E into(E into);

    default IPsiWarehouse fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getLong("PK_ID"));
        setTComment(json.getString("T_COMMENT"));
        setVManagerId(json.getString("V_MANAGER_ID"));
        setSName(json.getString("S_NAME"));
        setSCode(json.getString("S_CODE"));
        setSFullname(json.getString("S_FULLNAME"));
        setJConfig(json.getString("J_CONFIG"));
        setHCatId(json.getString("H_CAT_ID"));
        setRLocationId(json.getLong("R_LOCATION_ID"));
        setRCompanyId(json.getLong("R_COMPANY_ID"));
        setRParnterId(json.getLong("R_PARNTER_ID"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("T_COMMENT",getTComment());
        json.put("V_MANAGER_ID",getVManagerId());
        json.put("S_NAME",getSName());
        json.put("S_CODE",getSCode());
        json.put("S_FULLNAME",getSFullname());
        json.put("J_CONFIG",getJConfig());
        json.put("H_CAT_ID",getHCatId());
        json.put("R_LOCATION_ID",getRLocationId());
        json.put("R_COMPANY_ID",getRCompanyId());
        json.put("R_PARNTER_ID",getRParnterId());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
