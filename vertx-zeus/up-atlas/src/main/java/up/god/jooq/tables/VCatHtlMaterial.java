/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VCatHtlMaterialRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VCatHtlMaterial extends TableImpl<VCatHtlMaterialRecord> {

    private static final long serialVersionUID = 1158280644;

    /**
     * The reference instance of <code>DB_HTL.v_cat_htl_material</code>
     */
    public static final VCatHtlMaterial V_CAT_HTL_MATERIAL = new VCatHtlMaterial();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VCatHtlMaterialRecord> getRecordType() {
        return VCatHtlMaterialRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_cat_htl_material.S_HELP_CODE</code>. helpCode,S_HELP_CODE
     */
    public final TableField<VCatHtlMaterialRecord, String> S_HELP_CODE = createField("S_HELP_CODE", org.jooq.impl.SQLDataType.VARCHAR(32), this, "helpCode,S_HELP_CODE");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.S_PRODUCT_CODE</code>. productCode,S_PRODUCT_CODE
     */
    public final TableField<VCatHtlMaterialRecord, String> S_PRODUCT_CODE = createField("S_PRODUCT_CODE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "productCode,S_PRODUCT_CODE");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.S_PRODUCT_CAT</code>. productCat,S_PRODUCT_CAT
     */
    public final TableField<VCatHtlMaterialRecord, String> S_PRODUCT_CAT = createField("S_PRODUCT_CAT", org.jooq.impl.SQLDataType.VARCHAR(64), this, "productCat,S_PRODUCT_CAT");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.S_UNIT</code>. unit,S_UNIT
     */
    public final TableField<VCatHtlMaterialRecord, String> S_UNIT = createField("S_UNIT", org.jooq.impl.SQLDataType.VARCHAR(10), this, "unit,S_UNIT");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.S_REPOSITORY</code>. repository,S_REPOSITORY
     */
    public final TableField<VCatHtlMaterialRecord, String> S_REPOSITORY = createField("S_REPOSITORY", org.jooq.impl.SQLDataType.VARCHAR(64), this, "repository,S_REPOSITORY");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.S_PIC</code>. pic,S_PIC
     */
    public final TableField<VCatHtlMaterialRecord, String> S_PIC = createField("S_PIC", org.jooq.impl.SQLDataType.VARCHAR(255), this, "pic,S_PIC");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.L_MIN_BALANCE</code>. minBalance,L_MIN_BALANCE
     */
    public final TableField<VCatHtlMaterialRecord, Long> L_MIN_BALANCE = createField("L_MIN_BALANCE", org.jooq.impl.SQLDataType.BIGINT, this, "minBalance,L_MIN_BALANCE");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.L_MAX_BALANCE</code>. maxBalance,L_MAX_BALANCE
     */
    public final TableField<VCatHtlMaterialRecord, Long> L_MAX_BALANCE = createField("L_MAX_BALANCE", org.jooq.impl.SQLDataType.BIGINT, this, "maxBalance,L_MAX_BALANCE");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.L_QUALITYGPERIOD</code>. qualityGperiod,L_QUALITYGPERIOD
     */
    public final TableField<VCatHtlMaterialRecord, Long> L_QUALITYGPERIOD = createField("L_QUALITYGPERIOD", org.jooq.impl.SQLDataType.BIGINT, this, "qualityGperiod,L_QUALITYGPERIOD");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.L_QUALITYAPERIOD</code>. qualityAperiod,L_QUALITYAPERIOD
     */
    public final TableField<VCatHtlMaterialRecord, Long> L_QUALITYAPERIOD = createField("L_QUALITYAPERIOD", org.jooq.impl.SQLDataType.BIGINT, this, "qualityAperiod,L_QUALITYAPERIOD");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.V_INCOME_ID</code>. incomeId,V_INCOME_ID
     */
    public final TableField<VCatHtlMaterialRecord, String> V_INCOME_ID = createField("V_INCOME_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "incomeId,V_INCOME_ID");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.V_COST_ID</code>. costId,V_COST_ID
     */
    public final TableField<VCatHtlMaterialRecord, String> V_COST_ID = createField("V_COST_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "costId,V_COST_ID");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public final TableField<VCatHtlMaterialRecord, Long> R_HOTEL_ID = createField("R_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT, this, "hotelId,R_HOTEL_ID");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.A_S_TYPE</code>. type,S_TYPE
     */
    public final TableField<VCatHtlMaterialRecord, String> A_S_TYPE = createField("A_S_TYPE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "type,S_TYPE");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.V_PAYTERM_ID</code>. 【关联账单】该上挂的账单ID,payTermId,V_PAYTERM_ID
     */
    public final TableField<VCatHtlMaterialRecord, String> V_PAYTERM_ID = createField("V_PAYTERM_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "【关联账单】该上挂的账单ID,payTermId,V_PAYTERM_ID");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.A_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VCatHtlMaterialRecord, Long> A_PK_ID = createField("A_PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.A_S_CODE</code>. code,S_CODE
     */
    public final TableField<VCatHtlMaterialRecord, String> A_S_CODE = createField("A_S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.A_S_NAME</code>. name,S_NAME
     */
    public final TableField<VCatHtlMaterialRecord, String> A_S_NAME = createField("A_S_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<VCatHtlMaterialRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.IS_PRODUCT</code>. product,IS_PRODUCT
     */
    public final TableField<VCatHtlMaterialRecord, Boolean> IS_PRODUCT = createField("IS_PRODUCT", org.jooq.impl.SQLDataType.BOOLEAN, this, "product,IS_PRODUCT");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.C_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VCatHtlMaterialRecord, String> C_PK_ID = createField("C_PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.S_NAME</code>. name,S_NAME
     */
    public final TableField<VCatHtlMaterialRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.C_S_CODE</code>. code,S_CODE
     */
    public final TableField<VCatHtlMaterialRecord, String> C_S_CODE = createField("C_S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.C_S_TYPE</code>. REF：TABULAR -&gt; 类型本身分类，可指定不同模块,type,S_TYPE
     */
    public final TableField<VCatHtlMaterialRecord, String> C_S_TYPE = createField("C_S_TYPE", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "REF：TABULAR -> 类型本身分类，可指定不同模块,type,S_TYPE");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.I_LEFT</code>. left,I_LEFT
     */
    public final TableField<VCatHtlMaterialRecord, Long> I_LEFT = createField("I_LEFT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "left,I_LEFT");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.I_RIGHT</code>. right,I_RIGHT
     */
    public final TableField<VCatHtlMaterialRecord, Long> I_RIGHT = createField("I_RIGHT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "right,I_RIGHT");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.I_LEVEL</code>. level,I_LEVEL
     */
    public final TableField<VCatHtlMaterialRecord, Integer> I_LEVEL = createField("I_LEVEL", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "level,I_LEVEL");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.R_PARENT_ID</code>. parentId,R_PARENT_ID
     */
    public final TableField<VCatHtlMaterialRecord, String> R_PARENT_ID = createField("R_PARENT_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "parentId,R_PARENT_ID");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<VCatHtlMaterialRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.v_cat_htl_material.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<VCatHtlMaterialRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * Create a <code>DB_HTL.v_cat_htl_material</code> table reference
     */
    public VCatHtlMaterial() {
        this(DSL.name("v_cat_htl_material"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_cat_htl_material</code> table reference
     */
    public VCatHtlMaterial(String alias) {
        this(DSL.name(alias), V_CAT_HTL_MATERIAL);
    }

    /**
     * Create an aliased <code>DB_HTL.v_cat_htl_material</code> table reference
     */
    public VCatHtlMaterial(Name alias) {
        this(alias, V_CAT_HTL_MATERIAL);
    }

    private VCatHtlMaterial(Name alias, Table<VCatHtlMaterialRecord> aliased) {
        this(alias, aliased, null);
    }

    private VCatHtlMaterial(Name alias, Table<VCatHtlMaterialRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VCatHtlMaterial as(String alias) {
        return new VCatHtlMaterial(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VCatHtlMaterial as(Name alias) {
        return new VCatHtlMaterial(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VCatHtlMaterial rename(String name) {
        return new VCatHtlMaterial(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VCatHtlMaterial rename(Name name) {
        return new VCatHtlMaterial(name, null);
    }
}
