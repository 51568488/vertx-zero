/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.pojos;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import up.god.jooq.tables.interfaces.IResCurrency;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResCurrency implements IResCurrency {

    private static final long serialVersionUID = -1448845546;

    private Long          pkId;
    private BigDecimal    dRound;
    private String        sName;
    private String        sCode;
    private String        sSymbol;
    private String        jConfig;
    private Integer       iNumber;
    private Boolean       isActive;
    private String        zSigma;
    private String        zLanguage;
    private String        zCreateBy;
    private LocalDateTime zCreateTime;
    private String        zUpdateBy;
    private LocalDateTime zUpdateTime;

    public ResCurrency() {}

    public ResCurrency(ResCurrency value) {
        this.pkId = value.pkId;
        this.dRound = value.dRound;
        this.sName = value.sName;
        this.sCode = value.sCode;
        this.sSymbol = value.sSymbol;
        this.jConfig = value.jConfig;
        this.iNumber = value.iNumber;
        this.isActive = value.isActive;
        this.zSigma = value.zSigma;
        this.zLanguage = value.zLanguage;
        this.zCreateBy = value.zCreateBy;
        this.zCreateTime = value.zCreateTime;
        this.zUpdateBy = value.zUpdateBy;
        this.zUpdateTime = value.zUpdateTime;
    }

    public ResCurrency(
        Long          pkId,
        BigDecimal    dRound,
        String        sName,
        String        sCode,
        String        sSymbol,
        String        jConfig,
        Integer       iNumber,
        Boolean       isActive,
        String        zSigma,
        String        zLanguage,
        String        zCreateBy,
        LocalDateTime zCreateTime,
        String        zUpdateBy,
        LocalDateTime zUpdateTime
    ) {
        this.pkId = pkId;
        this.dRound = dRound;
        this.sName = sName;
        this.sCode = sCode;
        this.sSymbol = sSymbol;
        this.jConfig = jConfig;
        this.iNumber = iNumber;
        this.isActive = isActive;
        this.zSigma = zSigma;
        this.zLanguage = zLanguage;
        this.zCreateBy = zCreateBy;
        this.zCreateTime = zCreateTime;
        this.zUpdateBy = zUpdateBy;
        this.zUpdateTime = zUpdateTime;
    }

    @Override
    public Long getPkId() {
        return this.pkId;
    }

    @Override
    public ResCurrency setPkId(Long pkId) {
        this.pkId = pkId;
        return this;
    }

    @Override
    public BigDecimal getDRound() {
        return this.dRound;
    }

    @Override
    public ResCurrency setDRound(BigDecimal dRound) {
        this.dRound = dRound;
        return this;
    }

    @Override
    public String getSName() {
        return this.sName;
    }

    @Override
    public ResCurrency setSName(String sName) {
        this.sName = sName;
        return this;
    }

    @Override
    public String getSCode() {
        return this.sCode;
    }

    @Override
    public ResCurrency setSCode(String sCode) {
        this.sCode = sCode;
        return this;
    }

    @Override
    public String getSSymbol() {
        return this.sSymbol;
    }

    @Override
    public ResCurrency setSSymbol(String sSymbol) {
        this.sSymbol = sSymbol;
        return this;
    }

    @Override
    public String getJConfig() {
        return this.jConfig;
    }

    @Override
    public ResCurrency setJConfig(String jConfig) {
        this.jConfig = jConfig;
        return this;
    }

    @Override
    public Integer getINumber() {
        return this.iNumber;
    }

    @Override
    public ResCurrency setINumber(Integer iNumber) {
        this.iNumber = iNumber;
        return this;
    }

    @Override
    public Boolean getIsActive() {
        return this.isActive;
    }

    @Override
    public ResCurrency setIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }

    @Override
    public String getZSigma() {
        return this.zSigma;
    }

    @Override
    public ResCurrency setZSigma(String zSigma) {
        this.zSigma = zSigma;
        return this;
    }

    @Override
    public String getZLanguage() {
        return this.zLanguage;
    }

    @Override
    public ResCurrency setZLanguage(String zLanguage) {
        this.zLanguage = zLanguage;
        return this;
    }

    @Override
    public String getZCreateBy() {
        return this.zCreateBy;
    }

    @Override
    public ResCurrency setZCreateBy(String zCreateBy) {
        this.zCreateBy = zCreateBy;
        return this;
    }

    @Override
    public LocalDateTime getZCreateTime() {
        return this.zCreateTime;
    }

    @Override
    public ResCurrency setZCreateTime(LocalDateTime zCreateTime) {
        this.zCreateTime = zCreateTime;
        return this;
    }

    @Override
    public String getZUpdateBy() {
        return this.zUpdateBy;
    }

    @Override
    public ResCurrency setZUpdateBy(String zUpdateBy) {
        this.zUpdateBy = zUpdateBy;
        return this;
    }

    @Override
    public LocalDateTime getZUpdateTime() {
        return this.zUpdateTime;
    }

    @Override
    public ResCurrency setZUpdateTime(LocalDateTime zUpdateTime) {
        this.zUpdateTime = zUpdateTime;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ResCurrency (");

        sb.append(pkId);
        sb.append(", ").append(dRound);
        sb.append(", ").append(sName);
        sb.append(", ").append(sCode);
        sb.append(", ").append(sSymbol);
        sb.append(", ").append(jConfig);
        sb.append(", ").append(iNumber);
        sb.append(", ").append(isActive);
        sb.append(", ").append(zSigma);
        sb.append(", ").append(zLanguage);
        sb.append(", ").append(zCreateBy);
        sb.append(", ").append(zCreateTime);
        sb.append(", ").append(zUpdateBy);
        sb.append(", ").append(zUpdateTime);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IResCurrency from) {
        setPkId(from.getPkId());
        setDRound(from.getDRound());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSSymbol(from.getSSymbol());
        setJConfig(from.getJConfig());
        setINumber(from.getINumber());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IResCurrency> E into(E into) {
        into.from(this);
        return into;
    }

    public ResCurrency(io.vertx.core.json.JsonObject json) {
        fromJson(json);
    }
}
