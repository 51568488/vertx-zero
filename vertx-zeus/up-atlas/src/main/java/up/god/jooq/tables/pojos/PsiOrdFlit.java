/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.pojos;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import up.god.jooq.tables.interfaces.IPsiOrdFlit;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsiOrdFlit implements IPsiOrdFlit {

    private static final long serialVersionUID = -1812869249;

    private String        pkId;
    private String        sName;
    private String        sCode;
    private String        sDelivery;
    private String        sHandler;
    private String        sOperator;
    private String        jConfig;
    private Long          rDeptId;
    private Long          rOrderId;
    private Boolean       isActive;
    private String        zSigma;
    private String        zLanguage;
    private String        zCreateBy;
    private LocalDateTime zCreateTime;
    private String        zUpdateBy;
    private LocalDateTime zUpdateTime;

    public PsiOrdFlit() {}

    public PsiOrdFlit(PsiOrdFlit value) {
        this.pkId = value.pkId;
        this.sName = value.sName;
        this.sCode = value.sCode;
        this.sDelivery = value.sDelivery;
        this.sHandler = value.sHandler;
        this.sOperator = value.sOperator;
        this.jConfig = value.jConfig;
        this.rDeptId = value.rDeptId;
        this.rOrderId = value.rOrderId;
        this.isActive = value.isActive;
        this.zSigma = value.zSigma;
        this.zLanguage = value.zLanguage;
        this.zCreateBy = value.zCreateBy;
        this.zCreateTime = value.zCreateTime;
        this.zUpdateBy = value.zUpdateBy;
        this.zUpdateTime = value.zUpdateTime;
    }

    public PsiOrdFlit(
        String        pkId,
        String        sName,
        String        sCode,
        String        sDelivery,
        String        sHandler,
        String        sOperator,
        String        jConfig,
        Long          rDeptId,
        Long          rOrderId,
        Boolean       isActive,
        String        zSigma,
        String        zLanguage,
        String        zCreateBy,
        LocalDateTime zCreateTime,
        String        zUpdateBy,
        LocalDateTime zUpdateTime
    ) {
        this.pkId = pkId;
        this.sName = sName;
        this.sCode = sCode;
        this.sDelivery = sDelivery;
        this.sHandler = sHandler;
        this.sOperator = sOperator;
        this.jConfig = jConfig;
        this.rDeptId = rDeptId;
        this.rOrderId = rOrderId;
        this.isActive = isActive;
        this.zSigma = zSigma;
        this.zLanguage = zLanguage;
        this.zCreateBy = zCreateBy;
        this.zCreateTime = zCreateTime;
        this.zUpdateBy = zUpdateBy;
        this.zUpdateTime = zUpdateTime;
    }

    @Override
    public String getPkId() {
        return this.pkId;
    }

    @Override
    public PsiOrdFlit setPkId(String pkId) {
        this.pkId = pkId;
        return this;
    }

    @Override
    public String getSName() {
        return this.sName;
    }

    @Override
    public PsiOrdFlit setSName(String sName) {
        this.sName = sName;
        return this;
    }

    @Override
    public String getSCode() {
        return this.sCode;
    }

    @Override
    public PsiOrdFlit setSCode(String sCode) {
        this.sCode = sCode;
        return this;
    }

    @Override
    public String getSDelivery() {
        return this.sDelivery;
    }

    @Override
    public PsiOrdFlit setSDelivery(String sDelivery) {
        this.sDelivery = sDelivery;
        return this;
    }

    @Override
    public String getSHandler() {
        return this.sHandler;
    }

    @Override
    public PsiOrdFlit setSHandler(String sHandler) {
        this.sHandler = sHandler;
        return this;
    }

    @Override
    public String getSOperator() {
        return this.sOperator;
    }

    @Override
    public PsiOrdFlit setSOperator(String sOperator) {
        this.sOperator = sOperator;
        return this;
    }

    @Override
    public String getJConfig() {
        return this.jConfig;
    }

    @Override
    public PsiOrdFlit setJConfig(String jConfig) {
        this.jConfig = jConfig;
        return this;
    }

    @Override
    public Long getRDeptId() {
        return this.rDeptId;
    }

    @Override
    public PsiOrdFlit setRDeptId(Long rDeptId) {
        this.rDeptId = rDeptId;
        return this;
    }

    @Override
    public Long getROrderId() {
        return this.rOrderId;
    }

    @Override
    public PsiOrdFlit setROrderId(Long rOrderId) {
        this.rOrderId = rOrderId;
        return this;
    }

    @Override
    public Boolean getIsActive() {
        return this.isActive;
    }

    @Override
    public PsiOrdFlit setIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }

    @Override
    public String getZSigma() {
        return this.zSigma;
    }

    @Override
    public PsiOrdFlit setZSigma(String zSigma) {
        this.zSigma = zSigma;
        return this;
    }

    @Override
    public String getZLanguage() {
        return this.zLanguage;
    }

    @Override
    public PsiOrdFlit setZLanguage(String zLanguage) {
        this.zLanguage = zLanguage;
        return this;
    }

    @Override
    public String getZCreateBy() {
        return this.zCreateBy;
    }

    @Override
    public PsiOrdFlit setZCreateBy(String zCreateBy) {
        this.zCreateBy = zCreateBy;
        return this;
    }

    @Override
    public LocalDateTime getZCreateTime() {
        return this.zCreateTime;
    }

    @Override
    public PsiOrdFlit setZCreateTime(LocalDateTime zCreateTime) {
        this.zCreateTime = zCreateTime;
        return this;
    }

    @Override
    public String getZUpdateBy() {
        return this.zUpdateBy;
    }

    @Override
    public PsiOrdFlit setZUpdateBy(String zUpdateBy) {
        this.zUpdateBy = zUpdateBy;
        return this;
    }

    @Override
    public LocalDateTime getZUpdateTime() {
        return this.zUpdateTime;
    }

    @Override
    public PsiOrdFlit setZUpdateTime(LocalDateTime zUpdateTime) {
        this.zUpdateTime = zUpdateTime;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PsiOrdFlit (");

        sb.append(pkId);
        sb.append(", ").append(sName);
        sb.append(", ").append(sCode);
        sb.append(", ").append(sDelivery);
        sb.append(", ").append(sHandler);
        sb.append(", ").append(sOperator);
        sb.append(", ").append(jConfig);
        sb.append(", ").append(rDeptId);
        sb.append(", ").append(rOrderId);
        sb.append(", ").append(isActive);
        sb.append(", ").append(zSigma);
        sb.append(", ").append(zLanguage);
        sb.append(", ").append(zCreateBy);
        sb.append(", ").append(zCreateTime);
        sb.append(", ").append(zUpdateBy);
        sb.append(", ").append(zUpdateTime);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IPsiOrdFlit from) {
        setPkId(from.getPkId());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSDelivery(from.getSDelivery());
        setSHandler(from.getSHandler());
        setSOperator(from.getSOperator());
        setJConfig(from.getJConfig());
        setRDeptId(from.getRDeptId());
        setROrderId(from.getROrderId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IPsiOrdFlit> E into(E into) {
        into.from(this);
        return into;
    }

    public PsiOrdFlit(io.vertx.core.json.JsonObject json) {
        fromJson(json);
    }
}
