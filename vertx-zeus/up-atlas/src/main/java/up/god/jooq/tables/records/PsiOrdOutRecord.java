/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;

import up.god.jooq.tables.PsiOrdOut;
import up.god.jooq.tables.interfaces.IPsiOrdOut;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsiOrdOutRecord extends UpdatableRecordImpl<PsiOrdOutRecord> implements Record17<String, String, String, String, String, String, String, Long, Long, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IPsiOrdOut {

    private static final long serialVersionUID = 1738766534;

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public PsiOrdOutRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.S_NAME</code>. name,S_NAME
     */
    @Override
    public PsiOrdOutRecord setSName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.S_NAME</code>. name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.S_CODE</code>. code,S_CODE
     */
    @Override
    public PsiOrdOutRecord setSCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.S_GODOWN</code>. 出库人,godown,S_GODOWN
     */
    @Override
    public PsiOrdOutRecord setSGodown(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.S_GODOWN</code>. 出库人,godown,S_GODOWN
     */
    @Override
    public String getSGodown() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.S_MANAGER</code>. 经理,manager,S_MANAGER
     */
    @Override
    public PsiOrdOutRecord setSManager(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.S_MANAGER</code>. 经理,manager,S_MANAGER
     */
    @Override
    public String getSManager() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.S_OPERATOR</code>. 开单人,operator,S_OPERATOR
     */
    @Override
    public PsiOrdOutRecord setSOperator(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.S_OPERATOR</code>. 开单人,operator,S_OPERATOR
     */
    @Override
    public String getSOperator() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public PsiOrdOutRecord setJConfig(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.R_DEPT_ID</code>. departmentId,R_DEPT_ID
     */
    @Override
    public PsiOrdOutRecord setRDeptId(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.R_DEPT_ID</code>. departmentId,R_DEPT_ID
     */
    @Override
    public Long getRDeptId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.R_ORDER_ID</code>. orderId,R_ORDER_ID
     */
    @Override
    public PsiOrdOutRecord setROrderId(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.R_ORDER_ID</code>. orderId,R_ORDER_ID
     */
    @Override
    public Long getROrderId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.R_WH_OUT_ID</code>. warehouseId,R_WH_OUT_ID
     */
    @Override
    public PsiOrdOutRecord setRWhOutId(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.R_WH_OUT_ID</code>. warehouseId,R_WH_OUT_ID
     */
    @Override
    public Long getRWhOutId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public PsiOrdOutRecord setIsActive(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public PsiOrdOutRecord setZSigma(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public PsiOrdOutRecord setZLanguage(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public PsiOrdOutRecord setZCreateBy(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public PsiOrdOutRecord setZCreateTime(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public PsiOrdOutRecord setZUpdateBy(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_HTL.PSI_ORD_OUT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public PsiOrdOutRecord setZUpdateTime(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.PSI_ORD_OUT.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<String, String, String, String, String, String, String, Long, Long, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<String, String, String, String, String, String, String, Long, Long, Long, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row17) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return PsiOrdOut.PSI_ORD_OUT.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PsiOrdOut.PSI_ORD_OUT.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PsiOrdOut.PSI_ORD_OUT.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return PsiOrdOut.PSI_ORD_OUT.S_GODOWN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return PsiOrdOut.PSI_ORD_OUT.S_MANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return PsiOrdOut.PSI_ORD_OUT.S_OPERATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return PsiOrdOut.PSI_ORD_OUT.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return PsiOrdOut.PSI_ORD_OUT.R_DEPT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return PsiOrdOut.PSI_ORD_OUT.R_ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return PsiOrdOut.PSI_ORD_OUT.R_WH_OUT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field11() {
        return PsiOrdOut.PSI_ORD_OUT.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return PsiOrdOut.PSI_ORD_OUT.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return PsiOrdOut.PSI_ORD_OUT.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return PsiOrdOut.PSI_ORD_OUT.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field15() {
        return PsiOrdOut.PSI_ORD_OUT.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return PsiOrdOut.PSI_ORD_OUT.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field17() {
        return PsiOrdOut.PSI_ORD_OUT.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSGodown();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSManager();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component8() {
        return getRDeptId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getROrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component10() {
        return getRWhOutId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component11() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component15() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component17() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSGodown();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSManager();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getRDeptId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getROrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getRWhOutId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value11() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value15() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value17() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value2(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value3(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value4(String value) {
        setSGodown(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value5(String value) {
        setSManager(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value6(String value) {
        setSOperator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value7(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value8(Long value) {
        setRDeptId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value9(Long value) {
        setROrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value10(Long value) {
        setRWhOutId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value11(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value12(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value13(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value14(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value15(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value16(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord value17(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PsiOrdOutRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, Long value8, Long value9, Long value10, Boolean value11, String value12, String value13, String value14, LocalDateTime value15, String value16, LocalDateTime value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IPsiOrdOut from) {
        setPkId(from.getPkId());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSGodown(from.getSGodown());
        setSManager(from.getSManager());
        setSOperator(from.getSOperator());
        setJConfig(from.getJConfig());
        setRDeptId(from.getRDeptId());
        setROrderId(from.getROrderId());
        setRWhOutId(from.getRWhOutId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IPsiOrdOut> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PsiOrdOutRecord
     */
    public PsiOrdOutRecord() {
        super(PsiOrdOut.PSI_ORD_OUT);
    }

    /**
     * Create a detached, initialised PsiOrdOutRecord
     */
    public PsiOrdOutRecord(String pkId, String sName, String sCode, String sGodown, String sManager, String sOperator, String jConfig, Long rDeptId, Long rOrderId, Long rWhOutId, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(PsiOrdOut.PSI_ORD_OUT);

        set(0, pkId);
        set(1, sName);
        set(2, sCode);
        set(3, sGodown);
        set(4, sManager);
        set(5, sOperator);
        set(6, jConfig);
        set(7, rDeptId);
        set(8, rOrderId);
        set(9, rWhOutId);
        set(10, isActive);
        set(11, zSigma);
        set(12, zLanguage);
        set(13, zCreateBy);
        set(14, zCreateTime);
        set(15, zUpdateBy);
        set(16, zUpdateTime);
    }
}
