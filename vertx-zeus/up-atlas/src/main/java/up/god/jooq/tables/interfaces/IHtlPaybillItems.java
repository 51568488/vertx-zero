/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IHtlPaybillItems extends Serializable {

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.PK_ID</code>. uniqueId,PK_ID
     */
    public IHtlPaybillItems setPkId(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_AMOUNT_ACTUAL</code>. 【实际总价】实际给付结果,amountActual,D_AMOUNT_ACTUAL
     */
    public IHtlPaybillItems setDAmountActual(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_AMOUNT_ACTUAL</code>. 【实际总价】实际给付结果,amountActual,D_AMOUNT_ACTUAL
     */
    public BigDecimal getDAmountActual();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_AMOUNT_TOTAL</code>. 【总价】理论计算结果,amountTotal,D_AMOUNT_TOTAL
     */
    public IHtlPaybillItems setDAmountTotal(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_AMOUNT_TOTAL</code>. 【总价】理论计算结果,amountTotal,D_AMOUNT_TOTAL
     */
    public BigDecimal getDAmountTotal();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_FINISHED_DATE</code>. finishedDate,D_FINISHED_DATE
     */
    public IHtlPaybillItems setDFinishedDate(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_FINISHED_DATE</code>. finishedDate,D_FINISHED_DATE
     */
    public LocalDateTime getDFinishedDate();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_OPERATE_DATE</code>. operateDate,D_OPERATE_DATE
     */
    public IHtlPaybillItems setDOperateDate(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_OPERATE_DATE</code>. operateDate,D_OPERATE_DATE
     */
    public LocalDateTime getDOperateDate();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_PRICE</code>. 【单价】商品的单价。,price,D_PRICE
     */
    public IHtlPaybillItems setDPrice(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.D_PRICE</code>. 【单价】商品的单价。,price,D_PRICE
     */
    public BigDecimal getDPrice();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public IHtlPaybillItems setTComment(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.T_COMMENT</code>. 【备注】账单相关备注信息,comment,T_COMMENT
     */
    public String getTComment();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_CODE</code>. code,S_CODE
     */
    public IHtlPaybillItems setSCode(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_BRIEF</code>. 【简单备注】,brief,S_BRIEF
     */
    public IHtlPaybillItems setSBrief(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_BRIEF</code>. 【简单备注】,brief,S_BRIEF
     */
    public String getSBrief();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_EMPLOYEE_NO</code>. 【工号】,employeeNo,S_EMPLOYEE_NO
     */
    public IHtlPaybillItems setSEmployeeNo(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_EMPLOYEE_NO</code>. 【工号】,employeeNo,S_EMPLOYEE_NO
     */
    public String getSEmployeeNo();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_MANUAL_NO</code>. 【账单手工单号】,manualNo,S_MANUAL_NO
     */
    public IHtlPaybillItems setSManualNo(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_MANUAL_NO</code>. 【账单手工单号】,manualNo,S_MANUAL_NO
     */
    public String getSManualNo();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_SERIAL</code>. 【账单唯一编号】系统内部使用,serial,S_SERIAL
     */
    public IHtlPaybillItems setSSerial(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_SERIAL</code>. 【账单唯一编号】系统内部使用,serial,S_SERIAL
     */
    public String getSSerial();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_SHIFT</code>. 【班次】保存结果，同房号字段,shift,S_SHIFT
     */
    public IHtlPaybillItems setSShift(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_SHIFT</code>. 【班次】保存结果，同房号字段,shift,S_SHIFT
     */
    public String getSShift();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_TRANSFER</code>. 【账单流转】,transfer,S_TRANSFER
     */
    public IHtlPaybillItems setSTransfer(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.S_TRANSFER</code>. 【账单流转】,transfer,S_TRANSFER
     */
    public String getSTransfer();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.J_CONFIG</code>. config,J_CONFIG
     */
    public IHtlPaybillItems setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_LEFT</code>. left,I_LEFT
     */
    public IHtlPaybillItems setILeft(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_LEFT</code>. left,I_LEFT
     */
    public Long getILeft();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_LEVEL</code>. level,I_LEVEL
     */
    public IHtlPaybillItems setILevel(Integer value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_LEVEL</code>. level,I_LEVEL
     */
    public Integer getILevel();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_QUANTITY</code>. 【数量】商品数量,quantity,I_QUANTITY
     */
    public IHtlPaybillItems setIQuantity(Integer value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_QUANTITY</code>. 【数量】商品数量,quantity,I_QUANTITY
     */
    public Integer getIQuantity();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_RIGHT</code>. right,I_RIGHT
     */
    public IHtlPaybillItems setIRight(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_RIGHT</code>. right,I_RIGHT
     */
    public Long getIRight();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_SEQUENCE</code>. 序号,sequence,I_SEQUENCE
     */
    public IHtlPaybillItems setISequence(Integer value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.I_SEQUENCE</code>. 序号,sequence,I_SEQUENCE
     */
    public Integer getISequence();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.RLT_BILL_TYPE</code>. REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE
     */
    public IHtlPaybillItems setRltBillType(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.RLT_BILL_TYPE</code>. REF: SYS_TABULAR【账单类型】,billType,RLT_BILL_TYPE
     */
    public Long getRltBillType();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.RLT_VALID</code>. 【账单状态】，如：拆帐后原始账单不为valid, bill.filter.type,valid,RLT_VALID
     */
    public IHtlPaybillItems setRltValid(Long value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.RLT_VALID</code>. 【账单状态】，如：拆帐后原始账单不为valid, bill.filter.type,valid,RLT_VALID
     */
    public Long getRltValid();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.R_PARENT_ID</code>. REF: HTL_PAYBILL_ITEMS 关联拆帐上级 ID,parentId,R_PARENT_ID
     */
    public IHtlPaybillItems setRParentId(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.R_PARENT_ID</code>. REF: HTL_PAYBILL_ITEMS 关联拆帐上级 ID,parentId,R_PARENT_ID
     */
    public String getRParentId();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.R_PAYBILL_ID</code>. REF: HTL_PAYBILL 关联账单ID,payBillId,R_PAYBILL_ID
     */
    public IHtlPaybillItems setRPaybillId(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.R_PAYBILL_ID</code>. REF: HTL_PAYBILL 关联账单ID,payBillId,R_PAYBILL_ID
     */
    public String getRPaybillId();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.R_PAYTERM_ID</code>. REF: ATM_PAYTERM【消费项】关联消费项ID,ptermId,R_PAYTERM_ID
     */
    public IHtlPaybillItems setRPaytermId(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.R_PAYTERM_ID</code>. REF: ATM_PAYTERM【消费项】关联消费项ID,ptermId,R_PAYTERM_ID
     */
    public String getRPaytermId();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.IS_FINISHED</code>. 是否已结算,finished,IS_FINISHED
     */
    public IHtlPaybillItems setIsFinished(Boolean value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.IS_FINISHED</code>. 是否已结算,finished,IS_FINISHED
     */
    public Boolean getIsFinished();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.IS_INCOME</code>. 【账单方向】，income为true入帐，否则为出帐,income,IS_INCOME
     */
    public IHtlPaybillItems setIsIncome(Boolean value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.IS_INCOME</code>. 【账单方向】，income为true入帐，否则为出帐,income,IS_INCOME
     */
    public Boolean getIsIncome();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IHtlPaybillItems setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IHtlPaybillItems setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IHtlPaybillItems setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IHtlPaybillItems setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IHtlPaybillItems setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IHtlPaybillItems setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IHtlPaybillItems setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.HTL_PAYBILL_ITEMS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IHtlPaybillItems
     */
    public void from(up.god.jooq.tables.interfaces.IHtlPaybillItems from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IHtlPaybillItems
     */
    public <E extends up.god.jooq.tables.interfaces.IHtlPaybillItems> E into(E into);

    default IHtlPaybillItems fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_TOTAL!
        // Omitting unrecognized type java.time.LocalDateTime for column D_FINISHED_DATE!
        // Omitting unrecognized type java.time.LocalDateTime for column D_OPERATE_DATE!
        // Omitting unrecognized type java.math.BigDecimal for column D_PRICE!
        setTComment(json.getString("T_COMMENT"));
        setSCode(json.getString("S_CODE"));
        setSBrief(json.getString("S_BRIEF"));
        setSEmployeeNo(json.getString("S_EMPLOYEE_NO"));
        setSManualNo(json.getString("S_MANUAL_NO"));
        setSSerial(json.getString("S_SERIAL"));
        setSShift(json.getString("S_SHIFT"));
        setSTransfer(json.getString("S_TRANSFER"));
        setJConfig(json.getString("J_CONFIG"));
        setILeft(json.getLong("I_LEFT"));
        setILevel(json.getInteger("I_LEVEL"));
        setIQuantity(json.getInteger("I_QUANTITY"));
        setIRight(json.getLong("I_RIGHT"));
        setISequence(json.getInteger("I_SEQUENCE"));
        setRltBillType(json.getLong("RLT_BILL_TYPE"));
        setRltValid(json.getLong("RLT_VALID"));
        setRParentId(json.getString("R_PARENT_ID"));
        setRPaybillId(json.getString("R_PAYBILL_ID"));
        setRPaytermId(json.getString("R_PAYTERM_ID"));
        setIsFinished(json.getBoolean("IS_FINISHED"));
        setIsIncome(json.getBoolean("IS_INCOME"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_TOTAL!
        // Omitting unrecognized type java.time.LocalDateTime for column D_FINISHED_DATE!
        // Omitting unrecognized type java.time.LocalDateTime for column D_OPERATE_DATE!
        // Omitting unrecognized type java.math.BigDecimal for column D_PRICE!
        json.put("T_COMMENT",getTComment());
        json.put("S_CODE",getSCode());
        json.put("S_BRIEF",getSBrief());
        json.put("S_EMPLOYEE_NO",getSEmployeeNo());
        json.put("S_MANUAL_NO",getSManualNo());
        json.put("S_SERIAL",getSSerial());
        json.put("S_SHIFT",getSShift());
        json.put("S_TRANSFER",getSTransfer());
        json.put("J_CONFIG",getJConfig());
        json.put("I_LEFT",getILeft());
        json.put("I_LEVEL",getILevel());
        json.put("I_QUANTITY",getIQuantity());
        json.put("I_RIGHT",getIRight());
        json.put("I_SEQUENCE",getISequence());
        json.put("RLT_BILL_TYPE",getRltBillType());
        json.put("RLT_VALID",getRltValid());
        json.put("R_PARENT_ID",getRParentId());
        json.put("R_PAYBILL_ID",getRPaybillId());
        json.put("R_PAYTERM_ID",getRPaytermId());
        json.put("IS_FINISHED",getIsFinished());
        json.put("IS_INCOME",getIsIncome());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
