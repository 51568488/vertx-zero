/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VHtlHotelRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VHtlHotel extends TableImpl<VHtlHotelRecord> {

    private static final long serialVersionUID = 160711544;

    /**
     * The reference instance of <code>DB_HTL.v_htl_hotel</code>
     */
    public static final VHtlHotel V_HTL_HOTEL = new VHtlHotel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VHtlHotelRecord> getRecordType() {
        return VHtlHotelRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_HOTEL_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlHotelRecord, Long> S_HOTEL_ID = createField("S_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_hotel.H_S_CODE</code>. code,S_CODE
     */
    public final TableField<VHtlHotelRecord, String> H_S_CODE = createField("H_S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_NAME</code>. name,S_NAME
     */
    public final TableField<VHtlHotelRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_LOGO</code>. logo,S_LOGO
     */
    public final TableField<VHtlHotelRecord, String> S_LOGO = createField("S_LOGO", org.jooq.impl.SQLDataType.VARCHAR(255), this, "logo,S_LOGO");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_AGENT</code>. 代理，联系人,agent,S_AGENT
     */
    public final TableField<VHtlHotelRecord, String> S_AGENT = createField("S_AGENT", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "代理，联系人,agent,S_AGENT");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_CALL</code>. 联系电话,call,S_CALL
     */
    public final TableField<VHtlHotelRecord, String> S_CALL = createField("S_CALL", org.jooq.impl.SQLDataType.VARCHAR(20), this, "联系电话,call,S_CALL");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_ONLINE</code>. 在线联系方式，QQ号，或？,online,S_ONLINE
     */
    public final TableField<VHtlHotelRecord, String> S_ONLINE = createField("S_ONLINE", org.jooq.impl.SQLDataType.VARCHAR(20), this, "在线联系方式，QQ号，或？,online,S_ONLINE");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_EMAIL</code>. email,S_EMAIL
     */
    public final TableField<VHtlHotelRecord, String> S_EMAIL = createField("S_EMAIL", org.jooq.impl.SQLDataType.VARCHAR(20), this, "email,S_EMAIL");

    /**
     * The column <code>DB_HTL.v_htl_hotel.R_LOCATION_ID</code>. locationId,R_LOCATION_ID
     */
    public final TableField<VHtlHotelRecord, Long> R_LOCATION_ID = createField("R_LOCATION_ID", org.jooq.impl.SQLDataType.BIGINT, this, "locationId,R_LOCATION_ID");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_LOCATION_NAME</code>. name,S_NAME
     */
    public final TableField<VHtlHotelRecord, String> S_LOCATION_NAME = createField("S_LOCATION_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_CODE</code>. code,S_CODE
     */
    public final TableField<VHtlHotelRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_ADDRESS</code>. address,S_ADDRESS
     */
    public final TableField<VHtlHotelRecord, String> S_ADDRESS = createField("S_ADDRESS", org.jooq.impl.SQLDataType.VARCHAR(255), this, "address,S_ADDRESS");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_FULLNAME</code>. 地址全称，通过计算出来的,fullName,S_FULLNAME
     */
    public final TableField<VHtlHotelRecord, String> S_FULLNAME = createField("S_FULLNAME", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "地址全称，通过计算出来的,fullName,S_FULLNAME");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_STREET1</code>. street1,S_STREET1
     */
    public final TableField<VHtlHotelRecord, String> S_STREET1 = createField("S_STREET1", org.jooq.impl.SQLDataType.VARCHAR(72), this, "street1,S_STREET1");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_STREET2</code>. street2,S_STREET2
     */
    public final TableField<VHtlHotelRecord, String> S_STREET2 = createField("S_STREET2", org.jooq.impl.SQLDataType.VARCHAR(72), this, "street2,S_STREET2");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_STREET3</code>. street3,S_STREET3
     */
    public final TableField<VHtlHotelRecord, String> S_STREET3 = createField("S_STREET3", org.jooq.impl.SQLDataType.VARCHAR(72), this, "street3,S_STREET3");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_ZIP</code>. zip,S_ZIP
     */
    public final TableField<VHtlHotelRecord, String> S_ZIP = createField("S_ZIP", org.jooq.impl.SQLDataType.VARCHAR(16), this, "zip,S_ZIP");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_COUNTRY</code>. country,S_COUNTRY
     */
    public final TableField<VHtlHotelRecord, String> S_COUNTRY = createField("S_COUNTRY", org.jooq.impl.SQLDataType.VARCHAR(32), this, "country,S_COUNTRY");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_STATE</code>. state,S_STATE
     */
    public final TableField<VHtlHotelRecord, String> S_STATE = createField("S_STATE", org.jooq.impl.SQLDataType.VARCHAR(32), this, "state,S_STATE");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_CITY</code>. city,S_CITY
     */
    public final TableField<VHtlHotelRecord, String> S_CITY = createField("S_CITY", org.jooq.impl.SQLDataType.VARCHAR(32), this, "city,S_CITY");

    /**
     * The column <code>DB_HTL.v_htl_hotel.S_DISTINCT</code>. distinct,S_DISTINCT
     */
    public final TableField<VHtlHotelRecord, String> S_DISTINCT = createField("S_DISTINCT", org.jooq.impl.SQLDataType.VARCHAR(32), this, "distinct,S_DISTINCT");

    /**
     * The column <code>DB_HTL.v_htl_hotel.R_DISTINCT_ID</code>. distinctId,R_DISTINCT_ID
     */
    public final TableField<VHtlHotelRecord, Long> R_DISTINCT_ID = createField("R_DISTINCT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "distinctId,R_DISTINCT_ID");

    /**
     * The column <code>DB_HTL.v_htl_hotel.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<VHtlHotelRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.v_htl_hotel.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<VHtlHotelRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.v_htl_hotel.R_EMPLOYEE_ID</code>. employeeId,R_EMPLOYEE_ID
     */
    public final TableField<VHtlHotelRecord, Long> R_EMPLOYEE_ID = createField("R_EMPLOYEE_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "employeeId,R_EMPLOYEE_ID");

    /**
     * The column <code>DB_HTL.v_htl_hotel.R_COMPANY_ID</code>. companyId,R_COMPANY_ID
     */
    public final TableField<VHtlHotelRecord, Long> R_COMPANY_ID = createField("R_COMPANY_ID", org.jooq.impl.SQLDataType.BIGINT, this, "companyId,R_COMPANY_ID");

    /**
     * Create a <code>DB_HTL.v_htl_hotel</code> table reference
     */
    public VHtlHotel() {
        this(DSL.name("v_htl_hotel"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_hotel</code> table reference
     */
    public VHtlHotel(String alias) {
        this(DSL.name(alias), V_HTL_HOTEL);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_hotel</code> table reference
     */
    public VHtlHotel(Name alias) {
        this(alias, V_HTL_HOTEL);
    }

    private VHtlHotel(Name alias, Table<VHtlHotelRecord> aliased) {
        this(alias, aliased, null);
    }

    private VHtlHotel(Name alias, Table<VHtlHotelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlHotel as(String alias) {
        return new VHtlHotel(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlHotel as(Name alias) {
        return new VHtlHotel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlHotel rename(String name) {
        return new VHtlHotel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlHotel rename(Name name) {
        return new VHtlHotel(name, null);
    }
}
