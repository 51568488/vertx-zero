/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.ResIdcRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResIdc extends TableImpl<ResIdcRecord> {

    private static final long serialVersionUID = 1854364774;

    /**
     * The reference instance of <code>DB_HTL.RES_IDC</code>
     */
    public static final ResIdc RES_IDC = new ResIdc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResIdcRecord> getRecordType() {
        return ResIdcRecord.class;
    }

    /**
     * The column <code>DB_HTL.RES_IDC.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<ResIdcRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.RES_IDC.D_EXPIRED_TIME</code>. 过期时间,expiredTime,D_EXPIRED_TIME
     */
    public final TableField<ResIdcRecord, LocalDateTime> D_EXPIRED_TIME = createField("D_EXPIRED_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "过期时间,expiredTime,D_EXPIRED_TIME");

    /**
     * The column <code>DB_HTL.RES_IDC.S_CODE</code>. code,S_CODE
     */
    public final TableField<ResIdcRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.RES_IDC.S_BACK</code>. 证件背面,back,S_BACK
     */
    public final TableField<ResIdcRecord, String> S_BACK = createField("S_BACK", org.jooq.impl.SQLDataType.VARCHAR(255), this, "证件背面,back,S_BACK");

    /**
     * The column <code>DB_HTL.RES_IDC.S_COUNTRY</code>. country,S_COUNTRY
     */
    public final TableField<ResIdcRecord, String> S_COUNTRY = createField("S_COUNTRY", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "country,S_COUNTRY");

    /**
     * The column <code>DB_HTL.RES_IDC.S_FRONT</code>. 证件正面,front,S_FRONT
     */
    public final TableField<ResIdcRecord, String> S_FRONT = createField("S_FRONT", org.jooq.impl.SQLDataType.VARCHAR(255), this, "证件正面,front,S_FRONT");

    /**
     * The column <code>DB_HTL.RES_IDC.S_IDC_NUMBER</code>. 证件号,idcNumber,S_IDC_NUMBER
     */
    public final TableField<ResIdcRecord, String> S_IDC_NUMBER = createField("S_IDC_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "证件号,idcNumber,S_IDC_NUMBER");

    /**
     * The column <code>DB_HTL.RES_IDC.S_NATIVE_PLACE</code>. 籍贯,nativePlace,S_NATIVE_PLACE
     */
    public final TableField<ResIdcRecord, String> S_NATIVE_PLACE = createField("S_NATIVE_PLACE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "籍贯,nativePlace,S_NATIVE_PLACE");

    /**
     * The column <code>DB_HTL.RES_IDC.S_REALNAME</code>. 真实姓名,realname,S_REALNAME
     */
    public final TableField<ResIdcRecord, String> S_REALNAME = createField("S_REALNAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "真实姓名,realname,S_REALNAME");

    /**
     * The column <code>DB_HTL.RES_IDC.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<ResIdcRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.RES_IDC.RLT_IDC_TYPE</code>. 证件类型,idcType,RLT_IDC_TYPE
     */
    public final TableField<ResIdcRecord, Long> RLT_IDC_TYPE = createField("RLT_IDC_TYPE", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "证件类型,idcType,RLT_IDC_TYPE");

    /**
     * The column <code>DB_HTL.RES_IDC.R_USER_ID</code>. userId,R_USER_ID
     */
    public final TableField<ResIdcRecord, String> R_USER_ID = createField("R_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "userId,R_USER_ID");

    /**
     * The column <code>DB_HTL.RES_IDC.R_LOCATION_ID</code>. locationId,R_LOCATION_ID
     */
    public final TableField<ResIdcRecord, Long> R_LOCATION_ID = createField("R_LOCATION_ID", org.jooq.impl.SQLDataType.BIGINT, this, "locationId,R_LOCATION_ID");

    /**
     * The column <code>DB_HTL.RES_IDC.IS_VERIFIED</code>. 是否通过验证,verified,IS_VERIFIED
     */
    public final TableField<ResIdcRecord, Boolean> IS_VERIFIED = createField("IS_VERIFIED", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "是否通过验证,verified,IS_VERIFIED");

    /**
     * The column <code>DB_HTL.RES_IDC.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<ResIdcRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.RES_IDC.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<ResIdcRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.RES_IDC.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<ResIdcRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.RES_IDC.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<ResIdcRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.RES_IDC.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<ResIdcRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.RES_IDC.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<ResIdcRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.RES_IDC.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<ResIdcRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.RES_IDC</code> table reference
     */
    public ResIdc() {
        this(DSL.name("RES_IDC"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.RES_IDC</code> table reference
     */
    public ResIdc(String alias) {
        this(DSL.name(alias), RES_IDC);
    }

    /**
     * Create an aliased <code>DB_HTL.RES_IDC</code> table reference
     */
    public ResIdc(Name alias) {
        this(alias, RES_IDC);
    }

    private ResIdc(Name alias, Table<ResIdcRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResIdc(Name alias, Table<ResIdcRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RES_IDC_FK_RES_IDC_R_LOCATION_ID, Indexes.RES_IDC_FK_RES_IDC_R_USER_ID, Indexes.RES_IDC_PRIMARY, Indexes.RES_IDC_UK_RES_IDC_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResIdcRecord> getPrimaryKey() {
        return Keys.KEY_RES_IDC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResIdcRecord>> getKeys() {
        return Arrays.<UniqueKey<ResIdcRecord>>asList(Keys.KEY_RES_IDC_PRIMARY, Keys.KEY_RES_IDC_UK_RES_IDC_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResIdc as(String alias) {
        return new ResIdc(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResIdc as(Name alias) {
        return new ResIdc(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResIdc rename(String name) {
        return new ResIdc(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResIdc rename(Name name) {
        return new ResIdc(name, null);
    }
}
