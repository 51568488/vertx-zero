/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.HtlHotelRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlHotel extends TableImpl<HtlHotelRecord> {

    private static final long serialVersionUID = 1686002449;

    /**
     * The reference instance of <code>DB_HTL.HTL_HOTEL</code>
     */
    public static final HtlHotel HTL_HOTEL = new HtlHotel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HtlHotelRecord> getRecordType() {
        return HtlHotelRecord.class;
    }

    /**
     * The column <code>DB_HTL.HTL_HOTEL.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<HtlHotelRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.S_NAME</code>. name,S_NAME
     */
    public final TableField<HtlHotelRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.S_CODE</code>. code,S_CODE
     */
    public final TableField<HtlHotelRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.S_AGENT</code>. 代理，联系人,agent,S_AGENT
     */
    public final TableField<HtlHotelRecord, String> S_AGENT = createField("S_AGENT", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "代理，联系人,agent,S_AGENT");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.S_CALL</code>. 联系电话,call,S_CALL
     */
    public final TableField<HtlHotelRecord, String> S_CALL = createField("S_CALL", org.jooq.impl.SQLDataType.VARCHAR(20), this, "联系电话,call,S_CALL");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.S_EMAIL</code>. email,S_EMAIL
     */
    public final TableField<HtlHotelRecord, String> S_EMAIL = createField("S_EMAIL", org.jooq.impl.SQLDataType.VARCHAR(20), this, "email,S_EMAIL");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.S_LOGO</code>. logo,S_LOGO
     */
    public final TableField<HtlHotelRecord, String> S_LOGO = createField("S_LOGO", org.jooq.impl.SQLDataType.VARCHAR(255), this, "logo,S_LOGO");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.S_ONLINE</code>. 在线联系方式，QQ号，或？,online,S_ONLINE
     */
    public final TableField<HtlHotelRecord, String> S_ONLINE = createField("S_ONLINE", org.jooq.impl.SQLDataType.VARCHAR(20), this, "在线联系方式，QQ号，或？,online,S_ONLINE");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<HtlHotelRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.I_LEFT</code>. left,I_LEFT
     */
    public final TableField<HtlHotelRecord, Long> I_LEFT = createField("I_LEFT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "left,I_LEFT");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.I_LEVEL</code>. level,I_LEVEL
     */
    public final TableField<HtlHotelRecord, Integer> I_LEVEL = createField("I_LEVEL", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "level,I_LEVEL");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.I_RIGHT</code>. right,I_RIGHT
     */
    public final TableField<HtlHotelRecord, Long> I_RIGHT = createField("I_RIGHT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "right,I_RIGHT");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.R_LOCATION_ID</code>. locationId,R_LOCATION_ID
     */
    public final TableField<HtlHotelRecord, Long> R_LOCATION_ID = createField("R_LOCATION_ID", org.jooq.impl.SQLDataType.BIGINT, this, "locationId,R_LOCATION_ID");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.R_COMPANY_ID</code>. companyId,R_COMPANY_ID
     */
    public final TableField<HtlHotelRecord, Long> R_COMPANY_ID = createField("R_COMPANY_ID", org.jooq.impl.SQLDataType.BIGINT, this, "companyId,R_COMPANY_ID");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.R_LOGO_ATTACHMENT_ID</code>. logoAttachmentId,R_LOGO_ATTACHMENT_ID
     */
    public final TableField<HtlHotelRecord, Long> R_LOGO_ATTACHMENT_ID = createField("R_LOGO_ATTACHMENT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "logoAttachmentId,R_LOGO_ATTACHMENT_ID");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.R_PARENT_ID</code>. parentId,R_PARENT_ID
     */
    public final TableField<HtlHotelRecord, Long> R_PARENT_ID = createField("R_PARENT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "parentId,R_PARENT_ID");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<HtlHotelRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<HtlHotelRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<HtlHotelRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<HtlHotelRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<HtlHotelRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<HtlHotelRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.HTL_HOTEL.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<HtlHotelRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.HTL_HOTEL</code> table reference
     */
    public HtlHotel() {
        this(DSL.name("HTL_HOTEL"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_HOTEL</code> table reference
     */
    public HtlHotel(String alias) {
        this(DSL.name(alias), HTL_HOTEL);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_HOTEL</code> table reference
     */
    public HtlHotel(Name alias) {
        this(alias, HTL_HOTEL);
    }

    private HtlHotel(Name alias, Table<HtlHotelRecord> aliased) {
        this(alias, aliased, null);
    }

    private HtlHotel(Name alias, Table<HtlHotelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HTL_HOTEL_FK_HTL_HOTEL_R_COMPANY_ID, Indexes.HTL_HOTEL_FK_HTL_HOTEL_R_LOGO_ATTACHMENT_ID, Indexes.HTL_HOTEL_FK_HTL_HOTEL_R_PARENT_ID, Indexes.HTL_HOTEL_PRIMARY, Indexes.HTL_HOTEL_UK_HTL_HOTEL_R_LOCATION_ID_Z_SIGMA, Indexes.HTL_HOTEL_UK_HTL_HOTEL_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HtlHotelRecord, Long> getIdentity() {
        return Keys.IDENTITY_HTL_HOTEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HtlHotelRecord> getPrimaryKey() {
        return Keys.KEY_HTL_HOTEL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HtlHotelRecord>> getKeys() {
        return Arrays.<UniqueKey<HtlHotelRecord>>asList(Keys.KEY_HTL_HOTEL_PRIMARY, Keys.KEY_HTL_HOTEL_UK_HTL_HOTEL_S_CODE_Z_SIGMA, Keys.KEY_HTL_HOTEL_UK_HTL_HOTEL_R_LOCATION_ID_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlHotel as(String alias) {
        return new HtlHotel(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlHotel as(Name alias) {
        return new HtlHotel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlHotel rename(String name) {
        return new HtlHotel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlHotel rename(Name name) {
        return new HtlHotel(name, null);
    }
}
