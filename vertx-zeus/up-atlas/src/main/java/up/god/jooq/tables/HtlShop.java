/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.HtlShopRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlShop extends TableImpl<HtlShopRecord> {

    private static final long serialVersionUID = -112469439;

    /**
     * The reference instance of <code>DB_HTL.HTL_SHOP</code>
     */
    public static final HtlShop HTL_SHOP = new HtlShop();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HtlShopRecord> getRecordType() {
        return HtlShopRecord.class;
    }

    /**
     * The column <code>DB_HTL.HTL_SHOP.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<HtlShopRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.HTL_SHOP.T_COMMENT</code>. comment,T_COMMENT
     */
    public final TableField<HtlShopRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.HTL_SHOP.S_NAME</code>. name,S_NAME
     */
    public final TableField<HtlShopRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.HTL_SHOP.S_CODE</code>. code,S_CODE
     */
    public final TableField<HtlShopRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.HTL_SHOP.S_KEYWORD</code>. keyword,S_KEYWORD
     */
    public final TableField<HtlShopRecord, String> S_KEYWORD = createField("S_KEYWORD", org.jooq.impl.SQLDataType.VARCHAR(255), this, "keyword,S_KEYWORD");

    /**
     * The column <code>DB_HTL.HTL_SHOP.S_TITLE</code>. title,S_TITLE
     */
    public final TableField<HtlShopRecord, String> S_TITLE = createField("S_TITLE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "title,S_TITLE");

    /**
     * The column <code>DB_HTL.HTL_SHOP.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<HtlShopRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.HTL_SHOP.RLT_COMPENSATIONTYPE</code>. 赔偿类型,compensationType,RLT_COMPENSATIONTYPE
     */
    public final TableField<HtlShopRecord, Long> RLT_COMPENSATIONTYPE = createField("RLT_COMPENSATIONTYPE", org.jooq.impl.SQLDataType.BIGINT, this, "赔偿类型,compensationType,RLT_COMPENSATIONTYPE");

    /**
     * The column <code>DB_HTL.HTL_SHOP.RLT_MENUTYPE</code>. 菜本类型,menuType,RLT_MENUTYPE
     */
    public final TableField<HtlShopRecord, Long> RLT_MENUTYPE = createField("RLT_MENUTYPE", org.jooq.impl.SQLDataType.BIGINT, this, "菜本类型,menuType,RLT_MENUTYPE");

    /**
     * The column <code>DB_HTL.HTL_SHOP.RLT_PRODUCTTYPE</code>. 商品类型,productType,RLT_PRODUCTTYPE
     */
    public final TableField<HtlShopRecord, Long> RLT_PRODUCTTYPE = createField("RLT_PRODUCTTYPE", org.jooq.impl.SQLDataType.BIGINT, this, "商品类型,productType,RLT_PRODUCTTYPE");

    /**
     * The column <code>DB_HTL.HTL_SHOP.RLT_SHIFTTYPE</code>. 班别类型,shiftType,RLT_SHIFTTYPE
     */
    public final TableField<HtlShopRecord, Long> RLT_SHIFTTYPE = createField("RLT_SHIFTTYPE", org.jooq.impl.SQLDataType.BIGINT, this, "班别类型,shiftType,RLT_SHIFTTYPE");

    /**
     * The column <code>DB_HTL.HTL_SHOP.RLT_TYPE</code>. 店铺类型：在线？营业点？直营店？,type,RLT_TYPE
     */
    public final TableField<HtlShopRecord, Long> RLT_TYPE = createField("RLT_TYPE", org.jooq.impl.SQLDataType.BIGINT, this, "店铺类型：在线？营业点？直营店？,type,RLT_TYPE");

    /**
     * The column <code>DB_HTL.HTL_SHOP.R_DEPT_ID</code>. deptId,R_DEPT_ID
     */
    public final TableField<HtlShopRecord, Long> R_DEPT_ID = createField("R_DEPT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "deptId,R_DEPT_ID");

    /**
     * The column <code>DB_HTL.HTL_SHOP.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public final TableField<HtlShopRecord, Long> R_HOTEL_ID = createField("R_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT, this, "hotelId,R_HOTEL_ID");

    /**
     * The column <code>DB_HTL.HTL_SHOP.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<HtlShopRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.HTL_SHOP.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<HtlShopRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.HTL_SHOP.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<HtlShopRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.HTL_SHOP.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<HtlShopRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.HTL_SHOP.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<HtlShopRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.HTL_SHOP.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<HtlShopRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.HTL_SHOP.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<HtlShopRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.HTL_SHOP</code> table reference
     */
    public HtlShop() {
        this(DSL.name("HTL_SHOP"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_SHOP</code> table reference
     */
    public HtlShop(String alias) {
        this(DSL.name(alias), HTL_SHOP);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_SHOP</code> table reference
     */
    public HtlShop(Name alias) {
        this(alias, HTL_SHOP);
    }

    private HtlShop(Name alias, Table<HtlShopRecord> aliased) {
        this(alias, aliased, null);
    }

    private HtlShop(Name alias, Table<HtlShopRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HTL_SHOP_FK_HTL_SHOP_R_DEPT_ID, Indexes.HTL_SHOP_FK_HTL_SHOP_R_HOTEL_ID, Indexes.HTL_SHOP_PRIMARY, Indexes.HTL_SHOP_UK_HTL_SHOP_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HtlShopRecord, Long> getIdentity() {
        return Keys.IDENTITY_HTL_SHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HtlShopRecord> getPrimaryKey() {
        return Keys.KEY_HTL_SHOP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HtlShopRecord>> getKeys() {
        return Arrays.<UniqueKey<HtlShopRecord>>asList(Keys.KEY_HTL_SHOP_PRIMARY, Keys.KEY_HTL_SHOP_UK_HTL_SHOP_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlShop as(String alias) {
        return new HtlShop(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlShop as(Name alias) {
        return new HtlShop(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlShop rename(String name) {
        return new HtlShop(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlShop rename(Name name) {
        return new HtlShop(name, null);
    }
}
