/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VHtlDeptRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VHtlDept extends TableImpl<VHtlDeptRecord> {

    private static final long serialVersionUID = -1014905376;

    /**
     * The reference instance of <code>DB_HTL.v_htl_dept</code>
     */
    public static final VHtlDept V_HTL_DEPT = new VHtlDept();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VHtlDeptRecord> getRecordType() {
        return VHtlDeptRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_htl_dept.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VHtlDeptRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_htl_dept.D_S_CODE</code>. code,S_CODE
     */
    public final TableField<VHtlDeptRecord, String> D_S_CODE = createField("D_S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_htl_dept.D_S_NAME</code>. 部门名称,name,S_NAME
     */
    public final TableField<VHtlDeptRecord, String> D_S_NAME = createField("D_S_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "部门名称,name,S_NAME");

    /**
     * The column <code>DB_HTL.v_htl_dept.T_COMMENT</code>. 部门备注,comment,T_COMMENT
     */
    public final TableField<VHtlDeptRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "部门备注,comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.v_htl_dept.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<VHtlDeptRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.v_htl_dept.R_PARENT_ID</code>. parentId,R_PARENT_ID
     */
    public final TableField<VHtlDeptRecord, Long> R_PARENT_ID = createField("R_PARENT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "parentId,R_PARENT_ID");

    /**
     * The column <code>DB_HTL.v_htl_dept.S_REALNAME</code>. realname,S_REALNAME
     */
    public final TableField<VHtlDeptRecord, String> S_REALNAME = createField("S_REALNAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "realname,S_REALNAME");

    /**
     * The column <code>DB_HTL.v_htl_dept.P_S_NAME</code>. 部门名称,name,S_NAME
     */
    public final TableField<VHtlDeptRecord, String> P_S_NAME = createField("P_S_NAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "部门名称,name,S_NAME");

    /**
     * Create a <code>DB_HTL.v_htl_dept</code> table reference
     */
    public VHtlDept() {
        this(DSL.name("v_htl_dept"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_dept</code> table reference
     */
    public VHtlDept(String alias) {
        this(DSL.name(alias), V_HTL_DEPT);
    }

    /**
     * Create an aliased <code>DB_HTL.v_htl_dept</code> table reference
     */
    public VHtlDept(Name alias) {
        this(alias, V_HTL_DEPT);
    }

    private VHtlDept(Name alias, Table<VHtlDeptRecord> aliased) {
        this(alias, aliased, null);
    }

    private VHtlDept(Name alias, Table<VHtlDeptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlDept as(String alias) {
        return new VHtlDept(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VHtlDept as(Name alias) {
        return new VHtlDept(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlDept rename(String name) {
        return new VHtlDept(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VHtlDept rename(Name name) {
        return new VHtlDept(name, null);
    }
}
