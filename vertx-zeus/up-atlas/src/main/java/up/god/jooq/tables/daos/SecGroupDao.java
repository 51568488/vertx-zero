/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import up.god.jooq.tables.SecGroup;
import up.god.jooq.tables.records.SecGroupRecord;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecGroupDao extends DAOImpl<SecGroupRecord, up.god.jooq.tables.pojos.SecGroup, String> implements VertxDAO<up.god.jooq.tables.records.SecGroupRecord,up.god.jooq.tables.pojos.SecGroup,java.lang.String> {

    /**
     * Create a new SecGroupDao without any configuration
     */
    public SecGroupDao() {
        super(SecGroup.SEC_GROUP, up.god.jooq.tables.pojos.SecGroup.class);
    }

    /**
     * Create a new SecGroupDao with an attached configuration
     */
    public SecGroupDao(Configuration configuration) {
        super(SecGroup.SEC_GROUP, up.god.jooq.tables.pojos.SecGroup.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(up.god.jooq.tables.pojos.SecGroup object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByPkId(String... values) {
        return fetch(SecGroup.SEC_GROUP.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public up.god.jooq.tables.pojos.SecGroup fetchOneByPkId(String value) {
        return fetchOne(SecGroup.SEC_GROUP.PK_ID, value);
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByTComment(String... values) {
        return fetch(SecGroup.SEC_GROUP.T_COMMENT, values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchBySName(String... values) {
        return fetch(SecGroup.SEC_GROUP.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchBySCode(String... values) {
        return fetch(SecGroup.SEC_GROUP.S_CODE, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByJConfig(String... values) {
        return fetch(SecGroup.SEC_GROUP.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>I_LEFT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByILeft(Long... values) {
        return fetch(SecGroup.SEC_GROUP.I_LEFT, values);
    }

    /**
     * Fetch records that have <code>I_LEVEL IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByILevel(Integer... values) {
        return fetch(SecGroup.SEC_GROUP.I_LEVEL, values);
    }

    /**
     * Fetch records that have <code>I_RIGHT IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByIRight(Long... values) {
        return fetch(SecGroup.SEC_GROUP.I_RIGHT, values);
    }

    /**
     * Fetch records that have <code>R_PARENT_ID IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByRParentId(String... values) {
        return fetch(SecGroup.SEC_GROUP.R_PARENT_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByIsActive(Boolean... values) {
        return fetch(SecGroup.SEC_GROUP.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByZSigma(String... values) {
        return fetch(SecGroup.SEC_GROUP.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByZLanguage(String... values) {
        return fetch(SecGroup.SEC_GROUP.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByZCreateBy(String... values) {
        return fetch(SecGroup.SEC_GROUP.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(SecGroup.SEC_GROUP.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByZUpdateBy(String... values) {
        return fetch(SecGroup.SEC_GROUP.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<up.god.jooq.tables.pojos.SecGroup> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(SecGroup.SEC_GROUP.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByPkIdAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<up.god.jooq.tables.pojos.SecGroup> fetchOneByPkIdAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>T_COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByTCommentAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.T_COMMENT,values);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchBySNameAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.S_NAME,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.S_CODE,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>I_LEFT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByILeftAsync(List<Long> values) {
        return fetchAsync(SecGroup.SEC_GROUP.I_LEFT,values);
    }

    /**
     * Fetch records that have <code>I_LEVEL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByILevelAsync(List<Integer> values) {
        return fetchAsync(SecGroup.SEC_GROUP.I_LEVEL,values);
    }

    /**
     * Fetch records that have <code>I_RIGHT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByIRightAsync(List<Long> values) {
        return fetchAsync(SecGroup.SEC_GROUP.I_RIGHT,values);
    }

    /**
     * Fetch records that have <code>R_PARENT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByRParentIdAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.R_PARENT_ID,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(SecGroup.SEC_GROUP.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(SecGroup.SEC_GROUP.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(SecGroup.SEC_GROUP.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<up.god.jooq.tables.pojos.SecGroup>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(SecGroup.SEC_GROUP.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
