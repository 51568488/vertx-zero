/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.SecRelUserRoleRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecRelUserRole extends TableImpl<SecRelUserRoleRecord> {

    private static final long serialVersionUID = 46245809;

    /**
     * The reference instance of <code>DB_HTL.SEC_REL_USER_ROLE</code>
     */
    public static final SecRelUserRole SEC_REL_USER_ROLE = new SecRelUserRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SecRelUserRoleRecord> getRecordType() {
        return SecRelUserRoleRecord.class;
    }

    /**
     * The column <code>DB_HTL.SEC_REL_USER_ROLE.R_ROLE_ID</code>. roleId,R_ROLE_ID
     */
    public final TableField<SecRelUserRoleRecord, String> R_ROLE_ID = createField("R_ROLE_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "roleId,R_ROLE_ID");

    /**
     * The column <code>DB_HTL.SEC_REL_USER_ROLE.R_USER_ID</code>. userId,R_USER_ID
     */
    public final TableField<SecRelUserRoleRecord, String> R_USER_ID = createField("R_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "userId,R_USER_ID");

    /**
     * Create a <code>DB_HTL.SEC_REL_USER_ROLE</code> table reference
     */
    public SecRelUserRole() {
        this(DSL.name("SEC_REL_USER_ROLE"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.SEC_REL_USER_ROLE</code> table reference
     */
    public SecRelUserRole(String alias) {
        this(DSL.name(alias), SEC_REL_USER_ROLE);
    }

    /**
     * Create an aliased <code>DB_HTL.SEC_REL_USER_ROLE</code> table reference
     */
    public SecRelUserRole(Name alias) {
        this(alias, SEC_REL_USER_ROLE);
    }

    private SecRelUserRole(Name alias, Table<SecRelUserRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private SecRelUserRole(Name alias, Table<SecRelUserRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SEC_REL_USER_ROLE_FK_SEC_REL_UR_ROLE, Indexes.SEC_REL_USER_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SecRelUserRoleRecord> getPrimaryKey() {
        return Keys.KEY_SEC_REL_USER_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SecRelUserRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<SecRelUserRoleRecord>>asList(Keys.KEY_SEC_REL_USER_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecRelUserRole as(String alias) {
        return new SecRelUserRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecRelUserRole as(Name alias) {
        return new SecRelUserRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SecRelUserRole rename(String name) {
        return new SecRelUserRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SecRelUserRole rename(Name name) {
        return new SecRelUserRole(name, null);
    }
}
