/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IVHtlTravelerToday extends Serializable {

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.PK_ID</code>. uniqueId,PK_ID
     */
    public IVHtlTravelerToday setPkId(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.S_SERIAL</code>. serial,S_SERIAL
     */
    public IVHtlTravelerToday setSSerial(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.S_SERIAL</code>. serial,S_SERIAL
     */
    public String getSSerial();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.V_HOTEL_ID</code>. hotelId,V_HOTEL_ID
     */
    public IVHtlTravelerToday setVHotelId(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.V_HOTEL_ID</code>. hotelId,V_HOTEL_ID
     */
    public Long getVHotelId();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.IS_SECRET</code>. secret,IS_SECRET
     */
    public IVHtlTravelerToday setIsSecret(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.IS_SECRET</code>. secret,IS_SECRET
     */
    public Boolean getIsSecret();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.S_ROOM_NUM</code>. roomNumber,S_ROOM_NUM
     */
    public IVHtlTravelerToday setSRoomNum(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.S_ROOM_NUM</code>. roomNumber,S_ROOM_NUM
     */
    public String getSRoomNum();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.S_REALNAME</code>. realname,S_REALNAME
     */
    public IVHtlTravelerToday setSRealname(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.S_REALNAME</code>. realname,S_REALNAME
     */
    public String getSRealname();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.S_MOBILE</code>. mobile,S_MOBILE
     */
    public IVHtlTravelerToday setSMobile(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.S_MOBILE</code>. mobile,S_MOBILE
     */
    public String getSMobile();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public IVHtlTravelerToday setSNickname(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.S_NICKNAME</code>. nickname,S_NICKNAME
     */
    public String getSNickname();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.S_NATION</code>. nation,S_NATION
     */
    public IVHtlTravelerToday setSNation(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.S_NATION</code>. nation,S_NATION
     */
    public String getSNation();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.S_COUNTRY</code>. country,S_COUNTRY
     */
    public IVHtlTravelerToday setSCountry(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.S_COUNTRY</code>. country,S_COUNTRY
     */
    public String getSCountry();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.D_BIRTHDAY</code>. birthday,D_BIRTHDAY
     */
    public IVHtlTravelerToday setDBirthday(LocalDate value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.D_BIRTHDAY</code>. birthday,D_BIRTHDAY
     */
    public LocalDate getDBirthday();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.D_INCP_TIME</code>. inoccupTime,D_INCP_TIME
     */
    public IVHtlTravelerToday setDIncpTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.D_INCP_TIME</code>. inoccupTime,D_INCP_TIME
     */
    public LocalDateTime getDIncpTime();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.IS_MALE</code>. male,IS_MALE
     */
    public IVHtlTravelerToday setIsMale(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.IS_MALE</code>. male,IS_MALE
     */
    public Boolean getIsMale();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.S_NTV_PLACE</code>. nativePlace,S_NTV_PLACE
     */
    public IVHtlTravelerToday setSNtvPlace(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.S_NTV_PLACE</code>. nativePlace,S_NTV_PLACE
     */
    public String getSNtvPlace();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.RLT_IDC_TYPE</code>. idcType,RLT_IDC_TYPE
     */
    public IVHtlTravelerToday setRltIdcType(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.RLT_IDC_TYPE</code>. idcType,RLT_IDC_TYPE
     */
    public Long getRltIdcType();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.S_IDC_NUM</code>. idcNumber,S_IDC_NUM
     */
    public IVHtlTravelerToday setSIdcNum(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.S_IDC_NUM</code>. idcNumber,S_IDC_NUM
     */
    public String getSIdcNum();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.I_INOCCUPS</code>. inoccups,I_INOCCUPS
     */
    public IVHtlTravelerToday setIInoccups(Integer value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.I_INOCCUPS</code>. inoccups,I_INOCCUPS
     */
    public Integer getIInoccups();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.T_ADDRESS</code>. address,T_ADDRESS
     */
    public IVHtlTravelerToday setTAddress(String value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.T_ADDRESS</code>. address,T_ADDRESS
     */
    public String getTAddress();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.IS_UPLOADED</code>. uploaded,IS_UPLOADED
     */
    public IVHtlTravelerToday setIsUploaded(Boolean value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.IS_UPLOADED</code>. uploaded,IS_UPLOADED
     */
    public Boolean getIsUploaded();

    /**
     * Setter for <code>DB_HTL.v_htl_traveler_today.RLT_TRAVELER_STATUS</code>. status,RLT_TRAVELER_STATUS
     */
    public IVHtlTravelerToday setRltTravelerStatus(Long value);

    /**
     * Getter for <code>DB_HTL.v_htl_traveler_today.RLT_TRAVELER_STATUS</code>. status,RLT_TRAVELER_STATUS
     */
    public Long getRltTravelerStatus();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IVHtlTravelerToday
     */
    public void from(up.god.jooq.tables.interfaces.IVHtlTravelerToday from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IVHtlTravelerToday
     */
    public <E extends up.god.jooq.tables.interfaces.IVHtlTravelerToday> E into(E into);

    default IVHtlTravelerToday fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        setSSerial(json.getString("S_SERIAL"));
        setVHotelId(json.getLong("V_HOTEL_ID"));
        setIsSecret(json.getBoolean("IS_SECRET"));
        setSRoomNum(json.getString("S_ROOM_NUM"));
        setSRealname(json.getString("S_REALNAME"));
        setSMobile(json.getString("S_MOBILE"));
        setSNickname(json.getString("S_NICKNAME"));
        setSNation(json.getString("S_NATION"));
        setSCountry(json.getString("S_COUNTRY"));
        // Omitting unrecognized type java.time.LocalDate for column D_BIRTHDAY!
        // Omitting unrecognized type java.time.LocalDateTime for column D_INCP_TIME!
        setIsMale(json.getBoolean("IS_MALE"));
        setSNtvPlace(json.getString("S_NTV_PLACE"));
        setRltIdcType(json.getLong("RLT_IDC_TYPE"));
        setSIdcNum(json.getString("S_IDC_NUM"));
        setIInoccups(json.getInteger("I_INOCCUPS"));
        setTAddress(json.getString("T_ADDRESS"));
        setIsUploaded(json.getBoolean("IS_UPLOADED"));
        setRltTravelerStatus(json.getLong("RLT_TRAVELER_STATUS"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("S_SERIAL",getSSerial());
        json.put("V_HOTEL_ID",getVHotelId());
        json.put("IS_SECRET",getIsSecret());
        json.put("S_ROOM_NUM",getSRoomNum());
        json.put("S_REALNAME",getSRealname());
        json.put("S_MOBILE",getSMobile());
        json.put("S_NICKNAME",getSNickname());
        json.put("S_NATION",getSNation());
        json.put("S_COUNTRY",getSCountry());
        // Omitting unrecognized type java.time.LocalDate for column D_BIRTHDAY!
        // Omitting unrecognized type java.time.LocalDateTime for column D_INCP_TIME!
        json.put("IS_MALE",getIsMale());
        json.put("S_NTV_PLACE",getSNtvPlace());
        json.put("RLT_IDC_TYPE",getRltIdcType());
        json.put("S_IDC_NUM",getSIdcNum());
        json.put("I_INOCCUPS",getIInoccups());
        json.put("T_ADDRESS",getTAddress());
        json.put("IS_UPLOADED",getIsUploaded());
        json.put("RLT_TRAVELER_STATUS",getRltTravelerStatus());
        return json;
    }

}
