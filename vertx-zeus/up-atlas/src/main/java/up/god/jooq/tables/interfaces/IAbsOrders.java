/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IAbsOrders extends Serializable {

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.PK_ID</code>. uniqueId,PK_ID
     */
    public IAbsOrders setPkId(Long value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.PK_ID</code>. uniqueId,PK_ID
     */
    public Long getPkId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.D_AMOUNT_ACTUAL</code>. 【实际金额】该订单所有订单项减去折扣后的实际金额（amountActual x quantity）总和。,amountActual,D_AMOUNT_ACTUAL
     */
    public IAbsOrders setDAmountActual(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.D_AMOUNT_ACTUAL</code>. 【实际金额】该订单所有订单项减去折扣后的实际金额（amountActual x quantity）总和。,amountActual,D_AMOUNT_ACTUAL
     */
    public BigDecimal getDAmountActual();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.D_AMOUNT_TAXED</code>. 【税后金额】该订单税后的金额，amountTaxed = amountActual x ( 1 - taxRate )。,amountTaxed,D_AMOUNT_TAXED
     */
    public IAbsOrders setDAmountTaxed(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.D_AMOUNT_TAXED</code>. 【税后金额】该订单税后的金额，amountTaxed = amountActual x ( 1 - taxRate )。,amountTaxed,D_AMOUNT_TAXED
     */
    public BigDecimal getDAmountTaxed();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.D_AMOUNT_TOTAL</code>. 【总金额】该订单所有订单项中原始金额（amountPrice x quantity）总和。,amountTotal,D_AMOUNT_TOTAL
     */
    public IAbsOrders setDAmountTotal(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.D_AMOUNT_TOTAL</code>. 【总金额】该订单所有订单项中原始金额（amountPrice x quantity）总和。,amountTotal,D_AMOUNT_TOTAL
     */
    public BigDecimal getDAmountTotal();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.D_FINISHED_TIME</code>. 【完成时间】该订单关闭的时间，或者被取消的时间。,finishedTime,D_FINISHED_TIME
     */
    public IAbsOrders setDFinishedTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.D_FINISHED_TIME</code>. 【完成时间】该订单关闭的时间，或者被取消的时间。,finishedTime,D_FINISHED_TIME
     */
    public LocalDateTime getDFinishedTime();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.D_ORDER_TIME</code>. 【订单时间】下订/制单时间。,orderTime,D_ORDER_TIME
     */
    public IAbsOrders setDOrderTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.D_ORDER_TIME</code>. 【订单时间】下订/制单时间。,orderTime,D_ORDER_TIME
     */
    public LocalDateTime getDOrderTime();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.D_TAX</code>. 【订单税】该订单的税信息：tax = amountActual x taxRate,tax,D_TAX
     */
    public IAbsOrders setDTax(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.D_TAX</code>. 【订单税】该订单的税信息：tax = amountActual x taxRate,tax,D_TAX
     */
    public BigDecimal getDTax();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.D_TAX_RATE</code>. 【税率】该订单的税率信息。,taxRate,D_TAX_RATE
     */
    public IAbsOrders setDTaxRate(BigDecimal value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.D_TAX_RATE</code>. 【税率】该订单的税率信息。,taxRate,D_TAX_RATE
     */
    public BigDecimal getDTaxRate();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.S_CODE</code>. code,S_CODE
     */
    public IAbsOrders setSCode(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.S_CREDENCE</code>. credence,S_CREDENCE
     */
    public IAbsOrders setSCredence(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.S_CREDENCE</code>. credence,S_CREDENCE
     */
    public String getSCredence();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.S_SERIAL</code>. serial,S_SERIAL
     */
    public IAbsOrders setSSerial(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.S_SERIAL</code>. serial,S_SERIAL
     */
    public String getSSerial();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.S_STATUS</code>. orderStatus,S_STATUS
     */
    public IAbsOrders setSStatus(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.S_STATUS</code>. orderStatus,S_STATUS
     */
    public String getSStatus();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.J_CONFIG</code>. config,J_CONFIG
     */
    public IAbsOrders setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.H_CAT_ID</code>. REF: SYS_CATEGORY【订单类型】当前订单对应的订单类型ID。,category,H_CAT_ID
     */
    public IAbsOrders setHCatId(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.H_CAT_ID</code>. REF: SYS_CATEGORY【订单类型】当前订单对应的订单类型ID。,category,H_CAT_ID
     */
    public String getHCatId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.R_COMPANY_ID</code>. REF: RES_COMPANY【所属公司】当前订单所属公司ID。,companyId,R_COMPANY_ID
     */
    public IAbsOrders setRCompanyId(Long value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.R_COMPANY_ID</code>. REF: RES_COMPANY【所属公司】当前订单所属公司ID。,companyId,R_COMPANY_ID
     */
    public Long getRCompanyId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.R_CURRENCY_ID</code>. REF: RES_CURRENCY【关联货币】当前订单使用的货币信息。,currencyId,R_CURRENCY_ID
     */
    public IAbsOrders setRCurrencyId(Long value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.R_CURRENCY_ID</code>. REF: RES_CURRENCY【关联货币】当前订单使用的货币信息。,currencyId,R_CURRENCY_ID
     */
    public Long getRCurrencyId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.R_INCOTERM_ID</code>. REF: ATM_INCOTERM【贸易术语】当前订单使用的贸易术语。,incotermId,R_INCOTERM_ID
     */
    public IAbsOrders setRIncotermId(Long value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.R_INCOTERM_ID</code>. REF: ATM_INCOTERM【贸易术语】当前订单使用的贸易术语。,incotermId,R_INCOTERM_ID
     */
    public Long getRIncotermId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.R_PARTNER_ID</code>. REF: RES_PARTNER【所属伙伴】当前订单对应的供应商、协议单位对应ID。,partnerId,R_PARTNER_ID
     */
    public IAbsOrders setRPartnerId(Long value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.R_PARTNER_ID</code>. REF: RES_PARTNER【所属伙伴】当前订单对应的供应商、协议单位对应ID。,partnerId,R_PARTNER_ID
     */
    public Long getRPartnerId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.R_WH_ID</code>. REF: PSI_WAREHOUSE【所属仓库】当前订单所属仓库信息（记录位置，进销存专用）。,warehouseId,R_WH_ID
     */
    public IAbsOrders setRWhId(Long value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.R_WH_ID</code>. REF: PSI_WAREHOUSE【所属仓库】当前订单所属仓库信息（记录位置，进销存专用）。,warehouseId,R_WH_ID
     */
    public Long getRWhId();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.IS_APPROVAL</code>. 【是否审核】当前订单是否已经审核？,approval,IS_APPROVAL
     */
    public IAbsOrders setIsApproval(Boolean value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.IS_APPROVAL</code>. 【是否审核】当前订单是否已经审核？,approval,IS_APPROVAL
     */
    public Boolean getIsApproval();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.IS_INVOICE</code>. 【是否开票】当前订单是否开了发票？,invoice,IS_INVOICE
     */
    public IAbsOrders setIsInvoice(Boolean value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.IS_INVOICE</code>. 【是否开票】当前订单是否开了发票？,invoice,IS_INVOICE
     */
    public Boolean getIsInvoice();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public IAbsOrders setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public IAbsOrders setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public IAbsOrders setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public IAbsOrders setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public IAbsOrders setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public IAbsOrders setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.ABS_ORDERS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public IAbsOrders setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.ABS_ORDERS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IAbsOrders
     */
    public void from(up.god.jooq.tables.interfaces.IAbsOrders from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IAbsOrders
     */
    public <E extends up.god.jooq.tables.interfaces.IAbsOrders> E into(E into);

    default IAbsOrders fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getLong("PK_ID"));
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_TAXED!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_TOTAL!
        // Omitting unrecognized type java.time.LocalDateTime for column D_FINISHED_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column D_ORDER_TIME!
        // Omitting unrecognized type java.math.BigDecimal for column D_TAX!
        // Omitting unrecognized type java.math.BigDecimal for column D_TAX_RATE!
        setSCode(json.getString("S_CODE"));
        setSCredence(json.getString("S_CREDENCE"));
        setSSerial(json.getString("S_SERIAL"));
        setSStatus(json.getString("S_STATUS"));
        setJConfig(json.getString("J_CONFIG"));
        setHCatId(json.getString("H_CAT_ID"));
        setRCompanyId(json.getLong("R_COMPANY_ID"));
        setRCurrencyId(json.getLong("R_CURRENCY_ID"));
        setRIncotermId(json.getLong("R_INCOTERM_ID"));
        setRPartnerId(json.getLong("R_PARTNER_ID"));
        setRWhId(json.getLong("R_WH_ID"));
        setIsApproval(json.getBoolean("IS_APPROVAL"));
        setIsInvoice(json.getBoolean("IS_INVOICE"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_ACTUAL!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_TAXED!
        // Omitting unrecognized type java.math.BigDecimal for column D_AMOUNT_TOTAL!
        // Omitting unrecognized type java.time.LocalDateTime for column D_FINISHED_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column D_ORDER_TIME!
        // Omitting unrecognized type java.math.BigDecimal for column D_TAX!
        // Omitting unrecognized type java.math.BigDecimal for column D_TAX_RATE!
        json.put("S_CODE",getSCode());
        json.put("S_CREDENCE",getSCredence());
        json.put("S_SERIAL",getSSerial());
        json.put("S_STATUS",getSStatus());
        json.put("J_CONFIG",getJConfig());
        json.put("H_CAT_ID",getHCatId());
        json.put("R_COMPANY_ID",getRCompanyId());
        json.put("R_CURRENCY_ID",getRCurrencyId());
        json.put("R_INCOTERM_ID",getRIncotermId());
        json.put("R_PARTNER_ID",getRPartnerId());
        json.put("R_WH_ID",getRWhId());
        json.put("IS_APPROVAL",getIsApproval());
        json.put("IS_INVOICE",getIsInvoice());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
