/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.Indexes;
import up.god.jooq.Keys;
import up.god.jooq.tables.records.HtlOrderItemsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HtlOrderItems extends TableImpl<HtlOrderItemsRecord> {

    private static final long serialVersionUID = 1693396450;

    /**
     * The reference instance of <code>DB_HTL.HTL_ORDER_ITEMS</code>
     */
    public static final HtlOrderItems HTL_ORDER_ITEMS = new HtlOrderItems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HtlOrderItemsRecord> getRecordType() {
        return HtlOrderItemsRecord.class;
    }

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<HtlOrderItemsRecord, Long> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.D_AMOUNT_ACTUAL</code>. 【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL
     */
    public final TableField<HtlOrderItemsRecord, BigDecimal> D_AMOUNT_ACTUAL = createField("D_AMOUNT_ACTUAL", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "【实际单价】该明细的实际单价：amountActual = amountPrice x ( 1 - discount ),amountActual,D_AMOUNT_ACTUAL");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.D_AMOUNT_PRICE</code>. 【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE
     */
    public final TableField<HtlOrderItemsRecord, BigDecimal> D_AMOUNT_PRICE = createField("D_AMOUNT_PRICE", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "【单价】该订单明细对应商品的单价。,amountPrice,D_AMOUNT_PRICE");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.D_AMOUNT_TOTAL</code>. 【总价】该明细的总价格：amountTotal = amountActual x quantity,amountTotal,D_AMOUNT_TOTAL
     */
    public final TableField<HtlOrderItemsRecord, BigDecimal> D_AMOUNT_TOTAL = createField("D_AMOUNT_TOTAL", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "【总价】该明细的总价格：amountTotal = amountActual x quantity,amountTotal,D_AMOUNT_TOTAL");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.D_ARRIVE_TIME</code>. arriveTime,D_ARRIVE_TIME
     */
    public final TableField<HtlOrderItemsRecord, LocalDateTime> D_ARRIVE_TIME = createField("D_ARRIVE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "arriveTime,D_ARRIVE_TIME");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.D_BREKKER_PRICE</code>. brekkerPrice,D_BREKKER_PRICE
     */
    public final TableField<HtlOrderItemsRecord, BigDecimal> D_BREKKER_PRICE = createField("D_BREKKER_PRICE", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "brekkerPrice,D_BREKKER_PRICE");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.D_DISCOUNT</code>. 【折扣率】格式为小数，单位%，用于记录当前明细的折扣率,discount,D_DISCOUNT
     */
    public final TableField<HtlOrderItemsRecord, BigDecimal> D_DISCOUNT = createField("D_DISCOUNT", org.jooq.impl.SQLDataType.DECIMAL(3, 2), this, "【折扣率】格式为小数，单位%，用于记录当前明细的折扣率,discount,D_DISCOUNT");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.D_LEAVE_TIME</code>. leaveTime,D_LEAVE_TIME
     */
    public final TableField<HtlOrderItemsRecord, LocalDateTime> D_LEAVE_TIME = createField("D_LEAVE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "leaveTime,D_LEAVE_TIME");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.S_CODE</code>. code,S_CODE
     */
    public final TableField<HtlOrderItemsRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.S_SERIAL</code>. REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL
     */
    public final TableField<HtlOrderItemsRecord, String> S_SERIAL = createField("S_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "REF:SYS_NUMBER【订单明细编号】系统自动生成。,serial,S_SERIAL");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<HtlOrderItemsRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.I_BK_TICKET</code>. brekkerTicket,I_BK_TICKET
     */
    public final TableField<HtlOrderItemsRecord, Integer> I_BK_TICKET = createField("I_BK_TICKET", org.jooq.impl.SQLDataType.INTEGER, this, "brekkerTicket,I_BK_TICKET");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.I_DR_TICKET</code>. dinnerTicket,I_DR_TICKET
     */
    public final TableField<HtlOrderItemsRecord, Integer> I_DR_TICKET = createField("I_DR_TICKET", org.jooq.impl.SQLDataType.INTEGER, this, "dinnerTicket,I_DR_TICKET");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.I_INSIDE_DAYS</code>. insideDays,I_INSIDE_DAYS
     */
    public final TableField<HtlOrderItemsRecord, Integer> I_INSIDE_DAYS = createField("I_INSIDE_DAYS", org.jooq.impl.SQLDataType.INTEGER, this, "insideDays,I_INSIDE_DAYS");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.I_INSIDE_PERSONS</code>. insidePersons,I_INSIDE_PERSONS
     */
    public final TableField<HtlOrderItemsRecord, Integer> I_INSIDE_PERSONS = createField("I_INSIDE_PERSONS", org.jooq.impl.SQLDataType.INTEGER, this, "insidePersons,I_INSIDE_PERSONS");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.I_LH_TICKET</code>. lunchTicket,I_LH_TICKET
     */
    public final TableField<HtlOrderItemsRecord, Integer> I_LH_TICKET = createField("I_LH_TICKET", org.jooq.impl.SQLDataType.INTEGER, this, "lunchTicket,I_LH_TICKET");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.I_QUANTITY</code>. 【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY
     */
    public final TableField<HtlOrderItemsRecord, Integer> I_QUANTITY = createField("I_QUANTITY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "【数量】该订单明细对应的商品数量，一条明细记录中仅允许一种商品。,quantity,I_QUANTITY");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.I_RCOUNTER</code>. roomCounter,I_RCOUNTER
     */
    public final TableField<HtlOrderItemsRecord, Integer> I_RCOUNTER = createField("I_RCOUNTER", org.jooq.impl.SQLDataType.INTEGER, this, "roomCounter,I_RCOUNTER");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.I_SP_TICKET</code>. supperTicket,I_SP_TICKET
     */
    public final TableField<HtlOrderItemsRecord, Integer> I_SP_TICKET = createField("I_SP_TICKET", org.jooq.impl.SQLDataType.INTEGER, this, "supperTicket,I_SP_TICKET");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.R_CODE_COMMISSION_ID</code>. codeCommission,R_CODE_COMMISSION_ID
     */
    public final TableField<HtlOrderItemsRecord, Long> R_CODE_COMMISSION_ID = createField("R_CODE_COMMISSION_ID", org.jooq.impl.SQLDataType.BIGINT, this, "codeCommission,R_CODE_COMMISSION_ID");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.R_CODE_GROUP_ID</code>. codeGroup,R_CODE_GROUP_ID
     */
    public final TableField<HtlOrderItemsRecord, Long> R_CODE_GROUP_ID = createField("R_CODE_GROUP_ID", org.jooq.impl.SQLDataType.BIGINT, this, "codeGroup,R_CODE_GROUP_ID");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.R_CODE_PRICE_ID</code>. codePrice,R_CODE_PRICE_ID
     */
    public final TableField<HtlOrderItemsRecord, Long> R_CODE_PRICE_ID = createField("R_CODE_PRICE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "codePrice,R_CODE_PRICE_ID");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.R_ORDER_ID</code>. REF：HTL_ORDERS【订单ID】该明细关联的订单ID值,orderId,R_ORDER_ID
     */
    public final TableField<HtlOrderItemsRecord, String> R_ORDER_ID = createField("R_ORDER_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "REF：HTL_ORDERS【订单ID】该明细关联的订单ID值,orderId,R_ORDER_ID");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.R_ROOM_TYPE_ID</code>. roomTypeId,R_ROOM_TYPE_ID
     */
    public final TableField<HtlOrderItemsRecord, Long> R_ROOM_TYPE_ID = createField("R_ROOM_TYPE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "roomTypeId,R_ROOM_TYPE_ID");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.IS_BREKKER</code>. brekker,IS_BREKKER
     */
    public final TableField<HtlOrderItemsRecord, Boolean> IS_BREKKER = createField("IS_BREKKER", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "brekker,IS_BREKKER");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.IS_POS</code>. pos,IS_POS
     */
    public final TableField<HtlOrderItemsRecord, Boolean> IS_POS = createField("IS_POS", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "pos,IS_POS");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<HtlOrderItemsRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<HtlOrderItemsRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<HtlOrderItemsRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<HtlOrderItemsRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<HtlOrderItemsRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<HtlOrderItemsRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.HTL_ORDER_ITEMS.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<HtlOrderItemsRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.HTL_ORDER_ITEMS</code> table reference
     */
    public HtlOrderItems() {
        this(DSL.name("HTL_ORDER_ITEMS"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_ORDER_ITEMS</code> table reference
     */
    public HtlOrderItems(String alias) {
        this(DSL.name(alias), HTL_ORDER_ITEMS);
    }

    /**
     * Create an aliased <code>DB_HTL.HTL_ORDER_ITEMS</code> table reference
     */
    public HtlOrderItems(Name alias) {
        this(alias, HTL_ORDER_ITEMS);
    }

    private HtlOrderItems(Name alias, Table<HtlOrderItemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private HtlOrderItems(Name alias, Table<HtlOrderItemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HTL_ORDER_ITEMS_FK_HTL_ORDER_ITEMS_R_CODE_COMMISSION_ID, Indexes.HTL_ORDER_ITEMS_FK_HTL_ORDER_ITEMS_R_CODE_GROUP_ID, Indexes.HTL_ORDER_ITEMS_FK_HTL_ORDER_ITEMS_R_CODE_PRICE_ID, Indexes.HTL_ORDER_ITEMS_FK_HTL_ORDER_ITEMS_R_ORDER_ID, Indexes.HTL_ORDER_ITEMS_FK_HTL_ORDER_ITEMS_R_ROOM_TYPE_ID, Indexes.HTL_ORDER_ITEMS_PRIMARY, Indexes.HTL_ORDER_ITEMS_UK_HTL_ORDER_ITEMS_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HtlOrderItemsRecord, Long> getIdentity() {
        return Keys.IDENTITY_HTL_ORDER_ITEMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HtlOrderItemsRecord> getPrimaryKey() {
        return Keys.KEY_HTL_ORDER_ITEMS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HtlOrderItemsRecord>> getKeys() {
        return Arrays.<UniqueKey<HtlOrderItemsRecord>>asList(Keys.KEY_HTL_ORDER_ITEMS_PRIMARY, Keys.KEY_HTL_ORDER_ITEMS_UK_HTL_ORDER_ITEMS_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlOrderItems as(String alias) {
        return new HtlOrderItems(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtlOrderItems as(Name alias) {
        return new HtlOrderItems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlOrderItems rename(String name) {
        return new HtlOrderItems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HtlOrderItems rename(Name name) {
        return new HtlOrderItems(name, null);
    }
}
