/*
 * This file is generated by jOOQ.
*/
package up.god.jooq.tables;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.god.jooq.DbHtl;
import up.god.jooq.tables.records.VCatHtlRentRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VCatHtlRent extends TableImpl<VCatHtlRentRecord> {

    private static final long serialVersionUID = 707852909;

    /**
     * The reference instance of <code>DB_HTL.v_cat_htl_rent</code>
     */
    public static final VCatHtlRent V_CAT_HTL_RENT = new VCatHtlRent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VCatHtlRentRecord> getRecordType() {
        return VCatHtlRentRecord.class;
    }

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.A_PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<VCatHtlRentRecord, Long> A_PK_ID = createField("A_PK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.S_THING</code>. 租借物品名称,thing,S_THING
     */
    public final TableField<VCatHtlRentRecord, String> S_THING = createField("S_THING", org.jooq.impl.SQLDataType.VARCHAR(64), this, "租借物品名称,thing,S_THING");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.S_CONTACT</code>. 联系人,contact,S_CONTACT
     */
    public final TableField<VCatHtlRentRecord, String> S_CONTACT = createField("S_CONTACT", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "联系人,contact,S_CONTACT");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.S_CALL</code>. 联系电话,call,S_CALL
     */
    public final TableField<VCatHtlRentRecord, String> S_CALL = createField("S_CALL", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "联系电话,call,S_CALL");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.T_COMMENT</code>. comment,T_COMMENT
     */
    public final TableField<VCatHtlRentRecord, String> T_COMMENT = createField("T_COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "comment,T_COMMENT");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<VCatHtlRentRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<VCatHtlRentRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.R_HOTEL_ID</code>. hotelId,R_HOTEL_ID
     */
    public final TableField<VCatHtlRentRecord, Long> R_HOTEL_ID = createField("R_HOTEL_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "hotelId,R_HOTEL_ID");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.S_NAME</code>. name,S_NAME
     */
    public final TableField<VCatHtlRentRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.C_S_CODE</code>. code,S_CODE
     */
    public final TableField<VCatHtlRentRecord, String> C_S_CODE = createField("C_S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.v_cat_htl_rent.C_S_TYPE</code>. REF：TABULAR -&gt; 类型本身分类，可指定不同模块,type,S_TYPE
     */
    public final TableField<VCatHtlRentRecord, String> C_S_TYPE = createField("C_S_TYPE", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "REF：TABULAR -> 类型本身分类，可指定不同模块,type,S_TYPE");

    /**
     * Create a <code>DB_HTL.v_cat_htl_rent</code> table reference
     */
    public VCatHtlRent() {
        this(DSL.name("v_cat_htl_rent"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.v_cat_htl_rent</code> table reference
     */
    public VCatHtlRent(String alias) {
        this(DSL.name(alias), V_CAT_HTL_RENT);
    }

    /**
     * Create an aliased <code>DB_HTL.v_cat_htl_rent</code> table reference
     */
    public VCatHtlRent(Name alias) {
        this(alias, V_CAT_HTL_RENT);
    }

    private VCatHtlRent(Name alias, Table<VCatHtlRentRecord> aliased) {
        this(alias, aliased, null);
    }

    private VCatHtlRent(Name alias, Table<VCatHtlRentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VCatHtlRent as(String alias) {
        return new VCatHtlRent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VCatHtlRent as(Name alias) {
        return new VCatHtlRent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VCatHtlRent rename(String name) {
        return new VCatHtlRent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VCatHtlRent rename(Name name) {
        return new VCatHtlRent(name, null);
    }
}
